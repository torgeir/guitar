// Compiled by ClojureScript 1.10.773 {:static-fns true, :optimize-constants true}
goog.provide('sci.impl.namespaces');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('cljs.reader');
goog.require('clojure.set');
goog.require('clojure.string');
goog.require('clojure.walk');
goog.require('sci.impl.core_protocols');
goog.require('sci.impl.hierarchies');
goog.require('sci.impl.io');
goog.require('sci.impl.macros');
goog.require('sci.impl.multimethods');
goog.require('sci.impl.parser');
goog.require('sci.impl.protocols');
goog.require('sci.impl.read');
goog.require('sci.impl.records');
goog.require('sci.impl.reify');
goog.require('sci.impl.types');
goog.require('sci.impl.utils');
goog.require('sci.impl.vars');
sci.impl.namespaces.clojure_core_ns = sci.impl.vars.__GT_SciNamespace(cljs.core.cst$sym$clojure$core,null);
sci.impl.namespaces.inlined_vars = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 90, [cljs.core.cst$sym$_PLUS__SINGLEQUOTE_,"null",cljs.core.cst$sym$unchecked_DASH_remainder_DASH_int,"null",cljs.core.cst$sym$unchecked_DASH_subtract_DASH_int,"null",cljs.core.cst$sym$dec_SINGLEQUOTE_,"null",cljs.core.cst$sym$short_DASH_array,"null",cljs.core.cst$sym$bit_DASH_shift_DASH_right,"null",cljs.core.cst$sym$aget,"null",cljs.core.cst$sym$_EQ_,"null",cljs.core.cst$sym$boolean,"null",cljs.core.cst$sym$bit_DASH_shift_DASH_left,"null",cljs.core.cst$sym$aclone,"null",cljs.core.cst$sym$dec,"null",cljs.core.cst$sym$_LT_,"null",cljs.core.cst$sym$char,"null",cljs.core.cst$sym$unchecked_DASH_long,"null",cljs.core.cst$sym$unchecked_DASH_negate,"null",cljs.core.cst$sym$unchecked_DASH_inc_DASH_int,"null",cljs.core.cst$sym$floats,"null",cljs.core.cst$sym$pos_QMARK_,"null",cljs.core.cst$sym$boolean_DASH_array,"null",cljs.core.cst$sym$alength,"null",cljs.core.cst$sym$bit_DASH_xor,"null",cljs.core.cst$sym$unsigned_DASH_bit_DASH_shift_DASH_right,"null",cljs.core.cst$sym$neg_QMARK_,"null",cljs.core.cst$sym$unchecked_DASH_float,"null",cljs.core.cst$sym$num,"null",cljs.core.cst$sym$reduced_QMARK_,"null",cljs.core.cst$sym$booleans,"null",cljs.core.cst$sym$int_DASH_array,"null",cljs.core.cst$sym$inc_SINGLEQUOTE_,"null",cljs.core.cst$sym$_LT__EQ_,"null",cljs.core.cst$sym$_DASH__SINGLEQUOTE_,"null",cljs.core.cst$sym$_STAR_,"null",cljs.core.cst$sym$min,"null",cljs.core.cst$sym$get,"null",cljs.core.cst$sym$long,"null",cljs.core.cst$sym$double,"null",cljs.core.cst$sym$bit_DASH_and_DASH_not,"null",cljs.core.cst$sym$unchecked_DASH_add_DASH_int,"null",cljs.core.cst$sym$short,"null",cljs.core.cst$sym$quot,"null",cljs.core.cst$sym$unchecked_DASH_double,"null",cljs.core.cst$sym$longs,"null",cljs.core.cst$sym$unchecked_DASH_multiply_DASH_int,"null",cljs.core.cst$sym$int,"null",cljs.core.cst$sym$_GT_,"null",cljs.core.cst$sym$unchecked_DASH_int,"null",cljs.core.cst$sym$unchecked_DASH_multiply,"null",cljs.core.cst$sym$unchecked_DASH_dec,"null",cljs.core.cst$sym$double_DASH_array,"null",cljs.core.cst$sym$float,"null",cljs.core.cst$sym$_DASH_,"null",cljs.core.cst$sym$byte_DASH_array,"null",cljs.core.cst$sym$zero_QMARK_,"null",cljs.core.cst$sym$unchecked_DASH_dec_DASH_int,"null",cljs.core.cst$sym$rem,"null",cljs.core.cst$sym$nth,"null",cljs.core.cst$sym$nil_QMARK_,"null",cljs.core.cst$sym$bit_DASH_and,"null",cljs.core.cst$sym$_STAR__SINGLEQUOTE_,"null",cljs.core.cst$sym$unchecked_DASH_add,"null",cljs.core.cst$sym$identical_QMARK_,"null",cljs.core.cst$sym$unchecked_DASH_divide_DASH_int,"null",cljs.core.cst$sym$unchecked_DASH_subtract,"null",cljs.core.cst$sym$_SLASH_,"null",cljs.core.cst$sym$bit_DASH_or,"null",cljs.core.cst$sym$_GT__EQ_,"null",cljs.core.cst$sym$long_DASH_array,"null",cljs.core.cst$sym$object_DASH_array,"null",cljs.core.cst$sym$doubles,"null",cljs.core.cst$sym$unchecked_DASH_byte,"null",cljs.core.cst$sym$unchecked_DASH_short,"null",cljs.core.cst$sym$float_DASH_array,"null",cljs.core.cst$sym$inc,"null",cljs.core.cst$sym$_PLUS_,"null",cljs.core.cst$sym$aset,"null",cljs.core.cst$sym$chars,"null",cljs.core.cst$sym$ints,"null",cljs.core.cst$sym$bit_DASH_not,"null",cljs.core.cst$sym$byte,"null",cljs.core.cst$sym$max,"null",cljs.core.cst$sym$_EQ__EQ_,"null",cljs.core.cst$sym$count,"null",cljs.core.cst$sym$char_DASH_array,"null",cljs.core.cst$sym$compare,"null",cljs.core.cst$sym$shorts,"null",cljs.core.cst$sym$unchecked_DASH_negate_DASH_int,"null",cljs.core.cst$sym$unchecked_DASH_inc,"null",cljs.core.cst$sym$unchecked_DASH_char,"null",cljs.core.cst$sym$bytes,"null"], null), null);
sci.impl.namespaces.macrofy = (function sci$impl$namespaces$macrofy(f){
return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(f,(function (p1__22588_SHARP_){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p1__22588_SHARP_,cljs.core.cst$kw$sci_SLASH_macro,true);
}));
});
sci.impl.namespaces.__GT__STAR_ = (function sci$impl$namespaces$__GT__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22593 = arguments.length;
var i__4737__auto___22594 = (0);
while(true){
if((i__4737__auto___22594 < len__4736__auto___22593)){
args__4742__auto__.push((arguments[i__4737__auto___22594]));

var G__22595 = (i__4737__auto___22594 + (1));
i__4737__auto___22594 = G__22595;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,x,forms){
var x__$1 = x;
var forms__$1 = forms;
while(true){
if(cljs.core.truth_(forms__$1)){
var form = cljs.core.first(forms__$1);
var threaded = ((cljs.core.seq_QMARK_(form))?cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.first(form),null,(1),null)),(new cljs.core.List(null,x__$1,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.next(form)], 0)))),cljs.core.meta(form)):(new cljs.core.List(null,form,(new cljs.core.List(null,x__$1,null,(1),null)),(2),null)));
var G__22596 = threaded;
var G__22597 = cljs.core.next(forms__$1);
x__$1 = G__22596;
forms__$1 = G__22597;
continue;
} else {
return x__$1;
}
break;
}
}));

(sci.impl.namespaces.__GT__STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.__GT__STAR_.cljs$lang$applyTo = (function (seq22589){
var G__22590 = cljs.core.first(seq22589);
var seq22589__$1 = cljs.core.next(seq22589);
var G__22591 = cljs.core.first(seq22589__$1);
var seq22589__$2 = cljs.core.next(seq22589__$1);
var G__22592 = cljs.core.first(seq22589__$2);
var seq22589__$3 = cljs.core.next(seq22589__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22590,G__22591,G__22592,seq22589__$3);
}));

sci.impl.namespaces.__GT__GT__STAR_ = (function sci$impl$namespaces$__GT__GT__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22602 = arguments.length;
var i__4737__auto___22603 = (0);
while(true){
if((i__4737__auto___22603 < len__4736__auto___22602)){
args__4742__auto__.push((arguments[i__4737__auto___22603]));

var G__22604 = (i__4737__auto___22603 + (1));
i__4737__auto___22603 = G__22604;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.__GT__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.__GT__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,x,forms){
var x__$1 = x;
var forms__$1 = forms;
while(true){
if(cljs.core.truth_(forms__$1)){
var form = cljs.core.first(forms__$1);
var threaded = ((cljs.core.seq_QMARK_(form))?cljs.core.with_meta(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.first(form),null,(1),null)),cljs.core.next(form),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,x__$1,null,(1),null))], 0)))),cljs.core.meta(form)):(new cljs.core.List(null,form,(new cljs.core.List(null,x__$1,null,(1),null)),(2),null)));
var G__22605 = threaded;
var G__22606 = cljs.core.next(forms__$1);
x__$1 = G__22605;
forms__$1 = G__22606;
continue;
} else {
return x__$1;
}
break;
}
}));

(sci.impl.namespaces.__GT__GT__STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.__GT__GT__STAR_.cljs$lang$applyTo = (function (seq22598){
var G__22599 = cljs.core.first(seq22598);
var seq22598__$1 = cljs.core.next(seq22598);
var G__22600 = cljs.core.first(seq22598__$1);
var seq22598__$2 = cljs.core.next(seq22598__$1);
var G__22601 = cljs.core.first(seq22598__$2);
var seq22598__$3 = cljs.core.next(seq22598__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22599,G__22600,G__22601,seq22598__$3);
}));

sci.impl.namespaces.as__GT__STAR_ = (function sci$impl$namespaces$as__GT__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22612 = arguments.length;
var i__4737__auto___22613 = (0);
while(true){
if((i__4737__auto___22613 < len__4736__auto___22612)){
args__4742__auto__.push((arguments[i__4737__auto___22613]));

var G__22614 = (i__4737__auto___22613 + (1));
i__4737__auto___22613 = G__22614;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((4) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((4)),(0),null)):null);
return sci.impl.namespaces.as__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4743__auto__);
});

(sci.impl.namespaces.as__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,expr,name,forms){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,name,null,(1),null)),(new cljs.core.List(null,expr,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(name),cljs.core.butlast(forms))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,((cljs.core.empty_QMARK_(forms))?name:cljs.core.last(forms)),null,(1),null))], 0))));
}));

(sci.impl.namespaces.as__GT__STAR_.cljs$lang$maxFixedArity = (4));

/** @this {Function} */
(sci.impl.namespaces.as__GT__STAR_.cljs$lang$applyTo = (function (seq22607){
var G__22608 = cljs.core.first(seq22607);
var seq22607__$1 = cljs.core.next(seq22607);
var G__22609 = cljs.core.first(seq22607__$1);
var seq22607__$2 = cljs.core.next(seq22607__$1);
var G__22610 = cljs.core.first(seq22607__$2);
var seq22607__$3 = cljs.core.next(seq22607__$2);
var G__22611 = cljs.core.first(seq22607__$3);
var seq22607__$4 = cljs.core.next(seq22607__$3);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22608,G__22609,G__22610,G__22611,seq22607__$4);
}));

sci.impl.namespaces.comment_STAR_ = (function sci$impl$namespaces$comment_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22618 = arguments.length;
var i__4737__auto___22619 = (0);
while(true){
if((i__4737__auto___22619 < len__4736__auto___22618)){
args__4742__auto__.push((arguments[i__4737__auto___22619]));

var G__22620 = (i__4737__auto___22619 + (1));
i__4737__auto___22619 = G__22620;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);
return sci.impl.namespaces.comment_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);
});

(sci.impl.namespaces.comment_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,_body){
return null;
}));

(sci.impl.namespaces.comment_STAR_.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(sci.impl.namespaces.comment_STAR_.cljs$lang$applyTo = (function (seq22615){
var G__22616 = cljs.core.first(seq22615);
var seq22615__$1 = cljs.core.next(seq22615);
var G__22617 = cljs.core.first(seq22615__$1);
var seq22615__$2 = cljs.core.next(seq22615__$1);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22616,G__22617,seq22615__$2);
}));

sci.impl.namespaces.dotimes_STAR_ = (function sci$impl$namespaces$dotimes_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22626 = arguments.length;
var i__4737__auto___22627 = (0);
while(true){
if((i__4737__auto___22627 < len__4736__auto___22626)){
args__4742__auto__.push((arguments[i__4737__auto___22627]));

var G__22628 = (i__4737__auto___22627 + (1));
i__4737__auto___22627 = G__22628;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.dotimes_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.dotimes_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,bindings,body){
if(cljs.core.vector_QMARK_(bindings)){
} else {
throw (new Error("Assert failed: (vector? bindings)"));
}

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(bindings))){
} else {
throw (new Error("Assert failed: (= 2 (count bindings))"));
}

var i = cljs.core.first(bindings);
var n = cljs.core.second(bindings);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$n__22621__auto__,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_long,null,(1),null)),(new cljs.core.List(null,n,null,(1),null))))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,sci.impl.utils.allowed_loop,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,i,null,(1),null)),(new cljs.core.List(null,(0),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_when,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH__LT_,null,(1),null)),(new cljs.core.List(null,i,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.cst$sym$n__22621__auto__,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body,(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,sci.impl.utils.allowed_recur,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_inc,null,(1),null)),(new cljs.core.List(null,i,null,(1),null))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.dotimes_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.dotimes_STAR_.cljs$lang$applyTo = (function (seq22622){
var G__22623 = cljs.core.first(seq22622);
var seq22622__$1 = cljs.core.next(seq22622);
var G__22624 = cljs.core.first(seq22622__$1);
var seq22622__$2 = cljs.core.next(seq22622__$1);
var G__22625 = cljs.core.first(seq22622__$2);
var seq22622__$3 = cljs.core.next(seq22622__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22623,G__22624,G__22625,seq22622__$3);
}));

/**
 * if-not from clojure.core
 */
sci.impl.namespaces.if_not_STAR_ = (function sci$impl$namespaces$if_not_STAR_(var_args){
var G__22630 = arguments.length;
switch (G__22630) {
case 4:
return sci.impl.namespaces.if_not_STAR_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return sci.impl.namespaces.if_not_STAR_.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(sci.impl.namespaces.if_not_STAR_.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,test,then){
return sci.impl.namespaces.if_not_STAR_.cljs$core$IFn$_invoke$arity$5(_AMPERSAND_form,_AMPERSAND_env,test,then,null);
}));

(sci.impl.namespaces.if_not_STAR_.cljs$core$IFn$_invoke$arity$5 = (function (__AMPERSAND_form,__AMPERSAND_env,test,then,else$){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_not,null,(1),null)),(new cljs.core.List(null,test,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,then,null,(1),null)),(new cljs.core.List(null,else$,null,(1),null))], 0))));
}));

(sci.impl.namespaces.if_not_STAR_.cljs$lang$maxFixedArity = 5);

sci.impl.namespaces.when_STAR_ = (function sci$impl$namespaces$when_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22636 = arguments.length;
var i__4737__auto___22637 = (0);
while(true){
if((i__4737__auto___22637 < len__4736__auto___22636)){
args__4742__auto__.push((arguments[i__4737__auto___22637]));

var G__22638 = (i__4737__auto___22637 + (1));
i__4737__auto___22637 = G__22638;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.when_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.when_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,test,body){
return (new cljs.core.List(null,cljs.core.cst$sym$if,(new cljs.core.List(null,test,(new cljs.core.List(null,cljs.core.cons(cljs.core.cst$sym$do,body),null,(1),null)),(2),null)),(3),null));
}));

(sci.impl.namespaces.when_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.when_STAR_.cljs$lang$applyTo = (function (seq22632){
var G__22633 = cljs.core.first(seq22632);
var seq22632__$1 = cljs.core.next(seq22632);
var G__22634 = cljs.core.first(seq22632__$1);
var seq22632__$2 = cljs.core.next(seq22632__$1);
var G__22635 = cljs.core.first(seq22632__$2);
var seq22632__$3 = cljs.core.next(seq22632__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22633,G__22634,G__22635,seq22632__$3);
}));

/**
 * when-not from clojure.core
 */
sci.impl.namespaces.when_not_STAR_ = (function sci$impl$namespaces$when_not_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22643 = arguments.length;
var i__4737__auto___22644 = (0);
while(true){
if((i__4737__auto___22644 < len__4736__auto___22643)){
args__4742__auto__.push((arguments[i__4737__auto___22644]));

var G__22645 = (i__4737__auto___22644 + (1));
i__4737__auto___22644 = G__22645;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.when_not_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.when_not_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (__AMPERSAND_form,__AMPERSAND_env,test,body){
return (new cljs.core.List(null,cljs.core.cst$sym$if,(new cljs.core.List(null,test,(new cljs.core.List(null,null,(new cljs.core.List(null,cljs.core.cons(cljs.core.cst$sym$do,body),null,(1),null)),(2),null)),(3),null)),(4),null));
}));

(sci.impl.namespaces.when_not_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.when_not_STAR_.cljs$lang$applyTo = (function (seq22639){
var G__22640 = cljs.core.first(seq22639);
var seq22639__$1 = cljs.core.next(seq22639);
var G__22641 = cljs.core.first(seq22639__$1);
var seq22639__$2 = cljs.core.next(seq22639__$1);
var G__22642 = cljs.core.first(seq22639__$2);
var seq22639__$3 = cljs.core.next(seq22639__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22640,G__22641,G__22642,seq22639__$3);
}));

/**
 * doto from clojure.core
 */
sci.impl.namespaces.doto_STAR_ = (function sci$impl$namespaces$doto_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22650 = arguments.length;
var i__4737__auto___22651 = (0);
while(true){
if((i__4737__auto___22651 < len__4736__auto___22650)){
args__4742__auto__.push((arguments[i__4737__auto___22651]));

var G__22652 = (i__4737__auto___22651 + (1));
i__4737__auto___22651 = G__22652;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.doto_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.doto_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (__AMPERSAND_form,__AMPERSAND_env,x,forms){
var gx = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,gx,null,(1),null)),(new cljs.core.List(null,x,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (f){
return cljs.core.with_meta(((cljs.core.seq_QMARK_(f))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.first(f),null,(1),null)),(new cljs.core.List(null,gx,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.next(f)], 0)))):cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,f,null,(1),null)),(new cljs.core.List(null,gx,null,(1),null)))))),cljs.core.meta(f));
}),forms),(new cljs.core.List(null,gx,null,(1),null))], 0))));
}));

(sci.impl.namespaces.doto_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.doto_STAR_.cljs$lang$applyTo = (function (seq22646){
var G__22647 = cljs.core.first(seq22646);
var seq22646__$1 = cljs.core.next(seq22646);
var G__22648 = cljs.core.first(seq22646__$1);
var seq22646__$2 = cljs.core.next(seq22646__$1);
var G__22649 = cljs.core.first(seq22646__$2);
var seq22646__$3 = cljs.core.next(seq22646__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22647,G__22648,G__22649,seq22646__$3);
}));

sci.impl.namespaces.cond_STAR_ = (function sci$impl$namespaces$cond_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22656 = arguments.length;
var i__4737__auto___22657 = (0);
while(true){
if((i__4737__auto___22657 < len__4736__auto___22656)){
args__4742__auto__.push((arguments[i__4737__auto___22657]));

var G__22658 = (i__4737__auto___22657 + (1));
i__4737__auto___22657 = G__22658;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);
return sci.impl.namespaces.cond_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);
});

(sci.impl.namespaces.cond_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,clauses){
if(cljs.core.truth_(clauses)){
return (new cljs.core.List(null,cljs.core.cst$sym$if,(new cljs.core.List(null,cljs.core.first(clauses),(new cljs.core.List(null,((cljs.core.next(clauses))?cljs.core.second(clauses):(function(){throw (new Error("cond requires an even number of forms"))})()),(new cljs.core.List(null,cljs.core.cons(cljs.core.cst$sym$clojure$core_SLASH_cond,cljs.core.next(cljs.core.next(clauses))),null,(1),null)),(2),null)),(3),null)),(4),null));
} else {
return null;
}
}));

(sci.impl.namespaces.cond_STAR_.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(sci.impl.namespaces.cond_STAR_.cljs$lang$applyTo = (function (seq22653){
var G__22654 = cljs.core.first(seq22653);
var seq22653__$1 = cljs.core.next(seq22653);
var G__22655 = cljs.core.first(seq22653__$1);
var seq22653__$2 = cljs.core.next(seq22653__$1);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22654,G__22655,seq22653__$2);
}));

sci.impl.namespaces.cond__GT__STAR_ = (function sci$impl$namespaces$cond__GT__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22667 = arguments.length;
var i__4737__auto___22668 = (0);
while(true){
if((i__4737__auto___22668 < len__4736__auto___22667)){
args__4742__auto__.push((arguments[i__4737__auto___22668]));

var G__22669 = (i__4737__auto___22668 + (1));
i__4737__auto___22668 = G__22669;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.cond__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.cond__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (__AMPERSAND_form,__AMPERSAND_env,expr,clauses){
if(cljs.core.even_QMARK_(cljs.core.count(clauses))){
} else {
throw (new Error("Assert failed: (even? (count clauses))"));
}

var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
var steps = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__22663){
var vec__22664 = p__22663;
var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22664,(0),null);
var step = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22664,(1),null);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,test,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH__DASH__GT_,null,(1),null)),(new cljs.core.List(null,g,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,step,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,g,null,(1),null))], 0))));
}),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),clauses));
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,g,null,(1),null)),(new cljs.core.List(null,expr,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g),cljs.core.butlast(steps))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,((cljs.core.empty_QMARK_(steps))?g:cljs.core.last(steps)),null,(1),null))], 0))));
}));

(sci.impl.namespaces.cond__GT__STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.cond__GT__STAR_.cljs$lang$applyTo = (function (seq22659){
var G__22660 = cljs.core.first(seq22659);
var seq22659__$1 = cljs.core.next(seq22659);
var G__22661 = cljs.core.first(seq22659__$1);
var seq22659__$2 = cljs.core.next(seq22659__$1);
var G__22662 = cljs.core.first(seq22659__$2);
var seq22659__$3 = cljs.core.next(seq22659__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22660,G__22661,G__22662,seq22659__$3);
}));

sci.impl.namespaces.cond__GT__GT__STAR_ = (function sci$impl$namespaces$cond__GT__GT__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22678 = arguments.length;
var i__4737__auto___22679 = (0);
while(true){
if((i__4737__auto___22679 < len__4736__auto___22678)){
args__4742__auto__.push((arguments[i__4737__auto___22679]));

var G__22680 = (i__4737__auto___22679 + (1));
i__4737__auto___22679 = G__22680;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.cond__GT__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.cond__GT__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (__AMPERSAND_form,__AMPERSAND_env,expr,clauses){
if(cljs.core.even_QMARK_(cljs.core.count(clauses))){
} else {
throw (new Error("Assert failed: (even? (count clauses))"));
}

var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
var steps = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__22674){
var vec__22675 = p__22674;
var test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22675,(0),null);
var step = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22675,(1),null);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,test,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH__DASH__GT__GT_,null,(1),null)),(new cljs.core.List(null,g,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,step,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,g,null,(1),null))], 0))));
}),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),clauses));
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,g,null,(1),null)),(new cljs.core.List(null,expr,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g),cljs.core.butlast(steps))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,((cljs.core.empty_QMARK_(steps))?g:cljs.core.last(steps)),null,(1),null))], 0))));
}));

(sci.impl.namespaces.cond__GT__GT__STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.cond__GT__GT__STAR_.cljs$lang$applyTo = (function (seq22670){
var G__22671 = cljs.core.first(seq22670);
var seq22670__$1 = cljs.core.next(seq22670);
var G__22672 = cljs.core.first(seq22670__$1);
var seq22670__$2 = cljs.core.next(seq22670__$1);
var G__22673 = cljs.core.first(seq22670__$2);
var seq22670__$3 = cljs.core.next(seq22670__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22671,G__22672,G__22673,seq22670__$3);
}));

sci.impl.namespaces.if_let_STAR_ = (function sci$impl$namespaces$if_let_STAR_(var_args){
var G__22689 = arguments.length;
switch (G__22689) {
case 4:
return sci.impl.namespaces.if_let_STAR_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
var args_arr__4757__auto__ = [];
var len__4736__auto___22691 = arguments.length;
var i__4737__auto___22692 = (0);
while(true){
if((i__4737__auto___22692 < len__4736__auto___22691)){
args_arr__4757__auto__.push((arguments[i__4737__auto___22692]));

var G__22693 = (i__4737__auto___22692 + (1));
i__4737__auto___22692 = G__22693;
continue;
} else {
}
break;
}

var argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((5)),(0),null));
return sci.impl.namespaces.if_let_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),argseq__4758__auto__);

}
});

(sci.impl.namespaces.if_let_STAR_.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,bindings,then){
return sci.impl.namespaces.if_let_STAR_(_AMPERSAND_form,_AMPERSAND_env,bindings,then,null);
}));

(sci.impl.namespaces.if_let_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (__AMPERSAND_form,__AMPERSAND_env,bindings,then,else$,_oldform){
var form = (bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((0)) : bindings.call(null,(0)));
var tst = (bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((1)) : bindings.call(null,(1)));
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$temp__22681__auto__,null,(1),null)),(new cljs.core.List(null,tst,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$temp__22681__auto__,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,form,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$temp__22681__auto__,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,then,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,else$,null,(1),null))], 0)))),null,(1),null))], 0))));
}));

/** @this {Function} */
(sci.impl.namespaces.if_let_STAR_.cljs$lang$applyTo = (function (seq22683){
var G__22684 = cljs.core.first(seq22683);
var seq22683__$1 = cljs.core.next(seq22683);
var G__22685 = cljs.core.first(seq22683__$1);
var seq22683__$2 = cljs.core.next(seq22683__$1);
var G__22686 = cljs.core.first(seq22683__$2);
var seq22683__$3 = cljs.core.next(seq22683__$2);
var G__22687 = cljs.core.first(seq22683__$3);
var seq22683__$4 = cljs.core.next(seq22683__$3);
var G__22688 = cljs.core.first(seq22683__$4);
var seq22683__$5 = cljs.core.next(seq22683__$4);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22684,G__22685,G__22686,G__22687,G__22688,seq22683__$5);
}));

(sci.impl.namespaces.if_let_STAR_.cljs$lang$maxFixedArity = (5));

sci.impl.namespaces.if_some_STAR_ = (function sci$impl$namespaces$if_some_STAR_(var_args){
var G__22702 = arguments.length;
switch (G__22702) {
case 4:
return sci.impl.namespaces.if_some_STAR_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
var args_arr__4757__auto__ = [];
var len__4736__auto___22704 = arguments.length;
var i__4737__auto___22705 = (0);
while(true){
if((i__4737__auto___22705 < len__4736__auto___22704)){
args_arr__4757__auto__.push((arguments[i__4737__auto___22705]));

var G__22706 = (i__4737__auto___22705 + (1));
i__4737__auto___22705 = G__22706;
continue;
} else {
}
break;
}

var argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((5)),(0),null));
return sci.impl.namespaces.if_some_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),argseq__4758__auto__);

}
});

(sci.impl.namespaces.if_some_STAR_.cljs$core$IFn$_invoke$arity$4 = (function (_AMPERSAND_form,_AMPERSAND_env,bindings,then){
return sci.impl.namespaces.if_some_STAR_(_AMPERSAND_form,_AMPERSAND_env,bindings,then,null);
}));

(sci.impl.namespaces.if_some_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (__AMPERSAND_form,__AMPERSAND_env,bindings,then,else$,_oldform){
var form = (bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((0)) : bindings.call(null,(0)));
var tst = (bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((1)) : bindings.call(null,(1)));
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$temp__22694__auto__,null,(1),null)),(new cljs.core.List(null,tst,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$temp__22694__auto__,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,else$,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,form,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$temp__22694__auto__,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,then,null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));
}));

/** @this {Function} */
(sci.impl.namespaces.if_some_STAR_.cljs$lang$applyTo = (function (seq22696){
var G__22697 = cljs.core.first(seq22696);
var seq22696__$1 = cljs.core.next(seq22696);
var G__22698 = cljs.core.first(seq22696__$1);
var seq22696__$2 = cljs.core.next(seq22696__$1);
var G__22699 = cljs.core.first(seq22696__$2);
var seq22696__$3 = cljs.core.next(seq22696__$2);
var G__22700 = cljs.core.first(seq22696__$3);
var seq22696__$4 = cljs.core.next(seq22696__$3);
var G__22701 = cljs.core.first(seq22696__$4);
var seq22696__$5 = cljs.core.next(seq22696__$4);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22697,G__22698,G__22699,G__22700,G__22701,seq22696__$5);
}));

(sci.impl.namespaces.if_some_STAR_.cljs$lang$maxFixedArity = (5));

sci.impl.namespaces.when_let_STAR_ = (function sci$impl$namespaces$when_let_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22712 = arguments.length;
var i__4737__auto___22713 = (0);
while(true){
if((i__4737__auto___22713 < len__4736__auto___22712)){
args__4742__auto__.push((arguments[i__4737__auto___22713]));

var G__22714 = (i__4737__auto___22713 + (1));
i__4737__auto___22713 = G__22714;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.when_let_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.when_let_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (__AMPERSAND_form,__AMPERSAND_env,bindings,body){
var form = (bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((0)) : bindings.call(null,(0)));
var tst = (bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((1)) : bindings.call(null,(1)));
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$temp__22707__auto__,null,(1),null)),(new cljs.core.List(null,tst,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_when,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$temp__22707__auto__,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,form,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$temp__22707__auto__,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.when_let_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.when_let_STAR_.cljs$lang$applyTo = (function (seq22708){
var G__22709 = cljs.core.first(seq22708);
var seq22708__$1 = cljs.core.next(seq22708);
var G__22710 = cljs.core.first(seq22708__$1);
var seq22708__$2 = cljs.core.next(seq22708__$1);
var G__22711 = cljs.core.first(seq22708__$2);
var seq22708__$3 = cljs.core.next(seq22708__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22709,G__22710,G__22711,seq22708__$3);
}));

sci.impl.namespaces.when_first_STAR_ = (function sci$impl$namespaces$when_first_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22723 = arguments.length;
var i__4737__auto___22724 = (0);
while(true){
if((i__4737__auto___22724 < len__4736__auto___22723)){
args__4742__auto__.push((arguments[i__4737__auto___22724]));

var G__22725 = (i__4737__auto___22724 + (1));
i__4737__auto___22724 = G__22725;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.when_first_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.when_first_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,bindings,body){
var vec__22720 = bindings;
var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22720,(0),null);
var xs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22720,(1),null);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_when_DASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$xs__22715__auto__,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_seq,null,(1),null)),(new cljs.core.List(null,xs,null,(1),null))))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,x,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_first,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$xs__22715__auto__,null,(1),null))))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.when_first_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.when_first_STAR_.cljs$lang$applyTo = (function (seq22716){
var G__22717 = cljs.core.first(seq22716);
var seq22716__$1 = cljs.core.next(seq22716);
var G__22718 = cljs.core.first(seq22716__$1);
var seq22716__$2 = cljs.core.next(seq22716__$1);
var G__22719 = cljs.core.first(seq22716__$2);
var seq22716__$3 = cljs.core.next(seq22716__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22717,G__22718,G__22719,seq22716__$3);
}));

sci.impl.namespaces.when_some_STAR_ = (function sci$impl$namespaces$when_some_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22731 = arguments.length;
var i__4737__auto___22732 = (0);
while(true){
if((i__4737__auto___22732 < len__4736__auto___22731)){
args__4742__auto__.push((arguments[i__4737__auto___22732]));

var G__22733 = (i__4737__auto___22732 + (1));
i__4737__auto___22732 = G__22733;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.when_some_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.when_some_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,bindings,body){
var form = (bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((0)) : bindings.call(null,(0)));
var tst = (bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((1)) : bindings.call(null,(1)));
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$temp__22726__auto__,null,(1),null)),(new cljs.core.List(null,tst,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$temp__22726__auto__,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,null,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,form,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$temp__22726__auto__,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.when_some_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.when_some_STAR_.cljs$lang$applyTo = (function (seq22727){
var G__22728 = cljs.core.first(seq22727);
var seq22727__$1 = cljs.core.next(seq22727);
var G__22729 = cljs.core.first(seq22727__$1);
var seq22727__$2 = cljs.core.next(seq22727__$1);
var G__22730 = cljs.core.first(seq22727__$2);
var seq22727__$3 = cljs.core.next(seq22727__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22728,G__22729,G__22730,seq22727__$3);
}));

sci.impl.namespaces.some__GT__STAR_ = (function sci$impl$namespaces$some__GT__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22738 = arguments.length;
var i__4737__auto___22739 = (0);
while(true){
if((i__4737__auto___22739 < len__4736__auto___22738)){
args__4742__auto__.push((arguments[i__4737__auto___22739]));

var G__22740 = (i__4737__auto___22739 + (1));
i__4737__auto___22739 = G__22740;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.some__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.some__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (__AMPERSAND_form,__AMPERSAND_env,expr,forms){
var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
var steps = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (step){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_,null,(1),null)),(new cljs.core.List(null,g,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,null,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH__DASH__GT_,null,(1),null)),(new cljs.core.List(null,g,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,step,null,(1),null))], 0)))),null,(1),null))], 0))));
}),forms);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,g,null,(1),null)),(new cljs.core.List(null,expr,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g),cljs.core.butlast(steps))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,((cljs.core.empty_QMARK_(steps))?g:cljs.core.last(steps)),null,(1),null))], 0))));
}));

(sci.impl.namespaces.some__GT__STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.some__GT__STAR_.cljs$lang$applyTo = (function (seq22734){
var G__22735 = cljs.core.first(seq22734);
var seq22734__$1 = cljs.core.next(seq22734);
var G__22736 = cljs.core.first(seq22734__$1);
var seq22734__$2 = cljs.core.next(seq22734__$1);
var G__22737 = cljs.core.first(seq22734__$2);
var seq22734__$3 = cljs.core.next(seq22734__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22735,G__22736,G__22737,seq22734__$3);
}));

sci.impl.namespaces.some__GT__GT__STAR_ = (function sci$impl$namespaces$some__GT__GT__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22745 = arguments.length;
var i__4737__auto___22746 = (0);
while(true){
if((i__4737__auto___22746 < len__4736__auto___22745)){
args__4742__auto__.push((arguments[i__4737__auto___22746]));

var G__22747 = (i__4737__auto___22746 + (1));
i__4737__auto___22746 = G__22747;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.some__GT__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.some__GT__GT__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,expr,forms){
var g = cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
var steps = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (step){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_,null,(1),null)),(new cljs.core.List(null,g,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,null,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH__DASH__GT__GT_,null,(1),null)),(new cljs.core.List(null,g,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,step,null,(1),null))], 0)))),null,(1),null))], 0))));
}),forms);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,g,null,(1),null)),(new cljs.core.List(null,expr,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(g),cljs.core.butlast(steps))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,((cljs.core.empty_QMARK_(steps))?g:cljs.core.last(steps)),null,(1),null))], 0))));
}));

(sci.impl.namespaces.some__GT__GT__STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.some__GT__GT__STAR_.cljs$lang$applyTo = (function (seq22741){
var G__22742 = cljs.core.first(seq22741);
var seq22741__$1 = cljs.core.next(seq22741);
var G__22743 = cljs.core.first(seq22741__$1);
var seq22741__$2 = cljs.core.next(seq22741__$1);
var G__22744 = cljs.core.first(seq22741__$2);
var seq22741__$3 = cljs.core.next(seq22741__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22742,G__22743,G__22744,seq22741__$3);
}));

sci.impl.namespaces.ex_message = (function (){var temp__5718__auto__ = (((typeof cljs !== 'undefined') && (typeof cljs.core !== 'undefined') && (typeof cljs.core.ex_message !== 'undefined'))?(new cljs.core.Var((function (){
return cljs.core.ex_message;
}),cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_ex_DASH_message,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve,true], null)),cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ex_DASH_message,"cljs/core.cljs",17,1,11375,11375,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ex], null)),"Returns the message attached to the given Error / ExceptionInfo object.\n  For non-Errors returns nil.",(cljs.core.truth_(cljs.core.ex_message)?cljs.core.ex_message.cljs$lang$test:null)]))):null);
if(cljs.core.truth_(temp__5718__auto__)){
var v = temp__5718__auto__;
return cljs.core.deref(v);
} else {
return (function sci$impl$namespaces$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
}
})();
sci.impl.namespaces.ex_cause = (function (){var temp__5718__auto__ = (((typeof cljs !== 'undefined') && (typeof cljs.core !== 'undefined') && (typeof cljs.core.ex_cause !== 'undefined'))?(new cljs.core.Var((function (){
return cljs.core.ex_cause;
}),cljs.core.with_meta(cljs.core.cst$sym$cljs$core_SLASH_ex_DASH_cause,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$cljs$analyzer_SLASH_no_DASH_resolve,true], null)),cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ex_DASH_cause,"cljs/core.cljs",15,1,11382,11382,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ex], null)),"Returns exception cause (an Error / ExceptionInfo) if ex is an\n  ExceptionInfo.\n  Otherwise returns nil.",(cljs.core.truth_(cljs.core.ex_cause)?cljs.core.ex_cause.cljs$lang$test:null)]))):null);
if(cljs.core.truth_(temp__5718__auto__)){
var v = temp__5718__auto__;
return cljs.core.deref(v);
} else {
return (function sci$impl$namespaces$ex_message(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
}
})();
sci.impl.namespaces.assert_STAR_ = (function sci$impl$namespaces$assert_STAR_(var_args){
var G__22749 = arguments.length;
switch (G__22749) {
case 3:
return sci.impl.namespaces.assert_STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return sci.impl.namespaces.assert_STAR_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(sci.impl.namespaces.assert_STAR_.cljs$core$IFn$_invoke$arity$3 = (function (__AMPERSAND_form,_,x){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_when_DASH_not,null,(1),null)),(new cljs.core.List(null,x,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$throw,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$js_SLASH_Error$,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_str,null,(1),null)),(new cljs.core.List(null,"Assert failed: ",null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_str,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$quote,null,(1),null)),(new cljs.core.List(null,x,null,(1),null))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))))),null,(1),null))))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.assert_STAR_.cljs$core$IFn$_invoke$arity$4 = (function (__AMPERSAND_form,_,x,message){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_when_DASH_not,null,(1),null)),(new cljs.core.List(null,x,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$throw,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$js_SLASH_Error$,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_str,null,(1),null)),(new cljs.core.List(null,"Assert failed: ",null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,message,null,(1),null)),(new cljs.core.List(null,"\n",null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_pr_DASH_str,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$quote,null,(1),null)),(new cljs.core.List(null,x,null,(1),null))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))))),null,(1),null))))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.assert_STAR_.cljs$lang$maxFixedArity = 4);

sci.impl.namespaces.with_open_STAR_ = (function sci$impl$namespaces$with_open_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22755 = arguments.length;
var i__4737__auto___22756 = (0);
while(true){
if((i__4737__auto___22756 < len__4736__auto___22755)){
args__4742__auto__.push((arguments[i__4737__auto___22756]));

var G__22757 = (i__4737__auto___22756 + (1));
i__4737__auto___22756 = G__22757;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.with_open_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.with_open_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,bindings,body){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(bindings),(0))){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$do,null,(1),null)),body)));
} else {
if(((bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((0)) : bindings.call(null,(0))) instanceof cljs.core.Symbol)){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(bindings,(0),(2)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$try,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$sci$impl$namespaces_SLASH_with_DASH_open,null,(1),null)),(new cljs.core.List(null,cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(bindings,(2)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$finally,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$$close,null,(1),null)),(new cljs.core.List(null,(bindings.cljs$core$IFn$_invoke$arity$1 ? bindings.cljs$core$IFn$_invoke$arity$1((0)) : bindings.call(null,(0))),null,(1),null))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0))));
} else {
return cljs.core.cst$kw$sci$impl$namespaces_SLASH_TODO;

}
}
}));

(sci.impl.namespaces.with_open_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.with_open_STAR_.cljs$lang$applyTo = (function (seq22751){
var G__22752 = cljs.core.first(seq22751);
var seq22751__$1 = cljs.core.next(seq22751);
var G__22753 = cljs.core.first(seq22751__$1);
var seq22751__$2 = cljs.core.next(seq22751__$1);
var G__22754 = cljs.core.first(seq22751__$2);
var seq22751__$3 = cljs.core.next(seq22751__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22752,G__22753,G__22754,seq22751__$3);
}));

sci.impl.namespaces.letfn_STAR_ = (function sci$impl$namespaces$letfn_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22762 = arguments.length;
var i__4737__auto___22763 = (0);
while(true){
if((i__4737__auto___22763 < len__4736__auto___22762)){
args__4742__auto__.push((arguments[i__4737__auto___22763]));

var G__22764 = (i__4737__auto___22763 + (1));
i__4737__auto___22763 = G__22764;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.letfn_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.letfn_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,fnspecs,body){
var syms = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,fnspecs);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(syms,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH__DASH_new_DASH_var)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (sym,fn_spec){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_alter_DASH_var_DASH_root,null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_constantly,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_fn,null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.rest(fn_spec)], 0)))),null,(1),null))))),null,(1),null))], 0))));
}),syms,fnspecs),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(syms,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (sym){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_var_DASH_get,null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)))));
}),syms))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.letfn_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.letfn_STAR_.cljs$lang$applyTo = (function (seq22758){
var G__22759 = cljs.core.first(seq22758);
var seq22758__$1 = cljs.core.next(seq22758);
var G__22760 = cljs.core.first(seq22758__$1);
var seq22758__$2 = cljs.core.next(seq22758__$1);
var G__22761 = cljs.core.first(seq22758__$2);
var seq22758__$3 = cljs.core.next(seq22758__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22759,G__22760,G__22761,seq22758__$3);
}));

sci.impl.namespaces.with_local_vars_STAR_ = (function sci$impl$namespaces$with_local_vars_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22769 = arguments.length;
var i__4737__auto___22770 = (0);
while(true){
if((i__4737__auto___22770 < len__4736__auto___22769)){
args__4742__auto__.push((arguments[i__4737__auto___22770]));

var G__22771 = (i__4737__auto___22770 + (1));
i__4737__auto___22770 = G__22771;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.with_local_vars_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.with_local_vars_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (form,_,name_vals_vec,body){
if(cljs.core.vector_QMARK_(name_vals_vec)){
} else {
sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$2("with-local-vars requires a vector for its bindings",form);
}

if(cljs.core.even_QMARK_(cljs.core.count(name_vals_vec))){
} else {
sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$2("with-local-vars requires an even number of forms in binding vector",form);
}

return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),name_vals_vec),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH__DASH_new_DASH_dynamic_DASH_var))))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_push_DASH_thread_DASH_bindings,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map,null,(1),null)),name_vals_vec))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$try,null,(1),null)),body,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$finally,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_pop_DASH_thread_DASH_bindings,null,(1),null))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.with_local_vars_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.with_local_vars_STAR_.cljs$lang$applyTo = (function (seq22765){
var G__22766 = cljs.core.first(seq22765);
var seq22765__$1 = cljs.core.next(seq22765);
var G__22767 = cljs.core.first(seq22765__$1);
var seq22765__$2 = cljs.core.next(seq22765__$1);
var G__22768 = cljs.core.first(seq22765__$2);
var seq22765__$3 = cljs.core.next(seq22765__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22766,G__22767,G__22768,seq22765__$3);
}));

sci.impl.namespaces.vswap_BANG__STAR_ = (function sci$impl$namespaces$vswap_BANG__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22775 = arguments.length;
var i__4737__auto___22776 = (0);
while(true){
if((i__4737__auto___22776 < len__4736__auto___22775)){
args__4742__auto__.push((arguments[i__4737__auto___22776]));

var G__22777 = (i__4737__auto___22776 + (1));
i__4737__auto___22776 = G__22777;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);
return sci.impl.namespaces.vswap_BANG__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);
});

(sci.impl.namespaces.vswap_BANG__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (vol,f,args){
return cljs.core.vreset_BANG_(vol,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,cljs.core.deref(vol),args));
}));

(sci.impl.namespaces.vswap_BANG__STAR_.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(sci.impl.namespaces.vswap_BANG__STAR_.cljs$lang$applyTo = (function (seq22772){
var G__22773 = cljs.core.first(seq22772);
var seq22772__$1 = cljs.core.next(seq22772);
var G__22774 = cljs.core.first(seq22772__$1);
var seq22772__$2 = cljs.core.next(seq22772__$1);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22773,G__22774,seq22772__$2);
}));

sci.impl.namespaces.delay_STAR_ = (function sci$impl$namespaces$delay_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22781 = arguments.length;
var i__4737__auto___22782 = (0);
while(true){
if((i__4737__auto___22782 < len__4736__auto___22781)){
args__4742__auto__.push((arguments[i__4737__auto___22782]));

var G__22783 = (i__4737__auto___22782 + (1));
i__4737__auto___22782 = G__22783;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);
return sci.impl.namespaces.delay_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);
});

(sci.impl.namespaces.delay_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,body){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$new,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$cljs$core$Delay,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_fn,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.delay_STAR_.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(sci.impl.namespaces.delay_STAR_.cljs$lang$applyTo = (function (seq22778){
var G__22779 = cljs.core.first(seq22778);
var seq22778__$1 = cljs.core.next(seq22778);
var G__22780 = cljs.core.first(seq22778__$1);
var seq22778__$2 = cljs.core.next(seq22778__$1);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22779,G__22780,seq22778__$2);
}));

sci.impl.namespaces.defn__STAR_ = (function sci$impl$namespaces$defn__STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22788 = arguments.length;
var i__4737__auto___22789 = (0);
while(true){
if((i__4737__auto___22789 < len__4736__auto___22788)){
args__4742__auto__.push((arguments[i__4737__auto___22789]));

var G__22790 = (i__4737__auto___22789 + (1));
i__4737__auto___22789 = G__22790;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.defn__STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.defn__STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,name,decls){
return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.cst$sym$cljs$core_SLASH_defn,cljs.core.with_meta(name,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(name),cljs.core.cst$kw$private,true)),decls);
}));

(sci.impl.namespaces.defn__STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.defn__STAR_.cljs$lang$applyTo = (function (seq22784){
var G__22785 = cljs.core.first(seq22784);
var seq22784__$1 = cljs.core.next(seq22784);
var G__22786 = cljs.core.first(seq22784__$1);
var seq22784__$2 = cljs.core.next(seq22784__$1);
var G__22787 = cljs.core.first(seq22784__$2);
var seq22784__$3 = cljs.core.next(seq22784__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22785,G__22786,G__22787,seq22784__$3);
}));

sci.impl.namespaces.condp_STAR_ = (function sci$impl$namespaces$condp_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22803 = arguments.length;
var i__4737__auto___22804 = (0);
while(true){
if((i__4737__auto___22804 < len__4736__auto___22803)){
args__4742__auto__.push((arguments[i__4737__auto___22804]));

var G__22805 = (i__4737__auto___22804 + (1));
i__4737__auto___22804 = G__22805;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((4) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((4)),(0),null)):null);
return sci.impl.namespaces.condp_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4743__auto__);
});

(sci.impl.namespaces.condp_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,pred,expr,clauses){
var gpred = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("pred__");
var gexpr = cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("expr__");
var emit = (function sci$impl$namespaces$emit(pred__$1,expr__$1,args){
var vec__22797 = cljs.core.split_at(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$_GT__GT_,cljs.core.second(args)))?(3):(2)),args);
var vec__22800 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22797,(0),null);
var a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22800,(0),null);
var b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22800,(1),null);
var c = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22800,(2),null);
var clause = vec__22800;
var more = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22797,(1),null);
var n = cljs.core.count(clause);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),n)){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$throw,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$new,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$js_SLASH_Error,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_str,null,(1),null)),(new cljs.core.List(null,"No matching clause: ",null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,expr__$1,null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null)))));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),n)){
return a;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),n)){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$if,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,pred__$1,null,(1),null)),(new cljs.core.List(null,a,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,expr__$1,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,b,null,(1),null)),(new cljs.core.List(null,sci$impl$namespaces$emit(pred__$1,expr__$1,more),null,(1),null))], 0))));
} else {
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_if_DASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$p__22791__auto__,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,pred__$1,null,(1),null)),(new cljs.core.List(null,a,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,expr__$1,null,(1),null))], 0)))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,c,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$p__22791__auto__,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,sci$impl$namespaces$emit(pred__$1,expr__$1,more),null,(1),null))], 0))));

}
}
}
});
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,gpred,null,(1),null)),(new cljs.core.List(null,pred,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,gexpr,null,(1),null)),(new cljs.core.List(null,expr,null,(1),null))], 0))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,emit(gpred,gexpr,clauses),null,(1),null))], 0))));
}));

(sci.impl.namespaces.condp_STAR_.cljs$lang$maxFixedArity = (4));

/** @this {Function} */
(sci.impl.namespaces.condp_STAR_.cljs$lang$applyTo = (function (seq22792){
var G__22793 = cljs.core.first(seq22792);
var seq22792__$1 = cljs.core.next(seq22792);
var G__22794 = cljs.core.first(seq22792__$1);
var seq22792__$2 = cljs.core.next(seq22792__$1);
var G__22795 = cljs.core.first(seq22792__$2);
var seq22792__$3 = cljs.core.next(seq22792__$2);
var G__22796 = cljs.core.first(seq22792__$3);
var seq22792__$4 = cljs.core.next(seq22792__$3);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22793,G__22794,G__22795,G__22796,seq22792__$4);
}));

sci.impl.namespaces.defonce_STAR_ = (function sci$impl$namespaces$defonce_STAR_(_,___$1,name,expr){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$v__22806__auto__,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$def,null,(1),null)),(new cljs.core.List(null,name,null,(1),null))))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_when_DASH_not,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$has_DASH_root_DASH_impl,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$v__22806__auto__,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$def,null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,expr,null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));
});
sci.impl.namespaces.while_STAR_ = (function sci$impl$namespaces$while_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22811 = arguments.length;
var i__4737__auto___22812 = (0);
while(true){
if((i__4737__auto___22812 < len__4736__auto___22811)){
args__4742__auto__.push((arguments[i__4737__auto___22812]));

var G__22813 = (i__4737__auto___22812 + (1));
i__4737__auto___22812 = G__22813;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.while_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.while_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,test,body){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_loop,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_when,null,(1),null)),(new cljs.core.List(null,test,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body,(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.cst$sym$recur,null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.while_STAR_.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.while_STAR_.cljs$lang$applyTo = (function (seq22807){
var G__22808 = cljs.core.first(seq22807);
var seq22807__$1 = cljs.core.next(seq22807);
var G__22809 = cljs.core.first(seq22807__$1);
var seq22807__$2 = cljs.core.next(seq22807__$1);
var G__22810 = cljs.core.first(seq22807__$2);
var seq22807__$3 = cljs.core.next(seq22807__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22808,G__22809,G__22810,seq22807__$3);
}));

sci.impl.namespaces.double_dot = (function sci$impl$namespaces$double_dot(var_args){
var G__22820 = arguments.length;
switch (G__22820) {
case 4:
return sci.impl.namespaces.double_dot.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
var args_arr__4757__auto__ = [];
var len__4736__auto___22822 = arguments.length;
var i__4737__auto___22823 = (0);
while(true){
if((i__4737__auto___22823 < len__4736__auto___22822)){
args_arr__4757__auto__.push((arguments[i__4737__auto___22823]));

var G__22824 = (i__4737__auto___22823 + (1));
i__4737__auto___22823 = G__22824;
continue;
} else {
}
break;
}

var argseq__4758__auto__ = (new cljs.core.IndexedSeq(args_arr__4757__auto__.slice((4)),(0),null));
return sci.impl.namespaces.double_dot.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4758__auto__);

}
});

(sci.impl.namespaces.double_dot.cljs$core$IFn$_invoke$arity$4 = (function (_,___$1,x,form){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$_DOT_,null,(1),null)),(new cljs.core.List(null,x,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,form,null,(1),null))], 0))));
}));

(sci.impl.namespaces.double_dot.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,x,form,more){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$$$,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$_DOT_,null,(1),null)),(new cljs.core.List(null,x,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,form,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0))));
}));

/** @this {Function} */
(sci.impl.namespaces.double_dot.cljs$lang$applyTo = (function (seq22815){
var G__22816 = cljs.core.first(seq22815);
var seq22815__$1 = cljs.core.next(seq22815);
var G__22817 = cljs.core.first(seq22815__$1);
var seq22815__$2 = cljs.core.next(seq22815__$1);
var G__22818 = cljs.core.first(seq22815__$2);
var seq22815__$3 = cljs.core.next(seq22815__$2);
var G__22819 = cljs.core.first(seq22815__$3);
var seq22815__$4 = cljs.core.next(seq22815__$3);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22816,G__22817,G__22818,G__22819,seq22815__$4);
}));

(sci.impl.namespaces.double_dot.cljs$lang$maxFixedArity = (4));

sci.impl.namespaces.lazy_cat_STAR_ = (function sci$impl$namespaces$lazy_cat_STAR_(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22829 = arguments.length;
var i__4737__auto___22830 = (0);
while(true){
if((i__4737__auto___22830 < len__4736__auto___22829)){
args__4742__auto__.push((arguments[i__4737__auto___22830]));

var G__22831 = (i__4737__auto___22830 + (1));
i__4737__auto___22830 = G__22831;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((2) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((2)),(0),null)):null);
return sci.impl.namespaces.lazy_cat_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4743__auto__);
});

(sci.impl.namespaces.lazy_cat_STAR_.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,colls){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_concat,null,(1),null)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22825_SHARP_){
return (new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_lazy_DASH_seq,(new cljs.core.List(null,p1__22825_SHARP_,null,(1),null)),(2),null));
}),colls))));
}));

(sci.impl.namespaces.lazy_cat_STAR_.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(sci.impl.namespaces.lazy_cat_STAR_.cljs$lang$applyTo = (function (seq22826){
var G__22827 = cljs.core.first(seq22826);
var seq22826__$1 = cljs.core.next(seq22826);
var G__22828 = cljs.core.first(seq22826__$1);
var seq22826__$2 = cljs.core.next(seq22826__$1);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22827,G__22828,seq22826__$2);
}));

sci.impl.namespaces.has_root_impl = (function sci$impl$namespaces$has_root_impl(sci_var){
return sci.impl.vars.hasRoot(sci_var);
});
sci.impl.namespaces.sci_ns_name = (function sci$impl$namespaces$sci_ns_name(ns){
return sci.impl.vars.getName(ns);
});
sci.impl.namespaces.sci_alias = (function sci$impl$namespaces$sci_alias(ctx,alias_sym,ns_sym){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx),(function (env){
var current_ns = sci.impl.vars.current_ns_name();
return cljs.core.assoc_in(env,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,current_ns,cljs.core.cst$kw$aliases,alias_sym], null),ns_sym);
}));

return null;
});
sci.impl.namespaces.sci_find_ns = (function sci$impl$namespaces$sci_find_ns(ctx,ns_sym){
if((ns_sym instanceof cljs.core.Symbol)){
} else {
throw (new Error("Assert failed: (symbol? ns-sym)"));
}

return sci.impl.utils.namespace_object(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx),ns_sym,false,null);
});
sci.impl.namespaces.sci_the_ns = (function sci$impl$namespaces$sci_the_ns(ctx,x){
if((x instanceof sci.impl.vars.SciNamespace)){
return x;
} else {
var or__4126__auto__ = sci.impl.namespaces.sci_find_ns(ctx,x);
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
throw (new Error(["No namespace: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)," found"].join('')));
}
}
});
sci.impl.namespaces.sci_ns_aliases = (function sci$impl$namespaces$sci_ns_aliases(ctx,sci_ns){
var sci_ns__$1 = sci.impl.namespaces.sci_the_ns(ctx,sci_ns);
var name = sci.impl.namespaces.sci_ns_name(sci_ns__$1);
var aliases = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,name,cljs.core.cst$kw$aliases], null));
return cljs.core.zipmap(cljs.core.keys(aliases),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (sym){
return sci.impl.vars.__GT_SciNamespace(sym,null);
}),cljs.core.vals(aliases)));
});
sci.impl.namespaces.sci_ns_interns = (function sci$impl$namespaces$sci_ns_interns(ctx,sci_ns){
var sci_ns__$1 = sci.impl.namespaces.sci_the_ns(ctx,sci_ns);
var name = sci.impl.namespaces.sci_ns_name(sci_ns__$1);
var m = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,name], null));
var m__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m,cljs.core.cst$kw$aliases,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.cst$kw$imports,cljs.core.cst$kw$obj], 0));
return m__$1;
});
sci.impl.namespaces.sci_ns_publics = (function sci$impl$namespaces$sci_ns_publics(ctx,sci_ns){
var sci_ns__$1 = sci.impl.namespaces.sci_the_ns(ctx,sci_ns);
var name = sci.impl.namespaces.sci_ns_name(sci_ns__$1);
var m = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,name], null));
var m__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m,cljs.core.cst$kw$aliases,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.cst$kw$imports,cljs.core.cst$kw$obj], 0));
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.keep.cljs$core$IFn$_invoke$arity$2((function (p__22832){
var vec__22833 = p__22832;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22833,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22833,(1),null);
if(cljs.core.truth_(cljs.core.cst$kw$private.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v)))){
return null;
} else {
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null);
}
}),m__$1));
});
sci.impl.namespaces.sci_ns_imports = (function sci$impl$namespaces$sci_ns_imports(ctx,sci_ns){
var sci_ns__$1 = sci.impl.namespaces.sci_the_ns(ctx,sci_ns);
var name = sci.impl.namespaces.sci_ns_name(sci_ns__$1);
var env = cljs.core.deref(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx));
var global_imports = cljs.core.cst$kw$imports.cljs$core$IFn$_invoke$arity$1(env);
var namespace_imports = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,name,cljs.core.cst$kw$imports], null));
var class_opts = cljs.core.cst$kw$class_DASH__GT_opts.cljs$core$IFn$_invoke$arity$1(ctx);
var all_aliased = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(global_imports),cljs.core.keys(namespace_imports));
var all_imports = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.vals(global_imports),cljs.core.vals(namespace_imports));
return cljs.core.zipmap(all_aliased,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$class,(function (p1__22836_SHARP_){
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(class_opts,p1__22836_SHARP_);
})),all_imports));
});
sci.impl.namespaces.sci_ns_refers = (function sci$impl$namespaces$sci_ns_refers(ctx,sci_ns){
var sci_ns__$1 = sci.impl.namespaces.sci_the_ns(ctx,sci_ns);
var name = sci.impl.namespaces.sci_ns_name(sci_ns__$1);
var env = cljs.core.deref(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx));
var the_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,name], null));
var the_ns__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(the_ns,cljs.core.cst$kw$aliases,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.cst$kw$imports,cljs.core.cst$kw$obj], 0));
var clojure_core = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,cljs.core.cst$sym$clojure$core], null));
var clojure_core__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(clojure_core,cljs.core.cst$kw$aliases,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.cst$kw$imports,cljs.core.cst$kw$obj], 0));
return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([the_ns__$1,clojure_core__$1], 0));
});
sci.impl.namespaces.sci_ns_map = (function sci$impl$namespaces$sci_ns_map(ctx,sci_ns){
return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sci.impl.namespaces.sci_ns_interns(ctx,sci_ns),sci.impl.namespaces.sci_ns_refers(ctx,sci_ns),sci.impl.namespaces.sci_ns_imports(ctx,sci_ns)], 0));
});
sci.impl.namespaces.sci_ns_unmap = (function sci$impl$namespaces$sci_ns_unmap(ctx,sci_ns,sym){
if((sym instanceof cljs.core.Symbol)){
} else {
throw (new Error("Assert failed: (symbol? sym)"));
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx),(function (env){
var sci_ns__$1 = sci.impl.namespaces.sci_the_ns(ctx,sci_ns);
var name = sci.impl.namespaces.sci_ns_name(sci_ns__$1);
return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,name], null),(function (the_ns_map){
if(cljs.core.contains_QMARK_(the_ns_map,sym)){
return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(the_ns_map,sym);
} else {
if(((cljs.core.contains_QMARK_(cljs.core.cst$kw$imports.cljs$core$IFn$_invoke$arity$1(env),sym)) || (cljs.core.contains_QMARK_(cljs.core.cst$kw$imports.cljs$core$IFn$_invoke$arity$1(the_ns_map),sym)))){
return cljs.core.update.cljs$core$IFn$_invoke$arity$5(the_ns_map,cljs.core.cst$kw$imports,cljs.core.assoc,sym,null);
} else {
return the_ns_map;

}
}
}));
}));

return null;
});
sci.impl.namespaces.sci_all_ns = (function sci$impl$namespaces$sci_all_ns(ctx){
var env = cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx);
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22837_SHARP_){
return sci.impl.utils.namespace_object(env,p1__22837_SHARP_,true,null);
}),cljs.core.keys(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(env),cljs.core.cst$kw$namespaces)));
});
sci.impl.namespaces.sci_remove_ns = (function sci$impl$namespaces$sci_remove_ns(ctx,sym){
var env = cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(env,cljs.core.update,cljs.core.cst$kw$namespaces,cljs.core.dissoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym], 0));

return null;
});
sci.impl.namespaces.sci_intern = (function sci$impl$namespaces$sci_intern(var_args){
var G__22839 = arguments.length;
switch (G__22839) {
case 3:
return sci.impl.namespaces.sci_intern.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return sci.impl.namespaces.sci_intern.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(sci.impl.namespaces.sci_intern.cljs$core$IFn$_invoke$arity$3 = (function (ctx,ns,var_sym){
var ns__$1 = sci.impl.namespaces.sci_the_ns(ctx,ns);
var ns_name = sci.impl.namespaces.sci_ns_name(ns__$1);
var env = cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx);
var or__4126__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(env),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,ns_name,var_sym], null));
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
var var_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym));
var new_var = sci.impl.vars.__GT_SciVar(null,var_name,cljs.core.meta(var_sym),false);
new_var.sci$impl$vars$IVar$unbind$arity$1(null);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(env,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,ns_name,var_sym], null),new_var);

return new_var;
}
}));

(sci.impl.namespaces.sci_intern.cljs$core$IFn$_invoke$arity$4 = (function (ctx,ns,var_sym,val){
var ns__$1 = sci.impl.namespaces.sci_the_ns(ctx,ns);
var ns_name = sci.impl.namespaces.sci_ns_name(ns__$1);
var env = cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx);
var or__4126__auto__ = (function (){var temp__5720__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(env),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,ns_name,var_sym], null));
if(cljs.core.truth_(temp__5720__auto__)){
var v = temp__5720__auto__;
sci.impl.vars.bindRoot(v,val);

return v;
} else {
return null;
}
})();
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
var var_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym));
var new_var = sci.impl.vars.__GT_SciVar(val,var_name,cljs.core.meta(var_sym),false);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(env,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$namespaces,ns_name,var_sym], null),new_var);

return new_var;
}
}));

(sci.impl.namespaces.sci_intern.cljs$lang$maxFixedArity = 4);

sci.impl.namespaces.sci_bound_QMARK_ = (function sci$impl$namespaces$sci_bound_QMARK_(sci_var){
var or__4126__auto__ = sci.impl.vars.hasRoot(sci_var);
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return (((!((sci.impl.vars.get_thread_binding(sci_var) == null)))) || (false));
}
});
sci.impl.namespaces.require = (function sci$impl$namespaces$require(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22843 = arguments.length;
var i__4737__auto___22844 = (0);
while(true){
if((i__4737__auto___22844 < len__4736__auto___22843)){
args__4742__auto__.push((arguments[i__4737__auto___22844]));

var G__22845 = (i__4737__auto___22844 + (1));
i__4737__auto___22844 = G__22845;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);
return sci.impl.namespaces.require.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);
});

(sci.impl.namespaces.require.cljs$core$IFn$_invoke$arity$variadic = (function (sci_ctx,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(sci.impl.utils.eval_require_state),sci_ctx,args);
}));

(sci.impl.namespaces.require.cljs$lang$maxFixedArity = (1));

/** @this {Function} */
(sci.impl.namespaces.require.cljs$lang$applyTo = (function (seq22841){
var G__22842 = cljs.core.first(seq22841);
var seq22841__$1 = cljs.core.next(seq22841);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22842,seq22841__$1);
}));

sci.impl.namespaces.use = (function sci$impl$namespaces$use(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22848 = arguments.length;
var i__4737__auto___22849 = (0);
while(true){
if((i__4737__auto___22849 < len__4736__auto___22848)){
args__4742__auto__.push((arguments[i__4737__auto___22849]));

var G__22850 = (i__4737__auto___22849 + (1));
i__4737__auto___22849 = G__22850;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);
return sci.impl.namespaces.use.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);
});

(sci.impl.namespaces.use.cljs$core$IFn$_invoke$arity$variadic = (function (sci_ctx,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(sci.impl.utils.eval_use_state),sci_ctx,args);
}));

(sci.impl.namespaces.use.cljs$lang$maxFixedArity = (1));

/** @this {Function} */
(sci.impl.namespaces.use.cljs$lang$applyTo = (function (seq22846){
var G__22847 = cljs.core.first(seq22846);
var seq22846__$1 = cljs.core.next(seq22846);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22847,seq22846__$1);
}));

sci.impl.namespaces.sci_resolve = (function sci$impl$namespaces$sci_resolve(var_args){
var G__22852 = arguments.length;
switch (G__22852) {
case 2:
return sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 3:
return sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$2 = (function (sci_ctx,sym){
var fexpr__22853 = cljs.core.deref(sci.impl.utils.eval_resolve_state);
return (fexpr__22853.cljs$core$IFn$_invoke$arity$2 ? fexpr__22853.cljs$core$IFn$_invoke$arity$2(sci_ctx,sym) : fexpr__22853.call(null,sci_ctx,sym));
}));

(sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$3 = (function (sci_ctx,env,sym){
var fexpr__22854 = cljs.core.deref(sci.impl.utils.eval_resolve_state);
return (fexpr__22854.cljs$core$IFn$_invoke$arity$3 ? fexpr__22854.cljs$core$IFn$_invoke$arity$3(sci_ctx,env,sym) : fexpr__22854.call(null,sci_ctx,env,sym));
}));

(sci.impl.namespaces.sci_resolve.cljs$lang$maxFixedArity = 3);

sci.impl.namespaces.sci_refer = (function sci$impl$namespaces$sci_refer(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22858 = arguments.length;
var i__4737__auto___22859 = (0);
while(true){
if((i__4737__auto___22859 < len__4736__auto___22858)){
args__4742__auto__.push((arguments[i__4737__auto___22859]));

var G__22860 = (i__4737__auto___22859 + (1));
i__4737__auto___22859 = G__22860;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((1) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((1)),(0),null)):null);
return sci.impl.namespaces.sci_refer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4743__auto__);
});

(sci.impl.namespaces.sci_refer.cljs$core$IFn$_invoke$arity$variadic = (function (sci_ctx,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(sci.impl.utils.eval_refer_state),sci_ctx,args);
}));

(sci.impl.namespaces.sci_refer.cljs$lang$maxFixedArity = (1));

/** @this {Function} */
(sci.impl.namespaces.sci_refer.cljs$lang$applyTo = (function (seq22856){
var G__22857 = cljs.core.first(seq22856);
var seq22856__$1 = cljs.core.next(seq22856);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22857,seq22856__$1);
}));

sci.impl.namespaces.sci_ns_resolve = (function sci$impl$namespaces$sci_ns_resolve(var_args){
var G__22862 = arguments.length;
switch (G__22862) {
case 3:
return sci.impl.namespaces.sci_ns_resolve.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));

break;
case 4:
return sci.impl.namespaces.sci_ns_resolve.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(sci.impl.namespaces.sci_ns_resolve.cljs$core$IFn$_invoke$arity$3 = (function (sci_ctx,ns,sym){
sci.impl.vars.push_thread_bindings(cljs.core.PersistentArrayMap.createAsIfByAssoc([sci.impl.vars.current_ns,sci.impl.namespaces.sci_the_ns(sci_ctx,ns)]));

try{return sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$2(sci_ctx,sym);
}finally {sci.impl.vars.pop_thread_bindings();
}}));

(sci.impl.namespaces.sci_ns_resolve.cljs$core$IFn$_invoke$arity$4 = (function (sci_ctx,ns,env,sym){
sci.impl.vars.push_thread_bindings(cljs.core.PersistentArrayMap.createAsIfByAssoc([sci.impl.vars.current_ns,sci.impl.namespaces.sci_the_ns(sci_ctx,ns)]));

try{return sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$3(sci_ctx,env,sym);
}finally {sci.impl.vars.pop_thread_bindings();
}}));

(sci.impl.namespaces.sci_ns_resolve.cljs$lang$maxFixedArity = 4);

sci.impl.namespaces.sci_requiring_resolve = (function sci$impl$namespaces$sci_requiring_resolve(sci_ctx,sym){
if(cljs.core.qualified_symbol_QMARK_(sym)){
var or__4126__auto__ = sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$2(sci_ctx,sym);
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
var namespace = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));
sci.impl.namespaces.require.cljs$core$IFn$_invoke$arity$variadic(sci_ctx,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([namespace], 0));

return sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$2(sci_ctx,sym);
}
} else {
throw (new Error(["Not a qualified symbol: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join('')));
}
});
sci.impl.namespaces.sci_find_var = (function sci$impl$namespaces$sci_find_var(sci_ctx,sym){
if(cljs.core.qualified_symbol_QMARK_(sym)){
var nsname = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));
var sym_SINGLEQUOTE_ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));
var temp__5718__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$namespaces.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(sci_ctx))),nsname);
if(cljs.core.truth_(temp__5718__auto__)){
var namespace = temp__5718__auto__;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(namespace,sym_SINGLEQUOTE_);
} else {
throw (new Error(["No such namespace: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(nsname)].join('')));
}
} else {
throw (new Error(["Not a qualified symbol: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join('')));
}
});
sci.impl.namespaces.sci_with_bindings = (function sci$impl$namespaces$sci_with_bindings(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22868 = arguments.length;
var i__4737__auto___22869 = (0);
while(true){
if((i__4737__auto___22869 < len__4736__auto___22868)){
args__4742__auto__.push((arguments[i__4737__auto___22869]));

var G__22870 = (i__4737__auto___22869 + (1));
i__4737__auto___22869 = G__22870;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.sci_with_bindings.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.sci_with_bindings.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,bindings,body){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$do,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_push_DASH_thread_DASH_bindings,null,(1),null)),(new cljs.core.List(null,bindings,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$try,null,(1),null)),body,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$finally,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_pop_DASH_thread_DASH_bindings,null,(1),null))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.sci_with_bindings.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.sci_with_bindings.cljs$lang$applyTo = (function (seq22864){
var G__22865 = cljs.core.first(seq22864);
var seq22864__$1 = cljs.core.next(seq22864);
var G__22866 = cljs.core.first(seq22864__$1);
var seq22864__$2 = cljs.core.next(seq22864__$1);
var G__22867 = cljs.core.first(seq22864__$2);
var seq22864__$3 = cljs.core.next(seq22864__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22865,G__22866,G__22867,seq22864__$3);
}));

sci.impl.namespaces.sci_binding = (function sci$impl$namespaces$sci_binding(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22875 = arguments.length;
var i__4737__auto___22876 = (0);
while(true){
if((i__4737__auto___22876 < len__4736__auto___22875)){
args__4742__auto__.push((arguments[i__4737__auto___22876]));

var G__22877 = (i__4737__auto___22876 + (1));
i__4737__auto___22876 = G__22877;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.sci_binding.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.sci_binding.cljs$core$IFn$_invoke$arity$variadic = (function (form,_,bindings,body){
if(cljs.core.vector_QMARK_(bindings)){
} else {
sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$2("binding requires a vector for its bindings",form);
}

if(cljs.core.even_QMARK_(cljs.core.count(bindings))){
} else {
sci.impl.utils.throw_error_with_location.cljs$core$IFn$_invoke$arity$2("binding requires an even number of forms in binding vector",form);
}

var var_ize = (function (var_vals){
var ret = cljs.core.PersistentVector.EMPTY;
var vvs = cljs.core.seq(var_vals);
while(true){
if(vvs){
var G__22878 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$var,null,(1),null)),(new cljs.core.List(null,cljs.core.first(vvs),null,(1),null)))))),cljs.core.second(vvs));
var G__22879 = cljs.core.next(cljs.core.next(vvs));
ret = G__22878;
vvs = G__22879;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_push_DASH_thread_DASH_bindings,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map,null,(1),null)),var_ize(bindings)))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$try,null,(1),null)),body,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$finally,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_pop_DASH_thread_DASH_bindings,null,(1),null))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.sci_binding.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.sci_binding.cljs$lang$applyTo = (function (seq22871){
var G__22872 = cljs.core.first(seq22871);
var seq22871__$1 = cljs.core.next(seq22871);
var G__22873 = cljs.core.first(seq22871__$1);
var seq22871__$2 = cljs.core.next(seq22871__$1);
var G__22874 = cljs.core.first(seq22871__$2);
var seq22871__$3 = cljs.core.next(seq22871__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22872,G__22873,G__22874,seq22871__$3);
}));

sci.impl.namespaces.sci_with_redefs_fn = (function sci$impl$namespaces$sci_with_redefs_fn(binding_map,func){
var root_bind = (function (m){
var seq__22881 = cljs.core.seq(m);
var chunk__22882 = null;
var count__22883 = (0);
var i__22884 = (0);
while(true){
if((i__22884 < count__22883)){
var vec__22891 = chunk__22882.cljs$core$IIndexed$_nth$arity$2(null,i__22884);
var a_var = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22891,(0),null);
var a_val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22891,(1),null);
sci.impl.vars.bindRoot(a_var,a_val);


var G__22897 = seq__22881;
var G__22898 = chunk__22882;
var G__22899 = count__22883;
var G__22900 = (i__22884 + (1));
seq__22881 = G__22897;
chunk__22882 = G__22898;
count__22883 = G__22899;
i__22884 = G__22900;
continue;
} else {
var temp__5720__auto__ = cljs.core.seq(seq__22881);
if(temp__5720__auto__){
var seq__22881__$1 = temp__5720__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22881__$1)){
var c__4556__auto__ = cljs.core.chunk_first(seq__22881__$1);
var G__22901 = cljs.core.chunk_rest(seq__22881__$1);
var G__22902 = c__4556__auto__;
var G__22903 = cljs.core.count(c__4556__auto__);
var G__22904 = (0);
seq__22881 = G__22901;
chunk__22882 = G__22902;
count__22883 = G__22903;
i__22884 = G__22904;
continue;
} else {
var vec__22894 = cljs.core.first(seq__22881__$1);
var a_var = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22894,(0),null);
var a_val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22894,(1),null);
sci.impl.vars.bindRoot(a_var,a_val);


var G__22905 = cljs.core.next(seq__22881__$1);
var G__22906 = null;
var G__22907 = (0);
var G__22908 = (0);
seq__22881 = G__22905;
chunk__22882 = G__22906;
count__22883 = G__22907;
i__22884 = G__22908;
continue;
}
} else {
return null;
}
}
break;
}
});
var old_vals = cljs.core.zipmap(cljs.core.keys(binding_map),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22880_SHARP_){
return sci.impl.vars.getRawRoot(p1__22880_SHARP_);
}),cljs.core.keys(binding_map)));
try{root_bind(binding_map);

return (func.cljs$core$IFn$_invoke$arity$0 ? func.cljs$core$IFn$_invoke$arity$0() : func.call(null));
}finally {root_bind(old_vals);
}});
sci.impl.namespaces.sci_with_redefs = (function sci$impl$namespaces$sci_with_redefs(var_args){
var args__4742__auto__ = [];
var len__4736__auto___22914 = arguments.length;
var i__4737__auto___22915 = (0);
while(true){
if((i__4737__auto___22915 < len__4736__auto___22914)){
args__4742__auto__.push((arguments[i__4737__auto___22915]));

var G__22916 = (i__4737__auto___22915 + (1));
i__4737__auto___22915 = G__22916;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((3) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((3)),(0),null)):null);
return sci.impl.namespaces.sci_with_redefs.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__4743__auto__);
});

(sci.impl.namespaces.sci_with_redefs.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,bindings,body){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_with_DASH_redefs_DASH_fn,null,(1),null)),(new cljs.core.List(null,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22909_SHARP_){
return (new cljs.core.List(null,cljs.core.cst$sym$var,(new cljs.core.List(null,p1__22909_SHARP_,null,(1),null)),(2),null));
}),cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),bindings)),cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((2),cljs.core.next(bindings))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_fn,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$0()))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([body], 0)))),null,(1),null))], 0))));
}));

(sci.impl.namespaces.sci_with_redefs.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(sci.impl.namespaces.sci_with_redefs.cljs$lang$applyTo = (function (seq22910){
var G__22911 = cljs.core.first(seq22910);
var seq22910__$1 = cljs.core.next(seq22910);
var G__22912 = cljs.core.first(seq22910__$1);
var seq22910__$2 = cljs.core.next(seq22910__$1);
var G__22913 = cljs.core.first(seq22910__$2);
var seq22910__$3 = cljs.core.next(seq22910__$2);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22911,G__22912,G__22913,seq22910__$3);
}));

/**
 * Returns a Symbol with the given namespace and name. Arity-1 works
 *   on strings, keywords, and vars.
 */
sci.impl.namespaces.symbol_STAR_ = (function sci$impl$namespaces$symbol_STAR_(var_args){
var G__22918 = arguments.length;
switch (G__22918) {
case 1:
return sci.impl.namespaces.symbol_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
case 2:
return sci.impl.namespaces.symbol_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(sci.impl.namespaces.symbol_STAR_.cljs$core$IFn$_invoke$arity$1 = (function (name){
if(sci.impl.vars.var_QMARK_(name)){
var m = cljs.core.meta(name);
var ns = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(m);
var nm = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m);
if(cljs.core.truth_((function (){var and__4115__auto__ = ns;
if(cljs.core.truth_(and__4115__auto__)){
return nm;
} else {
return and__4115__auto__;
}
})())){
return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sci.impl.namespaces.sci_ns_name(ns)),cljs.core.name(nm));
} else {
return null;
}
} else {
return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);
}
}));

(sci.impl.namespaces.symbol_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (ns,name){
return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(ns,name);
}));

(sci.impl.namespaces.symbol_STAR_.cljs$lang$maxFixedArity = 2);

sci.impl.namespaces.macroexpand_STAR_ = (function sci$impl$namespaces$macroexpand_STAR_(ctx,expr){
var fexpr__22920 = cljs.core.deref(sci.impl.utils.macroexpand_STAR_);
return (fexpr__22920.cljs$core$IFn$_invoke$arity$2 ? fexpr__22920.cljs$core$IFn$_invoke$arity$2(ctx,expr) : fexpr__22920.call(null,ctx,expr));
});
sci.impl.namespaces.macroexpand_1_STAR_ = (function sci$impl$namespaces$macroexpand_1_STAR_(ctx,expr){
var fexpr__22921 = cljs.core.deref(sci.impl.utils.macroexpand_1_STAR_);
return (fexpr__22921.cljs$core$IFn$_invoke$arity$2 ? fexpr__22921.cljs$core$IFn$_invoke$arity$2(ctx,expr) : fexpr__22921.call(null,ctx,expr));
});
sci.impl.namespaces._STAR_1 = sci.impl.vars.__GT_SciVar(null,cljs.core.cst$sym$_STAR_1,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns,sci.impl.namespaces.clojure_core_ns,cljs.core.cst$kw$dynamic,true], null),false);
sci.impl.namespaces._STAR_2 = sci.impl.vars.__GT_SciVar(null,cljs.core.cst$sym$_STAR_2,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns,sci.impl.namespaces.clojure_core_ns,cljs.core.cst$kw$dynamic,true], null),false);
sci.impl.namespaces._STAR_3 = sci.impl.vars.__GT_SciVar(null,cljs.core.cst$sym$_STAR_3,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns,sci.impl.namespaces.clojure_core_ns,cljs.core.cst$kw$dynamic,true], null),false);
sci.impl.namespaces._STAR_e = sci.impl.vars.__GT_SciVar(null,cljs.core.cst$sym$_STAR_e,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$ns,sci.impl.namespaces.clojure_core_ns,cljs.core.cst$kw$dynamic,true], null),false);
sci.impl.namespaces.clojure_core = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$sym$unchecked_DASH_char,cljs.core.cst$sym$sorted_DASH_set,cljs.core.cst$sym$true_QMARK_,cljs.core.cst$sym$unchecked_DASH_byte,cljs.core.cst$sym$_STAR_2,cljs.core.cst$sym$doto,cljs.core.cst$sym$reduce_DASH_kv,cljs.core.cst$sym$defmethod,cljs.core.cst$sym$update_DASH_in,cljs.core.cst$sym$prefer_DASH_method,cljs.core.cst$sym$derive,cljs.core.cst$sym$nfirst,cljs.core.cst$sym$sort_DASH_by,cljs.core.cst$sym$keys,cljs.core.cst$sym$ancestors,cljs.core.cst$sym$first,cljs.core.cst$sym$butlast,cljs.core.cst$sym$with_DASH_out_DASH_str,cljs.core.cst$sym$partition_DASH_by,cljs.core.cst$sym$uri_QMARK_,cljs.core.cst$sym$map_DASH_entry_QMARK_,cljs.core.cst$sym$simple_DASH_keyword_QMARK_,cljs.core.cst$sym$into_DASH_array,cljs.core.cst$sym$ns_DASH_refers,cljs.core.cst$sym$rest,cljs.core.cst$sym$seq,cljs.core.cst$sym$unchecked_DASH_inc_DASH_int,cljs.core.cst$sym$odd_QMARK_,cljs.core.cst$sym$partition,cljs.core.cst$sym$_GT__EQ_,cljs.core.cst$sym$fnext,cljs.core.cst$sym$when_DASH_first,cljs.core.cst$sym$bit_DASH_or,cljs.core.cst$sym$disj,cljs.core.cst$sym$with_DASH_redefs_DASH_fn,cljs.core.cst$sym$_DASH_new_DASH_var,cljs.core.cst$sym$unchecked_DASH_short,cljs.core.cst$sym$ffirst,cljs.core.cst$sym$condp,cljs.core.cst$sym$munge,cljs.core.cst$sym$_STAR_file_STAR_,cljs.core.cst$sym$unchecked_DASH_negate_DASH_int,cljs.core.cst$sym$print_DASH_str,cljs.core.cst$sym$vreset_BANG_,cljs.core.cst$sym$uuid_QMARK_,cljs.core.cst$sym$reset_BANG_,cljs.core.cst$sym$atom,cljs.core.cst$sym$select_DASH_keys,cljs.core.cst$sym$reverse,cljs.core.cst$sym$ex_DASH_message,cljs.core.cst$sym$special_DASH_symbol_QMARK_,cljs.core.cst$sym$merge,cljs.core.cst$sym$newline,cljs.core.cst$sym$unchecked_DASH_multiply,cljs.core.cst$sym$$$,cljs.core.cst$sym$chunked_DASH_seq_QMARK_,cljs.core.cst$sym$inst_QMARK_,cljs.core.cst$sym$random_DASH_sample,cljs.core.cst$sym$_GT_,cljs.core.cst$sym$count,cljs.core.cst$sym$simple_DASH_ident_QMARK_,cljs.core.cst$sym$ns_DASH_name,cljs.core.cst$sym$_STAR_1,cljs.core.cst$sym$last,cljs.core.cst$sym$bit_DASH_shift_DASH_left,cljs.core.cst$sym$int,cljs.core.cst$sym$unchecked_DASH_negate,cljs.core.cst$sym$multi_DASH_fn_DASH_impl,cljs.core.cst$sym$unchecked_DASH_remainder_DASH_int,cljs.core.cst$sym$byte,cljs.core.cst$sym$conj_BANG_,cljs.core.cst$sym$println,cljs.core.cst$sym$defprotocol,cljs.core.cst$sym$int_QMARK_,cljs.core.cst$sym$long_DASH_array,cljs.core.cst$sym$find,cljs.core.cst$sym$vals,cljs.core.cst$sym$nil_QMARK_,cljs.core.cst$sym$flush,cljs.core.cst$sym$hash,cljs.core.cst$sym$pr,cljs.core.cst$sym$unchecked_DASH_subtract,cljs.core.cst$sym$comment,cljs.core.cst$sym$with_DASH_redefs,cljs.core.cst$sym$float_QMARK_,cljs.core.cst$sym$second,cljs.core.cst$sym$extend_DASH_protocol,cljs.core.cst$sym$_STAR_err_STAR_,cljs.core.cst$sym$chunk_DASH_first,cljs.core.cst$sym$alias,cljs.core.cst$sym$unchecked_DASH_add_DASH_int,cljs.core.cst$sym$ifn_QMARK_,cljs.core.cst$sym$ex_DASH_info,cljs.core.cst$sym$inc,cljs.core.cst$sym$_SLASH_,cljs.core.cst$sym$volatile_BANG_,cljs.core.cst$sym$with_DASH_meta,cljs.core.cst$sym$map_QMARK_,cljs.core.cst$sym$vector_QMARK_,cljs.core.cst$sym$_DASH__GT__GT_,cljs.core.cst$sym$quot,cljs.core.cst$sym$any_QMARK_,cljs.core.cst$sym$unchecked_DASH_add,cljs.core.cst$sym$floats,cljs.core.cst$sym$drop_DASH_while,cljs.core.cst$sym$bounded_DASH_count,cljs.core.cst$sym$take_DASH_while,cljs.core.cst$sym$extends_QMARK_,cljs.core.cst$sym$sort,cljs.core.cst$sym$false_QMARK_,cljs.core.cst$sym$cat,cljs.core.cst$sym$extend_DASH_type,cljs.core.cst$sym$_STAR_print_DASH_level_STAR_,cljs.core.cst$sym$replace,cljs.core.cst$sym$drop,cljs.core.cst$sym$push_DASH_thread_DASH_bindings,cljs.core.cst$sym$not,cljs.core.cst$sym$keep,cljs.core.cst$sym$cons,cljs.core.cst$sym$_STAR_e,cljs.core.cst$sym$bit_DASH_shift_DASH_right,cljs.core.cst$sym$associative_QMARK_,cljs.core.cst$sym$read,cljs.core.cst$sym$unquote,cljs.core.cst$sym$macroexpand,cljs.core.cst$sym$_STAR_print_DASH_length_STAR_,cljs.core.cst$sym$if_DASH_not,cljs.core.cst$sym$chunk_DASH_next,cljs.core.cst$sym$var_DASH_set,cljs.core.cst$sym$bit_DASH_flip,cljs.core.cst$sym$aset,cljs.core.cst$sym$_DASH_deref,cljs.core.cst$sym$_STAR_ns_STAR_,cljs.core.cst$sym$some_DASH_fn,cljs.core.cst$sym$var_QMARK_,cljs.core.cst$sym$_STAR_print_DASH_meta_STAR_,cljs.core.cst$sym$when_DASH_not,cljs.core.cst$sym$unchecked_DASH_multiply_DASH_int,cljs.core.cst$sym$identity,cljs.core.cst$sym$_DASH_reset_BANG_,cljs.core.cst$sym$to_DASH_array,cljs.core.cst$sym$double_DASH_array,cljs.core.cst$sym$sorted_DASH_map,cljs.core.cst$sym$_DASH_reified_DASH_methods,cljs.core.cst$sym$concat,cljs.core.cst$sym$char,cljs.core.cst$sym$ident_QMARK_,cljs.core.cst$sym$make_DASH_array,cljs.core.cst$sym$chunk_DASH_buffer,cljs.core.cst$sym$peek,cljs.core.cst$sym$hash_DASH_unordered_DASH_coll,cljs.core.cst$sym$when,cljs.core.cst$sym$clj_DASH__GT_js,cljs.core.cst$sym$sequence,cljs.core.cst$sym$group_DASH_by,cljs.core.cst$sym$re_DASH_seq,cljs.core.cst$sym$_DASH_swap_BANG_,cljs.core.cst$sym$when_DASH_some,cljs.core.cst$sym$unchecked_DASH_subtract_DASH_int,cljs.core.cst$sym$_LT__EQ_,cljs.core.cst$sym$prefers,cljs.core.cst$sym$vary_DASH_meta,cljs.core.cst$sym$_EQ_,cljs.core.cst$sym$intern,cljs.core.cst$sym$keep_DASH_indexed,cljs.core.cst$sym$js_DASH_obj,cljs.core.cst$sym$every_QMARK_,cljs.core.cst$sym$comp,cljs.core.cst$sym$bit_DASH_set,cljs.core.cst$sym$dissoc,cljs.core.cst$sym$min,cljs.core.cst$sym$char_QMARK_,cljs.core.cst$sym$with_DASH_open,cljs.core.cst$sym$interleave,cljs.core.cst$sym$with_DASH_local_DASH_vars,cljs.core.cst$sym$bound_QMARK_,cljs.core.cst$sym$all_DASH_ns,cljs.core.cst$sym$split_DASH_at,cljs.core.cst$sym$neg_DASH_int_QMARK_,cljs.core.cst$sym$mapv,cljs.core.cst$sym$defonce,cljs.core.cst$sym$prn,cljs.core.cst$sym$drop_DASH_last,cljs.core.cst$sym$fnil,cljs.core.cst$sym$cond_DASH__GT__GT_,cljs.core.cst$sym$pop_DASH_thread_DASH_bindings,cljs.core.cst$sym$satisfies_QMARK_,cljs.core.cst$sym$next,cljs.core.cst$sym$_PLUS_,cljs.core.cst$sym$load_DASH_string,cljs.core.cst$sym$name,cljs.core.cst$sym$unchecked_DASH_double,cljs.core.cst$sym$when_DASH_let,cljs.core.cst$sym$symbol_QMARK_,cljs.core.cst$sym$chunk_DASH_cons,cljs.core.cst$sym$ns_DASH_imports,cljs.core.cst$sym$methods,cljs.core.cst$sym$reset_DASH_meta_BANG_,cljs.core.cst$sym$js_DASH__GT_clj,cljs.core.cst$sym$dotimes,cljs.core.cst$sym$rand_DASH_int,cljs.core.cst$sym$complement,cljs.core.cst$sym$list_QMARK_,cljs.core.cst$sym$aget,cljs.core.cst$sym$zipmap,cljs.core.cst$sym$find_DASH_var,cljs.core.cst$sym$run_BANG_,cljs.core.cst$sym$_EQ__EQ_,cljs.core.cst$sym$chars,cljs.core.cst$sym$iterate,cljs.core.cst$sym$boolean,cljs.core.cst$sym$hash_DASH_map,cljs.core.cst$sym$unchecked_DASH_inc,cljs.core.cst$sym$max_DASH_key,cljs.core.cst$sym$qualified_DASH_ident_QMARK_,cljs.core.cst$sym$coll_QMARK_,cljs.core.cst$sym$reversible_QMARK_,cljs.core.cst$sym$ns_DASH_unmap,cljs.core.cst$sym$apply,cljs.core.cst$sym$_STAR_in_STAR_,cljs.core.cst$sym$subvec,cljs.core.cst$sym$isa_QMARK_,cljs.core.cst$sym$not_DASH_every_QMARK_,cljs.core.cst$sym$ex_DASH_cause,cljs.core.cst$sym$keyword_QMARK_,cljs.core.cst$sym$ex_DASH_data,cljs.core.cst$sym$_STAR_print_DASH_namespace_DASH_maps_STAR_,cljs.core.cst$sym$compare,cljs.core.cst$sym$underive,cljs.core.cst$sym$transduce,cljs.core.cst$sym$range,cljs.core.cst$sym$IDeref,cljs.core.cst$sym$sorted_QMARK_,cljs.core.cst$sym$frequencies,cljs.core.cst$sym$cycle,cljs.core.cst$sym$max,cljs.core.cst$sym$simple_DASH_symbol_QMARK_,cljs.core.cst$sym$reify,cljs.core.cst$sym$empty_QMARK_,cljs.core.cst$sym$into,cljs.core.cst$sym$integer_QMARK_,cljs.core.cst$sym$_STAR_,cljs.core.cst$sym$some_DASH__GT__GT_,cljs.core.cst$sym$unsigned_DASH_bit_DASH_shift_DASH_right,cljs.core.cst$sym$pr_DASH_str,cljs.core.cst$sym$some_DASH__GT_,cljs.core.cst$sym$chunk,cljs.core.cst$sym$cond,cljs.core.cst$sym$distinct,cljs.core.cst$sym$ensure_DASH_reduced,cljs.core.cst$sym$object_DASH_array,cljs.core.cst$sym$juxt,cljs.core.cst$sym$some,cljs.core.cst$sym$interpose,cljs.core.cst$sym$the_DASH_ns,cljs.core.cst$sym$instance_QMARK_,cljs.core.cst$sym$descendants,cljs.core.cst$sym$get_DASH_in,cljs.core.cst$sym$meta,cljs.core.cst$sym$reify_STAR_,cljs.core.cst$sym$defrecord,cljs.core.cst$sym$val,cljs.core.cst$sym$read_DASH_string,cljs.core.cst$sym$assoc_DASH_in,cljs.core.cst$sym$zero_QMARK_,cljs.core.cst$sym$transient,cljs.core.cst$sym$letfn,cljs.core.cst$sym$realized_QMARK_,cljs.core.cst$sym$list_STAR_,cljs.core.cst$sym$ns_DASH_interns,cljs.core.cst$sym$memoize,cljs.core.cst$sym$subseq,cljs.core.cst$sym$completing,cljs.core.cst$sym$unchecked_DASH_divide_DASH_int,cljs.core.cst$sym$shuffle,cljs.core.cst$sym$ns_DASH_map,cljs.core.cst$sym$prn_DASH_str,cljs.core.cst$sym$defn_DASH_,cljs.core.cst$sym$compare_DASH_and_DASH_set_BANG_,cljs.core.cst$sym$use,cljs.core.cst$sym$longs,cljs.core.cst$sym$remove_DASH_ns,cljs.core.cst$sym$unchecked_DASH_int,cljs.core.cst$sym$nthrest,cljs.core.cst$sym$doubles,cljs.core.cst$sym$remove_DASH_method,cljs.core.cst$sym$extend,cljs.core.cst$sym$nnext,cljs.core.cst$sym$dec,cljs.core.cst$sym$qualified_DASH_keyword_QMARK_,cljs.core.cst$sym$comparator,cljs.core.cst$sym$take_DASH_last,cljs.core.cst$sym$find_DASH_ns,cljs.core.cst$sym$string_QMARK_,cljs.core.cst$sym$print,cljs.core.cst$sym$bit_DASH_xor,cljs.core.cst$sym$map,cljs.core.cst$sym$float,cljs.core.cst$sym$chunk_DASH_append,cljs.core.cst$sym$deref,cljs.core.cst$sym$re_DASH_pattern,cljs.core.cst$sym$repeat,cljs.core.cst$sym$reduce,cljs.core.cst$sym$qualified_DASH_symbol_QMARK_,cljs.core.cst$sym$eval,cljs.core.cst$sym$vector,cljs.core.cst$sym$doall,cljs.core.cst$sym$assoc_BANG_,cljs.core.cst$sym$not_EQ_,cljs.core.cst$sym$alter_DASH_meta_BANG_,cljs.core.cst$sym$constantly,cljs.core.cst$sym$seq_QMARK_,cljs.core.cst$sym$get,cljs.core.cst$sym$require,cljs.core.cst$sym$key,cljs.core.cst$sym$bit_DASH_and_DASH_not,cljs.core.cst$sym$mapcat,cljs.core.cst$sym$cond_DASH__GT_,cljs.core.cst$sym$nat_DASH_int_QMARK_,cljs.core.cst$sym$get_DASH_method,cljs.core.cst$sym$_STAR_out_STAR_,cljs.core.cst$sym$str,cljs.core.cst$sym$empty,cljs.core.cst$sym$counted_QMARK_,cljs.core.cst$sym$set_QMARK_,cljs.core.cst$sym$alength,cljs.core.cst$sym$filterv,cljs.core.cst$sym$reductions,cljs.core.cst$sym$booleans,cljs.core.cst$sym$_LT_,cljs.core.cst$sym$reduced,cljs.core.cst$sym$namespace,cljs.core.cst$sym$keyword,cljs.core.cst$sym$record_QMARK_,cljs.core.cst$sym$tagged_DASH_literal_QMARK_,cljs.core.cst$sym$_DASH_,cljs.core.cst$sym$bit_DASH_and,cljs.core.cst$sym$unreduced,cljs.core.cst$sym$assoc,cljs.core.cst$sym$defmulti,cljs.core.cst$sym$partition_DASH_all,cljs.core.cst$sym$bit_DASH_not,cljs.core.cst$sym$some_QMARK_,cljs.core.cst$sym$pos_QMARK_,cljs.core.cst$sym$trampoline,cljs.core.cst$sym$rand,cljs.core.cst$sym$re_DASH_matches,cljs.core.cst$sym$boolean_QMARK_,cljs.core.cst$sym$every_DASH_pred,cljs.core.cst$sym$fn_QMARK_,cljs.core.cst$sym$sequential_QMARK_,cljs.core.cst$sym$list,cljs.core.cst$sym$sorted_DASH_set_DASH_by,cljs.core.cst$sym$nthnext,cljs.core.cst$sym$eduction,cljs.core.cst$sym$rand_DASH_nth,cljs.core.cst$sym$delay,cljs.core.cst$sym$partial,cljs.core.cst$sym$with_DASH_bindings,cljs.core.cst$sym$rsubseq,cljs.core.cst$sym$contains_QMARK_,cljs.core.cst$sym$_DASH__GT_,cljs.core.cst$sym$shorts,cljs.core.cst$sym$ISwap,cljs.core.cst$sym$as_DASH__GT_,cljs.core.cst$sym$hash_DASH_set,cljs.core.cst$sym$take,cljs.core.cst$sym$if_DASH_let,cljs.core.cst$sym$macroexpand_DASH_1,cljs.core.cst$sym$split_DASH_with,cljs.core.cst$sym$refer,cljs.core.cst$sym$binding_DASH_conveyor_DASH_fn,cljs.core.cst$sym$make_DASH_hierarchy,cljs.core.cst$sym$tagged_DASH_literal,cljs.core.cst$sym$has_DASH_root_DASH_impl,cljs.core.cst$sym$parents,cljs.core.cst$sym$vec,cljs.core.cst$sym$nth,cljs.core.cst$kw$obj,cljs.core.cst$sym$lazy_DASH_cat,cljs.core.cst$sym$if_DASH_some,cljs.core.cst$sym$subs,cljs.core.cst$sym$symbol,cljs.core.cst$sym$mod,cljs.core.cst$sym$number_QMARK_,cljs.core.cst$sym$reduced_QMARK_,cljs.core.cst$sym$_DASH_new_DASH_dynamic_DASH_var,cljs.core.cst$sym$conj,cljs.core.cst$sym$bytes,cljs.core.cst$sym$unchecked_DASH_float,cljs.core.cst$sym$bit_DASH_test,cljs.core.cst$sym$sorted_DASH_map_DASH_by,cljs.core.cst$sym$double_QMARK_,cljs.core.cst$sym$rseq,cljs.core.cst$sym$unchecked_DASH_long,cljs.core.cst$sym$binding,cljs.core.cst$sym$double,cljs.core.cst$sym$tree_DASH_seq,cljs.core.cst$sym$multi_DASH_fn_DASH_add_DASH_method_DASH_impl,cljs.core.cst$sym$seqable_QMARK_,cljs.core.cst$sym$swap_BANG_,cljs.core.cst$sym$vswap_BANG_,cljs.core.cst$sym$array_DASH_map,cljs.core.cst$sym$reset_DASH_thread_DASH_binding_DASH_frame_DASH_impl,cljs.core.cst$sym$dedupe,cljs.core.cst$sym$short,cljs.core.cst$sym$update,cljs.core.cst$sym$filter,cljs.core.cst$sym$unchecked_DASH_dec_DASH_int,cljs.core.cst$sym$_STAR_3,cljs.core.cst$sym$requiring_DASH_resolve,cljs.core.cst$sym$rem,cljs.core.cst$sym$pop,cljs.core.cst$sym$merge_DASH_with,cljs.core.cst$sym$long,cljs.core.cst$sym$assert,cljs.core.cst$sym$flatten,cljs.core.cst$sym$distinct_QMARK_,cljs.core.cst$sym$map_DASH_indexed,cljs.core.cst$sym$ns_DASH_publics,cljs.core.cst$sym$protocol_DASH_type_DASH_impl,cljs.core.cst$sym$even_QMARK_,cljs.core.cst$sym$var_DASH_get,cljs.core.cst$sym$multi_DASH_fn_QMARK__DASH_impl,cljs.core.cst$sym$alter_DASH_var_DASH_root,cljs.core.cst$sym$type,cljs.core.cst$sym$neg_QMARK_,cljs.core.cst$sym$gensym,cljs.core.cst$sym$resolve,cljs.core.cst$sym$add_DASH_watch,cljs.core.cst$sym$not_DASH_any_QMARK_,cljs.core.cst$sym$take_DASH_nth,cljs.core.cst$sym$dorun,cljs.core.cst$sym$remove_DASH_all_DASH_methods,cljs.core.cst$sym$not_DASH_empty,cljs.core.cst$sym$ns_DASH_aliases,cljs.core.cst$sym$ns_DASH_resolve,cljs.core.cst$sym$get_DASH_thread_DASH_binding_DASH_frame_DASH_impl,cljs.core.cst$sym$chunk_DASH_rest,cljs.core.cst$sym$remove_DASH_watch,cljs.core.cst$sym$int_DASH_array,cljs.core.cst$sym$pos_DASH_int_QMARK_,cljs.core.cst$sym$ints,cljs.core.cst$sym$identical_QMARK_,cljs.core.cst$sym$persistent_BANG_,cljs.core.cst$sym$IReset,cljs.core.cst$sym$indexed_QMARK_,cljs.core.cst$sym$min_DASH_key,cljs.core.cst$sym$repeatedly,cljs.core.cst$sym$set,cljs.core.cst$sym$remove,cljs.core.cst$sym$while,cljs.core.cst$sym$re_DASH_find],[(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_char;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_char,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_char,"cljs/core.cljs",29,1,2726,2726,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_char)?cljs.core.unchecked_char.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_char;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22923 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22923,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22923;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sorted_set;},cljs.core.cst$sym$cljs$core_SLASH_sorted_DASH_set,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sorted_DASH_set,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$keys)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keys], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,9454,9454,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keys], null)),"Returns a new sorted set with supplied keys.",(cljs.core.truth_(cljs.core.sorted_set)?cljs.core.sorted_set.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sorted_set;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22924 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22924,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22924;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.true_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_true_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$true_QMARK_,"cljs/core.cljs",21,1,2233,2233,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x is the value true, false otherwise.",((cljs.core.true_QMARK_)?cljs.core.true_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.true_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22925 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22925,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22925;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_byte;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_byte,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_byte,"cljs/core.cljs",29,1,2725,2725,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_byte)?cljs.core.unchecked_byte.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_byte;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22926 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22926,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22926;
}
})(),false);
})(),sci.impl.namespaces._STAR_2,sci.impl.namespaces.macrofy(sci.impl.namespaces.doto_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.reduce_kv;},cljs.core.cst$sym$cljs$core_SLASH_reduce_DASH_kv,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$reduce_DASH_kv,"cljs/core.cljs",16,1,2569,2569,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$init,cljs.core.cst$sym$coll], null)),"Reduces an associative collection. f should be a function of 3\n  arguments. Returns the result of applying f to init, the first key\n  and the first value in coll, then applying f to that result and the\n  2nd key and value, etc. If coll contains no entries, returns init\n  and f is not called. Note that reduce-kv is supported on vectors,\n  where the keys will be the ordinals.",(cljs.core.truth_(cljs.core.reduce_kv)?cljs.core.reduce_kv.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.reduce_kv;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22927 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22927,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22927;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.multimethods.defmethod),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.update_in;},cljs.core.cst$sym$cljs$core_SLASH_update_DASH_in,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$update_DASH_in,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(6),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(6),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c], null),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null,null)], null),1,5315,5315,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c], null),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),"'Updates' a value in a nested associative structure, where ks is a\n  sequence of keys and f is a function that will take the old value\n  and any supplied args and return the new value, and returns a new\n  nested structure.  If any levels do not exist, hash-maps will be\n  created.",(cljs.core.truth_(cljs.core.update_in)?cljs.core.update_in.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.update_in;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22928 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22928,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22928;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.prefer_method;},cljs.core.cst$sym$cljs$core_SLASH_prefer_DASH_method,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$prefer_DASH_method,"cljs/core.cljs",20,1,11243,11243,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$multifn,cljs.core.cst$sym$dispatch_DASH_val_DASH_x,cljs.core.cst$sym$dispatch_DASH_val_DASH_y], null)),"Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y\n   when there is a conflict",(cljs.core.truth_(cljs.core.prefer_method)?cljs.core.prefer_method.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.prefer_method;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22929 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22929,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22929;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.hierarchies.derive_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.nfirst;},cljs.core.cst$sym$cljs$core_SLASH_nfirst,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$nfirst,"cljs/core.cljs",13,1,1767,1767,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Same as (next (first x))",(cljs.core.truth_(cljs.core.nfirst)?cljs.core.nfirst.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.nfirst;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22930 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22930,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22930;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sort_by;},cljs.core.cst$sym$cljs$core_SLASH_sort_DASH_by,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sort_DASH_by,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyfn,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyfn,cljs.core.cst$sym$comp,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyfn,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyfn,cljs.core.cst$sym$comp,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2463,2463,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyfn,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyfn,cljs.core.cst$sym$comp,cljs.core.cst$sym$coll], null)),"Returns a sorted sequence of the items in coll, where the sort\n   order is determined by comparing (keyfn item).  Comp can be\n   boolean-valued comparison function, or a -/0/+ valued comparator.\n   Comp defaults to compare.",(cljs.core.truth_(cljs.core.sort_by)?cljs.core.sort_by.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sort_by;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22931 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22931,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22931;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.keys;},cljs.core.cst$sym$cljs$core_SLASH_keys,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$keys,"cljs/core.cljs",11,1,9019,9019,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$map], null)),"Returns a sequence of the map's keys, in the same order as (seq map).",(cljs.core.truth_(cljs.core.keys)?cljs.core.keys.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.keys;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22932 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22932,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22932;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.hierarchies.ancestors_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.first;},cljs.core.cst$sym$cljs$core_SLASH_first,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$first,"cljs/core.cljs",12,1,1253,1253,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns the first item in the collection. Calls seq on its\n  argument. If coll is nil, returns nil.",(cljs.core.truth_(cljs.core.first)?cljs.core.first.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.first;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22933 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22933,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22933;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.butlast;},cljs.core.cst$sym$cljs$core_SLASH_butlast,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$butlast,"cljs/core.cljs",14,1,9509,9509,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Return a seq of all but the last item in coll, in linear time",(cljs.core.truth_(cljs.core.butlast)?cljs.core.butlast.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.butlast;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22934 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22934,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22934;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.io.with_out_str,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci_SLASH_macro,true], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.partition_by;},cljs.core.cst$sym$cljs$core_SLASH_partition_DASH_by,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$partition_DASH_by,"cljs/core.cljs",19,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9851,9851,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),"Applies f to each value in coll, splitting it each time f returns a\n   new value.  Returns a lazy seq of partitions.  Returns a stateful\n   transducer when no collection is provided.",(cljs.core.truth_(cljs.core.partition_by)?cljs.core.partition_by.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.partition_by;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22935 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22935,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22935;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.uri_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_uri_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.9",cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$uri_QMARK_,"cljs/core.cljs",11,1,11704,11704,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true x is a goog.Uri instance.",(cljs.core.truth_(cljs.core.uri_QMARK_)?cljs.core.uri_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.uri_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22936 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22936,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22936;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.map_entry_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_map_DASH_entry_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$map_DASH_entry_QMARK_,"cljs/core.cljs",17,1,6744,6744,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x satisfies IMapEntry",(cljs.core.truth_(cljs.core.map_entry_QMARK_)?cljs.core.map_entry_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.map_entry_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22937 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22937,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22937;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.simple_keyword_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_simple_DASH_keyword_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$simple_DASH_keyword_QMARK_,"cljs/core.cljs",22,1,3396,3396,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a keyword without a namespace",(cljs.core.truth_(cljs.core.simple_keyword_QMARK_)?cljs.core.simple_keyword_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.simple_keyword_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22938 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22938,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22938;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.into_array;},cljs.core.cst$sym$cljs$core_SLASH_into_DASH_array,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$into_DASH_array,"cljs/core.cljs",24,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$aseq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$type,cljs.core.cst$sym$aseq], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$aseq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$type,cljs.core.cst$sym$aseq], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,524,524,cljs.core.cst$sym$array,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$aseq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$type,cljs.core.cst$sym$aseq], null)),"Returns an array with components set to the values in aseq. Optional type\n  argument accepted for compatibility with Clojure.",(cljs.core.truth_(cljs.core.into_array)?cljs.core.into_array.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.into_array;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22939 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22939,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22939;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_ns_refers,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.rest;},cljs.core.cst$sym$cljs$core_SLASH_rest,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$rest,"cljs/core.cljs",16,1,1264,1264,cljs.core.cst$sym$seq,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a possibly empty seq of the items after the first. Calls seq on its\n  argument.",((cljs.core.rest)?cljs.core.rest.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.rest;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22940 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22940,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22940;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.seq;},cljs.core.cst$sym$cljs$core_SLASH_seq,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$seq,"cljs/core.cljs",15,1,1226,1226,cljs.core.cst$sym$seq,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a seq on the collection. If the collection is\n  empty, returns nil.  (seq nil) returns nil. seq also works on\n  Strings.",((cljs.core.seq)?cljs.core.seq.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.seq;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22941 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22941,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22941;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_inc_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_inc_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_inc_DASH_int,"cljs/core.cljs",24,1,2765,2765,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_inc_int)?cljs.core.unchecked_inc_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_inc_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22942 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22942,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22942;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.odd_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_odd_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$odd_QMARK_,"cljs/core.cljs",11,1,4268,4268,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null)),"Returns true if n is odd, throws an exception if n is not an integer",(cljs.core.truth_(cljs.core.odd_QMARK_)?cljs.core.odd_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.odd_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22943 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22943,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22943;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.partition;},cljs.core.cst$sym$cljs$core_SLASH_partition,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$partition,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,4,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,4,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$pad,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$pad,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,5265,5265,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$pad,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of lists of n items each, at offsets step\n  apart. If step is not supplied, defaults to n, i.e. the partitions\n  do not overlap. If a pad collection is supplied, use its elements as\n  necessary to complete last partition up to n items. In case there are\n  not enough padding elements, return a partition with less than n items.",(cljs.core.truth_(cljs.core.partition)?cljs.core.partition.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.partition;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22944 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22944,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22944;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._GT__EQ_;},cljs.core.cst$sym$cljs$core_SLASH__GT__EQ_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_GT__EQ_,"cljs/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2681,2681,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns non-nil if nums are in monotonically non-increasing order,\n  otherwise false.",((cljs.core._GT__EQ_)?cljs.core._GT__EQ_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._GT__EQ_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22945 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22945,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22945;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.fnext;},cljs.core.cst$sym$cljs$core_SLASH_fnext,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$fnext,"cljs/core.cljs",12,1,1772,1772,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Same as (first (next x))",(cljs.core.truth_(cljs.core.fnext)?cljs.core.fnext.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.fnext;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22946 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22946,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22946;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.when_first_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_or;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_or,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_or,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2875,2875,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Bitwise or",(cljs.core.truth_(cljs.core.bit_or)?cljs.core.bit_or.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_or;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22947 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22947,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22947;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.disj;},cljs.core.cst$sym$cljs$core_SLASH_disj,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$disj,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2113,2113,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null)),"disj[oin]. Returns a new set of the same (hashed/sorted) type, that\n  does not contain key(s).",(cljs.core.truth_(cljs.core.disj)?cljs.core.disj.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.disj;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22948 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22948,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22948;
}
})(),false);
})(),sci.impl.namespaces.sci_with_redefs_fn,(function (){
return sci.impl.vars.new_var.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0(),null);
}),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_short;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_short,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_short,"cljs/core.cljs",30,1,2727,2727,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_short)?cljs.core.unchecked_short.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_short;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22949 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22949,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22949;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.ffirst;},cljs.core.cst$sym$cljs$core_SLASH_ffirst,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ffirst,"cljs/core.cljs",13,1,1762,1762,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Same as (first (first x))",(cljs.core.truth_(cljs.core.ffirst)?cljs.core.ffirst.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.ffirst;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22950 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22950,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22950;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.condp_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.munge;},cljs.core.cst$sym$cljs$core_SLASH_munge,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$munge,"cljs/core.cljs",12,1,11513,11513,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null)),null,(cljs.core.truth_(cljs.core.munge)?cljs.core.munge.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.munge;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22951 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22951,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22951;
}
})(),false);
})(),sci.impl.vars.current_file,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_negate_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_negate_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_negate_DASH_int,"cljs/core.cljs",27,1,2785,2785,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_negate_int)?cljs.core.unchecked_negate_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_negate_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22952 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22952,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22952;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.io.print_str;},cljs.core.cst$sym$sci$impl$io_SLASH_print_DASH_str,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$sci$impl$io,cljs.core.cst$sym$print_DASH_str,"resources/public/cljs-out/dev/sci/impl/io.cljc",19,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$objs)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$objs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),4,159,159,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$objs], null)),"pr to a string, returning it",(cljs.core.truth_(sci.impl.io.print_str)?sci.impl.io.print_str.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.io.print_str;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22953 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22953,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22953;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.vreset_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_vreset_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$vreset_BANG_,"cljs/core.cljs",14,1,4591,4591,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$vol,cljs.core.cst$sym$newval], null)),"Sets the value of volatile to newval without regard for the\n   current value. Returns newval.",(cljs.core.truth_(cljs.core.vreset_BANG_)?cljs.core.vreset_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.vreset_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22954 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22954,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22954;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.uuid_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_uuid_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$uuid_QMARK_,"cljs/core.cljs",12,1,11316,11316,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.uuid_QMARK_)?cljs.core.uuid_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.uuid_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22955 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22955,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22955;
}
})(),false);
})(),sci.impl.core_protocols.reset_BANG__STAR_,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.atom;},cljs.core.cst$sym$cljs$core_SLASH_atom,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$atom,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$keys,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$meta,cljs.core.cst$sym$validator], null)], null)], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,4460,4460,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$keys,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$meta,cljs.core.cst$sym$validator], null)], null)], null)),"Creates and returns an Atom with an initial value of x and zero or\n  more options (in any order):\n\n  :meta metadata-map\n\n  :validator validate-fn\n\n  If metadata-map is supplied, it will become the metadata on the\n  atom. validate-fn must be nil or a side-effect-free fn of one\n  argument, which will be passed the intended new state on any state\n  change. If the new state is unacceptable, the validate-fn should\n  return false or throw an Error.  If either of these error conditions\n  occur, then the value of the atom will not change.",(cljs.core.truth_(cljs.core.atom)?cljs.core.atom.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.atom;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22956 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22956,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22956;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.select_keys;},cljs.core.cst$sym$cljs$core_SLASH_select_DASH_keys,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$select_DASH_keys,"cljs/core.cljs",18,1,9133,9133,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$map,cljs.core.cst$sym$keyseq], null)),"Returns a map containing only those entries in map whose key is in keys",(cljs.core.truth_(cljs.core.select_keys)?cljs.core.select_keys.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.select_keys;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22957 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22957,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22957;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.reverse;},cljs.core.cst$sym$cljs$core_SLASH_reverse,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$reverse,"cljs/core.cljs",14,1,3211,3211,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a seq of the items in coll in reverse order. Not lazy.",(cljs.core.truth_(cljs.core.reverse)?cljs.core.reverse.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.reverse;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22958 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22958,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22958;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.namespaces.ex_message;},cljs.core.cst$sym$sci$impl$namespaces_SLASH_ex_DASH_message,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.with_meta(cljs.core.cst$sym$sci$impl$namespaces,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$no_DASH_doc,true], null)),cljs.core.cst$sym$ex_DASH_message,"resources/public/cljs-out/dev/sci/impl/namespaces.cljc",16,1,247,247,cljs.core.List.EMPTY,null,(cljs.core.truth_(sci.impl.namespaces.ex_message)?sci.impl.namespaces.ex_message.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.namespaces.ex_message;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22959 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22959,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22959;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.special_symbol_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_special_DASH_symbol_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$special_DASH_symbol_QMARK_,"cljs/core.cljs",31,1,11396,11396,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x names a special form",((cljs.core.special_symbol_QMARK_)?cljs.core.special_symbol_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.special_symbol_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22960 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22960,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22960;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.merge;},cljs.core.cst$sym$cljs$core_SLASH_merge,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$merge,"cljs/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$maps)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$maps], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,9109,9109,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$maps], null)),"Returns a map that consists of the rest of the maps conj-ed onto\n  the first.  If a key occurs in more than one map, the mapping from\n  the latter (left-to-right) will be the mapping in the result.",(cljs.core.truth_(cljs.core.merge)?cljs.core.merge.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.merge;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22961 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22961,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22961;
}
})(),false);
})(),sci.impl.io.newline,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_multiply;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_multiply,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_multiply,"cljs/core.cljs",33,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,2768,2768,cljs.core.cst$sym$number,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the product of nums. (*) returns 1.",(cljs.core.truth_(cljs.core.unchecked_multiply)?cljs.core.unchecked_multiply.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_multiply;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22962 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22962,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22962;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.double_dot),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chunked_seq_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_chunked_DASH_seq_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chunked_DASH_seq_QMARK_,"cljs/core.cljs",19,1,2185,2185,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x satisfies IChunkedSeq.",(cljs.core.truth_(cljs.core.chunked_seq_QMARK_)?cljs.core.chunked_seq_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chunked_seq_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22963 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22963,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22963;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.inst_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_inst_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$inst_QMARK_,"cljs/core.cljs",12,1,1415,1415,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x satisfies Inst",(cljs.core.truth_(cljs.core.inst_QMARK_)?cljs.core.inst_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.inst_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22964 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22964,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22964;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.random_sample;},cljs.core.cst$sym$cljs$core_SLASH_random_DASH_sample,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$random_DASH_sample,"cljs/core.cljs",20,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prob], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prob,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prob], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prob,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,10664,10664,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prob], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prob,cljs.core.cst$sym$coll], null)),"Returns items from coll with random probability of prob (0.0 -\n  1.0).  Returns a transducer when no collection is provided.",(cljs.core.truth_(cljs.core.random_sample)?cljs.core.random_sample.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.random_sample;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22965 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22965,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22965;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._GT_;},cljs.core.cst$sym$cljs$core_SLASH__GT_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_GT_,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2669,2669,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns non-nil if nums are in monotonically decreasing order,\n  otherwise false.",((cljs.core._GT_)?cljs.core._GT_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._GT_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22966 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22966,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22966;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.count;},cljs.core.cst$sym$cljs$core_SLASH_count,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$count,"cljs/core.cljs",12,1,1828,1828,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns the number of items in the collection. (count nil) returns\n  0.  Also works on strings, arrays, and Maps",(cljs.core.truth_(cljs.core.count)?cljs.core.count.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.count;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22967 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22967,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22967;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.simple_ident_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_simple_DASH_ident_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$simple_DASH_ident_QMARK_,"cljs/core.cljs",20,1,3380,3380,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a symbol or keyword without a namespace",(cljs.core.truth_(cljs.core.simple_ident_QMARK_)?cljs.core.simple_ident_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.simple_ident_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22968 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22968,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22968;
}
})(),false);
})(),sci.impl.namespaces.sci_ns_name,sci.impl.namespaces._STAR_1,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.last;},cljs.core.cst$sym$cljs$core_SLASH_last,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$last,"cljs/core.cljs",11,1,1782,1782,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Return the last item in coll, in linear time",(cljs.core.truth_(cljs.core.last)?cljs.core.last.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.last;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22969 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22969,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22969;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_shift_left;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_shift_DASH_left,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_shift_DASH_left,"cljs/core.cljs",21,1,2911,2911,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$n], null)),"Bitwise shift left",(cljs.core.truth_(cljs.core.bit_shift_left)?cljs.core.bit_shift_left.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_shift_left;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22970 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22970,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22970;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.int$;},cljs.core.cst$sym$cljs$core_SLASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$int,"cljs/core.cljs",10,1,2812,2812,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Coerce to int by stripping decimal places.",(cljs.core.truth_(cljs.core.int$)?cljs.core.int$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.int$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22971 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22971,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22971;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_negate;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_negate,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_negate,"cljs/core.cljs",23,1,2782,2782,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_negate)?cljs.core.unchecked_negate.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_negate;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22972 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22972,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22972;
}
})(),false);
})(),sci.impl.multimethods.multi_fn_impl,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_remainder_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_remainder_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_remainder_DASH_int,"cljs/core.cljs",30,1,2790,2790,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$n], null)),null,(cljs.core.truth_(cljs.core.unchecked_remainder_int)?cljs.core.unchecked_remainder_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_remainder_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22973 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22973,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22973;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.byte$;},cljs.core.cst$sym$cljs$core_SLASH_byte,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$byte,"cljs/core.cljs",19,1,2711,2711,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.byte$)?cljs.core.byte$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.byte$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22974 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22974,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22974;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.conj_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_conj_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$conj_BANG_,"cljs/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$val], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$val], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$val,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$vals], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,3838,3838,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$val], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$val,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$vals], null)),"Adds val to the transient collection, and return tcoll. The 'addition'\n  may happen at different 'places' depending on the concrete type.",(cljs.core.truth_(cljs.core.conj_BANG_)?cljs.core.conj_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.conj_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22975 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22975,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22975;
}
})(),false);
})(),sci.impl.io.println,cljs.core.with_meta(sci.impl.protocols.defprotocol,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sci_SLASH_macro,true,cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.int_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_int_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$int_QMARK_,"cljs/core.cljs",11,1,2283,2283,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x satisfies integer? or is an instance of goog.math.Integer\n   or goog.math.Long.",(cljs.core.truth_(cljs.core.int_QMARK_)?cljs.core.int_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.int_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22976 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22976,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22976;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.long_array;},cljs.core.cst$sym$cljs$core_SLASH_long_DASH_array,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$long_DASH_array,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,3701,3701,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)),"Creates an array of longs. Does not coerce array, provided for compatibility\n  with Clojure.",(cljs.core.truth_(cljs.core.long_array)?cljs.core.long_array.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.long_array;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22977 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22977,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22977;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.find;},cljs.core.cst$sym$cljs$core_SLASH_find,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$find,"cljs/core.cljs",11,1,2363,2363,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k], null)),"Returns the map entry for key, or nil if key not present.",(cljs.core.truth_(cljs.core.find)?cljs.core.find.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.find;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22978 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22978,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22978;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.vals;},cljs.core.cst$sym$cljs$core_SLASH_vals,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$vals,"cljs/core.cljs",11,1,9098,9098,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$map], null)),"Returns a sequence of the map's values, in the same order as (seq map).",(cljs.core.truth_(cljs.core.vals)?cljs.core.vals.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.vals;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22979 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22979,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22979;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.nil_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_nil_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$nil_QMARK_,"cljs/core.cljs",20,1,235,235,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x is nil, false otherwise.",((cljs.core.nil_QMARK_)?cljs.core.nil_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.nil_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22980 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22980,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22980;
}
})(),false);
})(),sci.impl.io.flush,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.hash;},cljs.core.cst$sym$cljs$core_SLASH_hash,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$hash,"cljs/core.cljs",11,1,1000,1000,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o], null)),"Returns the hash code of its argument. Note this is the hash code\n   consistent with =.",(cljs.core.truth_(cljs.core.hash)?cljs.core.hash.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.hash;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22981 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22981,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22981;
}
})(),false);
})(),sci.impl.io.pr,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_subtract;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_subtract,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_subtract,"cljs/core.cljs",33,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2793,2793,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"If no ys are supplied, returns the negation of x, else subtracts\n  the ys from x and returns the result.",(cljs.core.truth_(cljs.core.unchecked_subtract)?cljs.core.unchecked_subtract.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_subtract;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22982 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22982,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22982;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.comment_STAR_),sci.impl.namespaces.macrofy(sci.impl.namespaces.sci_with_redefs),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.float_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_float_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$float_QMARK_,"cljs/core.cljs",13,1,2336,2336,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true for JavaScript numbers, false otherwise.",(cljs.core.truth_(cljs.core.float_QMARK_)?cljs.core.float_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.float_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22983 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22983,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22983;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.second;},cljs.core.cst$sym$cljs$core_SLASH_second,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$second,"cljs/core.cljs",13,1,1757,1757,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Same as (first (next x))",(cljs.core.truth_(cljs.core.second)?cljs.core.second.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.second;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22984 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22984,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22984;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.protocols.extend_protocol,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sci_SLASH_macro,true,cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.io.err,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chunk_first;},cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_first,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chunk_DASH_first,"cljs/core.cljs",18,1,3645,3645,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),null,(cljs.core.truth_(cljs.core.chunk_first)?cljs.core.chunk_first.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chunk_first;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22985 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22985,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22985;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_alias,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_add_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_add_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_add_DASH_int,"cljs/core.cljs",32,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,2738,2738,cljs.core.cst$sym$number,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the sum of nums. (+) returns 0.",(cljs.core.truth_(cljs.core.unchecked_add_int)?cljs.core.unchecked_add_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_add_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22986 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22986,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22986;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.ifn_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_ifn_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ifn_QMARK_,"cljs/core.cljs",11,1,2270,2270,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null)),"Returns true if f returns true for fn? or satisfies IFn.",(cljs.core.truth_(cljs.core.ifn_QMARK_)?cljs.core.ifn_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.ifn_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22987 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22987,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22987;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.ex_info;},cljs.core.cst$sym$cljs$core_SLASH_ex_DASH_info,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ex_DASH_info,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$msg,cljs.core.cst$sym$data], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$msg,cljs.core.cst$sym$data,cljs.core.cst$sym$cause], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$msg,cljs.core.cst$sym$data], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$msg,cljs.core.cst$sym$data,cljs.core.cst$sym$cause], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,11361,11361,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$msg,cljs.core.cst$sym$data], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$msg,cljs.core.cst$sym$data,cljs.core.cst$sym$cause], null)),"Create an instance of ExceptionInfo, an Error type that carries a\n  map of additional data.",(cljs.core.truth_(cljs.core.ex_info)?cljs.core.ex_info.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.ex_info;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22988 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22988,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22988;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.inc;},cljs.core.cst$sym$cljs$core_SLASH_inc,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$inc,"cljs/core.cljs",10,1,1437,1437,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns a number one greater than num.",(cljs.core.truth_(cljs.core.inc)?cljs.core.inc.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.inc;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22989 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22989,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22989;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._SLASH_;},cljs.core.cst$sym$cljs$core_SLASH__SLASH_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_SLASH_,"cljs/core.cljs",new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2638,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"If no denominators are supplied, returns 1/numerator,\n  else returns numerator divided by all of the denominators.",(cljs.core.truth_(cljs.core._SLASH_)?cljs.core._SLASH_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._SLASH_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22990 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22990,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22990;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.volatile_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_volatile_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$volatile_BANG_,"cljs/core.cljs",16,1,4582,4582,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$val], null)),"Creates and returns a Volatile with an initial value of val.",(cljs.core.truth_(cljs.core.volatile_BANG_)?cljs.core.volatile_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.volatile_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22991 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22991,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22991;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.with_meta;},cljs.core.cst$sym$cljs$core_SLASH_with_DASH_meta,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$with_DASH_meta,"cljs/core.cljs",16,1,2082,2082,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o,cljs.core.cst$sym$meta], null)),"Returns an object of the same type and value as obj, with\n  map m as its metadata.",(cljs.core.truth_(cljs.core.with_meta)?cljs.core.with_meta.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.with_meta;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22992 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22992,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22992;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.map_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$map_QMARK_,"cljs/core.cljs",11,1,2167,2167,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x satisfies IMap",(cljs.core.truth_(cljs.core.map_QMARK_)?cljs.core.map_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.map_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22993 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22993,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22993;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.vector_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$vector_QMARK_,"cljs/core.cljs",14,1,2179,2179,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x satisfies IVector",(cljs.core.truth_(cljs.core.vector_QMARK_)?cljs.core.vector_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.vector_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22994 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22994,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22994;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.__GT__GT__STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.quot;},cljs.core.cst$sym$cljs$core_SLASH_quot,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$quot,"cljs/core.cljs",11,1,2851,2851,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$d], null)),"quot[ient] of dividing numerator by denominator.",(cljs.core.truth_(cljs.core.quot)?cljs.core.quot.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.quot;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22995 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22995,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22995;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.any_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_any_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$any_QMARK_,"cljs/core.cljs",11,1,281,281,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if given any argument.",(cljs.core.truth_(cljs.core.any_QMARK_)?cljs.core.any_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.any_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22996 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22996,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22996;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_add;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_add,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_add,"cljs/core.cljs",28,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,2731,2731,cljs.core.cst$sym$number,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the sum of nums. (+) returns 0.",(cljs.core.truth_(cljs.core.unchecked_add)?cljs.core.unchecked_add.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_add;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22997 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22997,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22997;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.floats;},cljs.core.cst$sym$cljs$core_SLASH_floats,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$floats,"cljs/core.cljs",13,1,2837,2837,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.floats)?cljs.core.floats.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.floats;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22998 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22998,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22998;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.drop_while;},cljs.core.cst$sym$cljs$core_SLASH_drop_DASH_while,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$drop_DASH_while,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,4823,4823,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of the items in coll starting from the\n  first item for which (pred item) returns logical false.  Returns a\n  stateful transducer when no collection is provided.",(cljs.core.truth_(cljs.core.drop_while)?cljs.core.drop_while.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.drop_while;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__22999 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22999,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__22999;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bounded_count;},cljs.core.cst$sym$cljs$core_SLASH_bounded_DASH_count,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.9",cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bounded_DASH_count,"cljs/core.cljs",20,1,3767,3767,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),"If coll is counted? returns its count, else will count at most the first n\n   elements of coll using its seq",(cljs.core.truth_(cljs.core.bounded_count)?cljs.core.bounded_count.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bounded_count;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23000 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23000,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23000;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.take_while;},cljs.core.cst$sym$cljs$core_SLASH_take_DASH_while,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$take_DASH_while,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9598,9598,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of successive items from coll while\n  (pred item) returns logical true. pred must be free of side-effects.\n  Returns a transducer when no collection is provided.",(cljs.core.truth_(cljs.core.take_while)?cljs.core.take_while.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.take_while;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23001 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23001,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23001;
}
})(),false);
})(),sci.impl.protocols.extends_QMARK_,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sort;},cljs.core.cst$sym$cljs$core_SLASH_sort,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sort,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$comp,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$comp,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2449,2449,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$comp,cljs.core.cst$sym$coll], null)),"Returns a sorted sequence of the items in coll. Comp can be\n   boolean-valued comparison function, or a -/0/+ valued comparator.\n   Comp defaults to compare.",(cljs.core.truth_(cljs.core.sort)?cljs.core.sort.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sort;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23002 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23002,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23002;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.false_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_false_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$false_QMARK_,"cljs/core.cljs",22,1,2229,2229,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x is the value false, false otherwise.",((cljs.core.false_QMARK_)?cljs.core.false_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.false_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23003 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23003,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23003;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.cat;},cljs.core.cst$sym$cljs$core_SLASH_cat,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.7",cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$cat,"cljs/core.cljs",10,1,10609,10609,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rf], null)),"A transducer which concatenates the contents of each input, which must be a\n  collection, into the reduction.",(cljs.core.truth_(cljs.core.cat)?cljs.core.cat.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.cat;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23004 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23004,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23004;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.protocols.extend_type,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sci_SLASH_macro,true,cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.io.print_level,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.replace;},cljs.core.cst$sym$cljs$core_SLASH_replace,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$replace,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$smap], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$smap,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$smap], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$smap,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9466,9466,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$smap], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$smap,cljs.core.cst$sym$coll], null)),"Given a map of replacement pairs and a vector/collection, returns a\n  vector/seq with any elements = a key in smap replaced with the\n  corresponding val in smap.  Returns a transducer when no collection\n  is provided.",(cljs.core.truth_(cljs.core.replace)?cljs.core.replace.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.replace;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23005 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23005,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23005;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.drop;},cljs.core.cst$sym$cljs$core_SLASH_drop,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$drop,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,4784,4784,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of all but the first n items in coll.\n  Returns a stateful transducer when no collection is provided.",(cljs.core.truth_(cljs.core.drop)?cljs.core.drop.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.drop;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23006 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23006,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23006;
}
})(),false);
})(),sci.impl.vars.push_thread_bindings,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.not;},cljs.core.cst$sym$cljs$core_SLASH_not,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$not,"cljs/core.cljs",10,1,252,252,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x is logical false, false otherwise.",(cljs.core.truth_(cljs.core.not)?cljs.core.not.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.not;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23007 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23007,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23007;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.keep;},cljs.core.cst$sym$cljs$core_SLASH_keep,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$keep,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,4397,4397,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of the non-nil results of (f item). Note,\n  this means false return values will be included.  f must be free of\n  side-effects.  Returns a transducer when no collection is provided.",(cljs.core.truth_(cljs.core.keep)?cljs.core.keep.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.keep;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23008 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23008,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23008;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.cons;},cljs.core.cst$sym$cljs$core_SLASH_cons,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$cons,"cljs/core.cljs",11,1,3295,3295,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$coll], null)),"Returns a new seq where x is the first element and coll is the rest.",(cljs.core.truth_(cljs.core.cons)?cljs.core.cons.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.cons;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23009 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23009,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23009;
}
})(),false);
})(),sci.impl.namespaces._STAR_e,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_shift_right;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_shift_DASH_right,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_shift_DASH_right,"cljs/core.cljs",22,1,2915,2915,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$n], null)),"Bitwise shift right",(cljs.core.truth_(cljs.core.bit_shift_right)?cljs.core.bit_shift_right.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_shift_right;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23010 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23010,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23010;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.associative_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_associative_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$associative_QMARK_,"cljs/core.cljs",19,1,2147,2147,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if coll implements IAssociative",(cljs.core.truth_(cljs.core.associative_QMARK_)?cljs.core.associative_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.associative_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23011 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23011,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23011;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.read.read,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var G__23012 = sci.impl.vars.__GT_SciVar(null,cljs.core.cst$sym$clojure$core_SLASH_unquote,null,false);
G__23012.sci$impl$vars$IVar$unbind$arity$1(null);

return G__23012;
})(),cljs.core.with_meta(sci.impl.namespaces.macroexpand_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.io.print_length,sci.impl.namespaces.macrofy(sci.impl.namespaces.if_not_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chunk_next;},cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_next,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chunk_DASH_next,"cljs/core.cljs",17,1,3651,3651,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),null,(cljs.core.truth_(cljs.core.chunk_next)?cljs.core.chunk_next.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chunk_next;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23013 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23013,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23013;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.vars.var_set;},cljs.core.cst$sym$sci$impl$vars_SLASH_var_DASH_set,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$sci$impl$vars,cljs.core.cst$sym$var_DASH_set,"resources/public/cljs-out/dev/sci/impl/vars.cljc",14,1,369,369,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$val], null)),null,(cljs.core.truth_(sci.impl.vars.var_set)?sci.impl.vars.var_set.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.vars.var_set;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23014 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23014,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23014;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_flip;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_flip,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_flip,"cljs/core.cljs",15,1,2892,2892,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$n], null)),"Flip bit at index n",(cljs.core.truth_(cljs.core.bit_flip)?cljs.core.bit_flip.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_flip;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23015 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23015,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23015;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.aset;},cljs.core.cst$sym$cljs$core_SLASH_aset,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$aset,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx,cljs.core.cst$sym$val], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx,cljs.core.cst$sym$val], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx,cljs.core.cst$sym$idx2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$idxv], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,509,509,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx,cljs.core.cst$sym$val], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx,cljs.core.cst$sym$idx2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$idxv], null)),"Sets the value at the index/indices. Works on JavaScript arrays.\n  Returns val.",(cljs.core.truth_(cljs.core.aset)?cljs.core.aset.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.aset;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23016 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23016,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23016;
}
})(),false);
})(),sci.impl.core_protocols._deref,sci.impl.vars.current_ns,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.some_fn;},cljs.core.cst$sym$cljs$core_SLASH_some_DASH_fn,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$some_DASH_fn,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ps], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,4671,4671,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ps], null)),"Takes a set of predicates and returns a function f that returns the first logical true value\n  returned by one of its composing predicates against any of its arguments, else it returns\n  logical false. Note that f is short-circuiting in that it will stop execution on the first\n  argument that triggers a logical true result against the original predicates.",(cljs.core.truth_(cljs.core.some_fn)?cljs.core.some_fn.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.some_fn;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23017 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23017,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23017;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.vars.var_QMARK_;},cljs.core.cst$sym$sci$impl$vars_SLASH_var_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$sci$impl$vars,cljs.core.cst$sym$var_QMARK_,"resources/public/cljs-out/dev/sci/impl/vars.cljc",11,1,372,372,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(sci.impl.vars.var_QMARK_)?sci.impl.vars.var_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.vars.var_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23018 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23018,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23018;
}
})(),false);
})(),sci.impl.io.print_meta,sci.impl.namespaces.macrofy(sci.impl.namespaces.when_not_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_multiply_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_multiply_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_multiply_DASH_int,"cljs/core.cljs",37,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,2775,2775,cljs.core.cst$sym$number,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the product of nums. (*) returns 1.",(cljs.core.truth_(cljs.core.unchecked_multiply_int)?cljs.core.unchecked_multiply_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_multiply_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23019 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23019,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23019;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.identity;},cljs.core.cst$sym$cljs$core_SLASH_identity,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$identity,"cljs/core.cljs",15,1,2581,2581,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns its argument.",(cljs.core.truth_(cljs.core.identity)?cljs.core.identity.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.identity;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23020 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23020,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23020;
}
})(),false);
})(),sci.impl.core_protocols._reset_BANG_,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.to_array;},cljs.core.cst$sym$cljs$core_SLASH_to_DASH_array,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$to_DASH_array,"cljs/core.cljs",15,1,3658,3658,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns an array containing the contents of coll.",(cljs.core.truth_(cljs.core.to_array)?cljs.core.to_array.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.to_array;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23021 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23021,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23021;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.double_array;},cljs.core.cst$sym$cljs$core_SLASH_double_DASH_array,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$double_DASH_array,"cljs/core.cljs",19,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,3723,3723,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)),"Creates an array of doubles. Does not coerce array, provided for compatibility\n  with Clojure.",(cljs.core.truth_(cljs.core.double_array)?cljs.core.double_array.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.double_array;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23022 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23022,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23022;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sorted_map;},cljs.core.cst$sym$cljs$core_SLASH_sorted_DASH_map,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sorted_DASH_map,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$keyvals)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,8932,8932,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),"keyval => key val\n  Returns a new sorted map with supplied mappings.",(cljs.core.truth_(cljs.core.sorted_map)?cljs.core.sorted_map.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sorted_map;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23023 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23023,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23023;
}
})(),false);
})(),(function (p1__22922_SHARP_){
return sci.impl.types.getMethods(p1__22922_SHARP_);
}),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.concat;},cljs.core.cst$sym$cljs$core_SLASH_concat,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$concat,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$zs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,3788,3788,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$zs], null)),"Returns a lazy seq representing the concatenation of the elements in the supplied colls.",(cljs.core.truth_(cljs.core.concat)?cljs.core.concat.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.concat;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23024 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23024,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23024;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.char$;},cljs.core.cst$sym$cljs$core_SLASH_char,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$char,"cljs/core.cljs",11,1,2713,2713,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Coerce to char",(cljs.core.truth_(cljs.core.char$)?cljs.core.char$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.char$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23025 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23025,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23025;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.ident_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_ident_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ident_QMARK_,"cljs/core.cljs",13,1,3376,3376,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a symbol or keyword",(cljs.core.truth_(cljs.core.ident_QMARK_)?cljs.core.ident_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.ident_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23026 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23026,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23026;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.make_array;},cljs.core.cst$sym$cljs$core_SLASH_make_DASH_array,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$make_DASH_array,"cljs/core.cljs",24,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$type,cljs.core.cst$sym$size], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$type,cljs.core.cst$sym$size], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$type,cljs.core.cst$sym$size,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more_DASH_sizes], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,416,416,cljs.core.cst$sym$array,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$type,cljs.core.cst$sym$size], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$type,cljs.core.cst$sym$size,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more_DASH_sizes], null)),"Construct a JavaScript array of the specified dimensions. Accepts ignored\n  type argument for compatibility with Clojure. Note that there is no efficient\n  way to allocate multi-dimensional arrays in JavaScript; as such, this function\n  will run in polynomial time when called with 3 or more arguments.",(cljs.core.truth_(cljs.core.make_array)?cljs.core.make_array.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.make_array;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23027 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23027,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23027;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chunk_buffer;},cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_buffer,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chunk_DASH_buffer,"cljs/core.cljs",19,1,3526,3526,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$capacity], null)),null,(cljs.core.truth_(cljs.core.chunk_buffer)?cljs.core.chunk_buffer.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chunk_buffer;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23028 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23028,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23028;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.peek;},cljs.core.cst$sym$cljs$core_SLASH_peek,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$peek,"cljs/core.cljs",11,1,2098,2098,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"For a list or queue, same as first, for a vector, same as, but much\n  more efficient than, last. If the collection is empty, returns nil.",(cljs.core.truth_(cljs.core.peek)?cljs.core.peek.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.peek;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23029 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23029,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23029;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.hash_unordered_coll;},cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_unordered_DASH_coll,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$hash_DASH_unordered_DASH_coll,"cljs/core.cljs",34,1,1365,1365,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns the hash code, consistent with =, for an external unordered\n   collection implementing Iterable. For maps, the iterator should\n   return map entries whose hash is computed as\n     (hash-ordered-coll [k v]).\n   See http://clojure.org/data_structures#hash for full algorithms.",(cljs.core.truth_(cljs.core.hash_unordered_coll)?cljs.core.hash_unordered_coll.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.hash_unordered_coll;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23030 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23030,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23030;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.when_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.clj__GT_js;},cljs.core.cst$sym$cljs$core_SLASH_clj_DASH__GT_js,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$clj_DASH__GT_js,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$x,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$keys,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyword_DASH_fn], null),cljs.core.cst$kw$or,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$keyword_DASH_fn,cljs.core.cst$sym$name], null),cljs.core.cst$kw$as,cljs.core.cst$sym$options], null))], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$keys,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyword_DASH_fn], null),cljs.core.cst$kw$or,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$keyword_DASH_fn,cljs.core.cst$sym$name], null),cljs.core.cst$kw$as,cljs.core.cst$sym$options], null)], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,10736,10736,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$keys,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keyword_DASH_fn], null),cljs.core.cst$kw$or,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$sym$keyword_DASH_fn,cljs.core.cst$sym$name], null),cljs.core.cst$kw$as,cljs.core.cst$sym$options], null)], null)),"Recursively transforms ClojureScript values to JavaScript.\n  sets/vectors/lists become Arrays, Keywords and Symbol become Strings,\n  Maps become Objects. Arbitrary keys are encoded to by `key->js`.\n  Options is a key-value pair, where the only valid key is\n  :keyword-fn, which should point to a single-argument function to be\n  called on keyword keys. Default to `name`.",(cljs.core.truth_(cljs.core.clj__GT_js)?cljs.core.clj__GT_js.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.clj__GT_js;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23031 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23031,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23031;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sequence;},cljs.core.cst$sym$cljs$core_SLASH_sequence,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sequence,"cljs/core.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$coll,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,4212,4212,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$coll,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),"Coerces coll to a (possibly empty) sequence, if it is not already\n  one. Will not force a lazy seq. (sequence nil) yields (), When a\n  transducer is supplied, returns a lazy sequence of applications of\n  the transform to the items in coll(s), i.e. to the set of first\n  items of each coll, followed by the set of second\n  items in each coll, until any one of the colls is exhausted.  Any\n  remaining items in other colls are ignored. The transform should accept\n  number-of-colls arguments",(cljs.core.truth_(cljs.core.sequence)?cljs.core.sequence.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sequence;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23032 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23032,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23032;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.group_by;},cljs.core.cst$sym$cljs$core_SLASH_group_DASH_by,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$group_DASH_by,"cljs/core.cljs",15,1,10850,10850,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),"Returns a map of the elements of coll keyed by the result of\n  f on each element. The value at each key will be a vector of the\n  corresponding elements, in the order they appeared in coll.",(cljs.core.truth_(cljs.core.group_by)?cljs.core.group_by.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.group_by;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23033 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23033,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23033;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.re_seq;},cljs.core.cst$sym$cljs$core_SLASH_re_DASH_seq,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$re_DASH_seq,"cljs/core.cljs",13,1,10027,10027,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$re,cljs.core.cst$sym$s], null)),"Returns a lazy sequence of successive matches of re in s.",(cljs.core.truth_(cljs.core.re_seq)?cljs.core.re_seq.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.re_seq;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23034 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23034,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23034;
}
})(),false);
})(),sci.impl.core_protocols._swap_BANG_,sci.impl.namespaces.macrofy(sci.impl.namespaces.when_some_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_subtract_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_subtract_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_subtract_DASH_int,"cljs/core.cljs",37,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2800,2800,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"If no ys are supplied, returns the negation of x, else subtracts\n  the ys from x and returns the result.",(cljs.core.truth_(cljs.core.unchecked_subtract_int)?cljs.core.unchecked_subtract_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_subtract_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23035 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23035,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23035;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._LT__EQ_;},cljs.core.cst$sym$cljs$core_SLASH__LT__EQ_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_LT__EQ_,"cljs/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2657,2657,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns non-nil if nums are in monotonically non-decreasing order,\n  otherwise false.",((cljs.core._LT__EQ_)?cljs.core._LT__EQ_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._LT__EQ_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23036 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23036,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23036;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.prefers;},cljs.core.cst$sym$cljs$core_SLASH_prefers,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$prefers,"cljs/core.cljs",14,1,11258,11258,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$multifn], null)),"Given a multimethod, returns a map of preferred value -> set of other values",(cljs.core.truth_(cljs.core.prefers)?cljs.core.prefers.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.prefers;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23037 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23037,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23037;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.vary_meta;},cljs.core.cst$sym$cljs$core_SLASH_vary_DASH_meta,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$vary_DASH_meta,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(6),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(6),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d], null),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null,null,null)], null),1,3989,3989,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d], null),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$obj,cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),"Returns an object of the same type and value as obj, with\n  (apply f (meta obj) args) as its metadata.",(cljs.core.truth_(cljs.core.vary_meta)?cljs.core.vary_meta.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.vary_meta;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23038 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23038,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23038;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._EQ_;},cljs.core.cst$sym$cljs$core_SLASH__EQ_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_EQ_,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,1286,1286,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Equality. Returns true if x equals y, false if not. Compares\n  numbers and collections in a type-independent manner.  Clojure's immutable data\n  structures define -equiv (and thus =) as a value, not an identity,\n  comparison.",((cljs.core._EQ_)?cljs.core._EQ_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._EQ_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23039 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23039,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23039;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_intern,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.keep_indexed;},cljs.core.cst$sym$cljs$core_SLASH_keep_DASH_indexed,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$keep_DASH_indexed,"cljs/core.cljs",19,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,4596,4596,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of the non-nil results of (f index item). Note,\n  this means false return values will be included.  f must be free of\n  side-effects.  Returns a stateful transducer when no collection is\n  provided.",(cljs.core.truth_(cljs.core.keep_indexed)?cljs.core.keep_indexed.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.keep_indexed;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23040 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23040,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23040;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.js_obj;},cljs.core.cst$sym$cljs$core_SLASH_js_DASH_obj,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$js_DASH_obj,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2190,2190,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),"Create JavaSript object from an even number arguments representing\n  interleaved keys and values.",(cljs.core.truth_(cljs.core.js_obj)?cljs.core.js_obj.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.js_obj;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23041 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23041,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23041;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.every_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_every_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$every_QMARK_,"cljs/core.cljs",13,1,4234,4234,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns true if (pred x) is logical true for every x in coll, else\n  false.",(cljs.core.truth_(cljs.core.every_QMARK_)?cljs.core.every_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.every_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23042 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23042,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23042;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.comp;},cljs.core.cst$sym$cljs$core_SLASH_comp,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$comp,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g,cljs.core.cst$sym$h], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g,cljs.core.cst$sym$h], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f1,cljs.core.cst$sym$f2,cljs.core.cst$sym$f3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$fs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null,null)], null),1,4286,4286,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g,cljs.core.cst$sym$h], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f1,cljs.core.cst$sym$f2,cljs.core.cst$sym$f3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$fs], null)),"Takes a set of functions and returns a fn that is the composition\n  of those fns.  The returned fn takes a variable number of args,\n  applies the rightmost of fns to the args, the next\n  fn (right-to-left) to the result, etc.",(cljs.core.truth_(cljs.core.comp)?cljs.core.comp.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.comp;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23043 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23043,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23043;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_set;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_set,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_set,"cljs/core.cljs",14,1,2901,2901,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$n], null)),"Set bit at index n",(cljs.core.truth_(cljs.core.bit_set)?cljs.core.bit_set.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_set;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23044 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23044,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23044;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.dissoc;},cljs.core.cst$sym$cljs$core_SLASH_dissoc,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$dissoc,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2010,2010,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null)),"dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\n  that does not contain a mapping for key(s).",(cljs.core.truth_(cljs.core.dissoc)?cljs.core.dissoc.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.dissoc;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23045 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23045,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23045;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.min;},cljs.core.cst$sym$cljs$core_SLASH_min,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$min,"cljs/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2704,2704,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the least of the nums.",(cljs.core.truth_(cljs.core.min)?cljs.core.min.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.min;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23046 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23046,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23046;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.char_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_char_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$char_QMARK_,"cljs/core.cljs",12,1,276,276,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x is a JavaScript string of length one.",(cljs.core.truth_(cljs.core.char_QMARK_)?cljs.core.char_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.char_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23047 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23047,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23047;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.with_open_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.interleave;},cljs.core.cst$sym$cljs$core_SLASH_interleave,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$interleave,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$c1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$c1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,5102,5102,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$c1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),"Returns a lazy seq of the first item in each coll, then the second etc.",(cljs.core.truth_(cljs.core.interleave)?cljs.core.interleave.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.interleave;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23048 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23048,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23048;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.with_local_vars_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.namespaces.sci_bound_QMARK_;},cljs.core.cst$sym$sci$impl$namespaces_SLASH_sci_DASH_bound_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.with_meta(cljs.core.cst$sym$sci$impl$namespaces,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$no_DASH_doc,true], null)),cljs.core.cst$sym$sci_DASH_bound_QMARK_,"resources/public/cljs-out/dev/sci/impl/namespaces.cljc",17,1,493,493,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sci_DASH_var], null)),null,(cljs.core.truth_(sci.impl.namespaces.sci_bound_QMARK_)?sci.impl.namespaces.sci_bound_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.namespaces.sci_bound_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23049 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23049,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23049;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_all_ns,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.split_at;},cljs.core.cst$sym$cljs$core_SLASH_split_DASH_at,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$split_DASH_at,"cljs/core.cljs",15,1,4915,4915,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),"Returns a vector of [(take n coll) (drop n coll)]",(cljs.core.truth_(cljs.core.split_at)?cljs.core.split_at.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.split_at;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23050 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23050,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23050;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.neg_int_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_neg_DASH_int_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$neg_DASH_int_QMARK_,"cljs/core.cljs",24,1,2307,2307,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x satisfies int? and is negative.",((cljs.core.neg_int_QMARK_)?cljs.core.neg_int_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.neg_int_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23051 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23051,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23051;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.mapv;},cljs.core.cst$sym$cljs$core_SLASH_mapv,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$mapv,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(4),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(4),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,5240,5240,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),"Returns a vector consisting of the result of applying f to the\n  set of first items of each coll, followed by applying f to the set\n  of second items in each coll, until any one of the colls is\n  exhausted.  Any remaining items in other colls are ignored. Function\n  f should accept number-of-colls arguments.",(cljs.core.truth_(cljs.core.mapv)?cljs.core.mapv.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.mapv;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23052 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23052,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23052;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.defonce_STAR_),sci.impl.io.prn,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.drop_last;},cljs.core.cst$sym$cljs$core_SLASH_drop_DASH_last,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$drop_DASH_last,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$s], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$s], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,4809,4809,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$s], null)),"Return a lazy sequence of all but the last n (default 1) items in coll",(cljs.core.truth_(cljs.core.drop_last)?cljs.core.drop_last.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.drop_last;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23053 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23053,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23053;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.fnil;},cljs.core.cst$sym$cljs$core_SLASH_fnil,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$fnil,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,4,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,4,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,4344,4344,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z], null)),"Takes a function f, and returns a function that calls f, replacing\n  a nil first argument to f with the supplied value x. Higher arity\n  versions can replace arguments in the second and third\n  positions (y, z). Note that the function f can take any number of\n  arguments, not just the one(s) being nil-patched.",(cljs.core.truth_(cljs.core.fnil)?cljs.core.fnil.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.fnil;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23054 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23054,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23054;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.cond__GT__GT__STAR_),sci.impl.vars.pop_thread_bindings,sci.impl.protocols.satisfies_QMARK_,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.next;},cljs.core.cst$sym$cljs$core_SLASH_next,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$next,"cljs/core.cljs",16,1,1277,1277,cljs.core.cst$sym$seq,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a seq of the items after the first. Calls seq on its\n  argument.  If there are no more items, returns nil",((cljs.core.next)?cljs.core.next.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.next;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23055 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23055,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23055;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._PLUS_;},cljs.core.cst$sym$cljs$core_SLASH__PLUS_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_PLUS_,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,2614,2614,cljs.core.cst$sym$number,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the sum of nums. (+) returns 0.",(cljs.core.truth_(cljs.core._PLUS_)?cljs.core._PLUS_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._PLUS_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23056 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23056,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23056;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.read.load_string,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.name;},cljs.core.cst$sym$cljs$core_SLASH_name,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$name,"cljs/core.cljs",11,1,9517,9517,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns the name String of a string, symbol or keyword.",(cljs.core.truth_(cljs.core.name)?cljs.core.name.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.name;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23057 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23057,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23057;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_double;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_double,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_double,"cljs/core.cljs",31,1,2729,2729,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_double)?cljs.core.unchecked_double.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_double;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23058 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23058,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23058;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.when_let_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.symbol_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_symbol_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$symbol_QMARK_,"cljs/core.cljs",23,1,1049,1049,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a Symbol",((cljs.core.symbol_QMARK_)?cljs.core.symbol_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.symbol_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23059 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23059,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23059;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chunk_cons;},cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_cons,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chunk_DASH_cons,"cljs/core.cljs",17,1,3634,3634,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$chunk,cljs.core.cst$sym$rest], null)),null,(cljs.core.truth_(cljs.core.chunk_cons)?cljs.core.chunk_cons.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chunk_cons;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23060 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23060,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23060;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_ns_imports,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.methods$;},cljs.core.cst$sym$cljs$core_SLASH_methods,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$methods,"cljs/core.cljs",14,1,11249,11249,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$multifn], null)),"Given a multimethod, returns a map of dispatch values -> dispatch fns",(cljs.core.truth_(cljs.core.methods$)?cljs.core.methods$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.methods$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23061 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23061,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23061;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.reset_meta_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_reset_DASH_meta_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$reset_DASH_meta_BANG_,"cljs/core.cljs",18,1,10516,10516,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$iref,cljs.core.cst$sym$m], null)),"Atomically resets the metadata for an atom",(cljs.core.truth_(cljs.core.reset_meta_BANG_)?cljs.core.reset_meta_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.reset_meta_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23062 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23062,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23062;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.js__GT_clj;},cljs.core.cst$sym$cljs$core_SLASH_js_DASH__GT_clj,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$js_DASH__GT_clj,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$opts], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,10767,10767,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$opts], null)),"Recursively transforms JavaScript arrays into ClojureScript\n  vectors, and JavaScript objects into ClojureScript maps.  With\n  option ':keywordize-keys true' will convert object fields from\n  strings to keywords.",(cljs.core.truth_(cljs.core.js__GT_clj)?cljs.core.js__GT_clj.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.js__GT_clj;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23063 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23063,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23063;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.dotimes_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.rand_int;},cljs.core.cst$sym$cljs$core_SLASH_rand_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$rand_DASH_int,"cljs/core.cljs",15,1,10839,10839,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null)),"Returns a random integer between 0 (inclusive) and n (exclusive).",(cljs.core.truth_(cljs.core.rand_int)?cljs.core.rand_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.rand_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23064 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23064,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23064;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.complement;},cljs.core.cst$sym$cljs$core_SLASH_complement,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$complement,"cljs/core.cljs",17,1,4272,4272,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null)),"Takes a fn f and returns a fn that takes the same arguments as f,\n  has the same effects, if any, and returns the opposite truth value.",(cljs.core.truth_(cljs.core.complement)?cljs.core.complement.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.complement;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23065 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23065,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23065;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.list_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_list_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$list_QMARK_,"cljs/core.cljs",12,1,3122,3122,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x implements IList",(cljs.core.truth_(cljs.core.list_QMARK_)?cljs.core.list_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.list_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23066 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23066,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23066;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.aget;},cljs.core.cst$sym$cljs$core_SLASH_aget,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$aget,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$idxs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,502,502,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array,cljs.core.cst$sym$idx,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$idxs], null)),"Returns the value at the index/indices. Works on JavaScript arrays.",(cljs.core.truth_(cljs.core.aget)?cljs.core.aget.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.aget;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23067 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23067,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23067;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.zipmap;},cljs.core.cst$sym$cljs$core_SLASH_zipmap,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$zipmap,"cljs/core.cljs",13,1,9526,9526,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$keys,cljs.core.cst$sym$vals], null)),"Returns a map with the keys mapped to the corresponding vals.",(cljs.core.truth_(cljs.core.zipmap)?cljs.core.zipmap.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.zipmap;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23068 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23068,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23068;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_find_var,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.run_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_run_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$run_BANG_,"cljs/core.cljs",11,1,10711,10711,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$proc,cljs.core.cst$sym$coll], null)),"Runs the supplied procedure (via reduce), for purposes of side\n  effects, on successive items in the collection. Returns nil",(cljs.core.truth_(cljs.core.run_BANG_)?cljs.core.run_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.run_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23069 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23069,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23069;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._EQ__EQ_;},cljs.core.cst$sym$cljs$core_SLASH__EQ__EQ_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_EQ__EQ_,"cljs/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2934,2934,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns non-nil if nums all have the equivalent\n  value, otherwise false. Behavior on non nums is\n  undefined.",((cljs.core._EQ__EQ_)?cljs.core._EQ__EQ_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._EQ__EQ_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23070 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23070,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23070;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chars;},cljs.core.cst$sym$cljs$core_SLASH_chars,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chars,"cljs/core.cljs",12,1,2834,2834,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.chars)?cljs.core.chars.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chars;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23071 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23071,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23071;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.iterate;},cljs.core.cst$sym$cljs$core_SLASH_iterate,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.0",cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$iterate,"cljs/core.cljs",14,1,5097,5097,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x], null)),"Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects",(cljs.core.truth_(cljs.core.iterate)?cljs.core.iterate.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.iterate;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23072 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23072,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23072;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.boolean$;},cljs.core.cst$sym$cljs$core_SLASH_boolean,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$boolean,"cljs/core.cljs",14,1,2262,2262,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Coerce to boolean",(cljs.core.truth_(cljs.core.boolean$)?cljs.core.boolean$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.boolean$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23073 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23073,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23073;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.hash_map;},cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_map,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$hash_DASH_map,"cljs/core.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$keyvals)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,8901,8901,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),"keyval => key val\n  Returns a new hash map with supplied mappings.",(cljs.core.truth_(cljs.core.hash_map)?cljs.core.hash_map.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.hash_map;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23074 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23074,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23074;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_inc;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_inc,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_inc,"cljs/core.cljs",20,1,2762,2762,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_inc)?cljs.core.unchecked_inc.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_inc;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23075 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23075,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23075;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.max_key;},cljs.core.cst$sym$cljs$core_SLASH_max_DASH_key,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$max_DASH_key,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,9538,9538,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the x for which (k x), a number, is greatest.\n\n  If there are multiple such xs, the last one is returned.",(cljs.core.truth_(cljs.core.max_key)?cljs.core.max_key.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.max_key;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23076 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23076,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23076;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.qualified_ident_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_qualified_DASH_ident_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$qualified_DASH_ident_QMARK_,"cljs/core.cljs",23,1,3384,3384,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a symbol or keyword with a namespace",(cljs.core.truth_(cljs.core.qualified_ident_QMARK_)?cljs.core.qualified_ident_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.qualified_ident_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23077 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23077,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23077;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.coll_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_coll_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$coll_QMARK_,"cljs/core.cljs",12,1,2133,2133,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x satisfies ICollection",(cljs.core.truth_(cljs.core.coll_QMARK_)?cljs.core.coll_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.coll_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23078 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23078,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23078;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.reversible_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_reversible_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$reversible_QMARK_,"cljs/core.cljs",18,1,3200,3200,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns true if coll satisfies? IReversible.",(cljs.core.truth_(cljs.core.reversible_QMARK_)?cljs.core.reversible_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.reversible_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23079 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23079,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23079;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_ns_unmap,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.apply;},cljs.core.cst$sym$cljs$core_SLASH_apply,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$apply,"cljs/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(5),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(5),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z,cljs.core.cst$sym$args], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null,null)], null),1,3939,3939,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),"Applies fn f to the argument list formed by prepending intervening arguments to args.",(cljs.core.truth_(cljs.core.apply)?cljs.core.apply.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.apply;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23080 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23080,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23080;
}
})(),false);
})(),sci.impl.io.in$,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.subvec;},cljs.core.cst$sym$cljs$core_SLASH_subvec,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$subvec,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$start], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$start,cljs.core.cst$sym$end], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$start], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$start,cljs.core.cst$sym$end], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,5989,5989,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$start], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$start,cljs.core.cst$sym$end], null)),"Returns a persistent vector of the items in vector from\n  start (inclusive) to end (exclusive).  If end is not supplied,\n  defaults to (count vector). This operation is O(1) and very fast, as\n  the resulting vector shares structure with the original and no\n  trimming is done.",(cljs.core.truth_(cljs.core.subvec)?cljs.core.subvec.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.subvec;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23081 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23081,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23081;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.hierarchies.isa_QMARK__STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.not_every_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_not_DASH_every_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$not_DASH_every_QMARK_,"cljs/core.cljs",17,1,4243,4243,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns false if (pred x) is logical true for every x in\n  coll, else true.",(cljs.core.truth_(cljs.core.not_every_QMARK_)?cljs.core.not_every_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.not_every_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23082 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23082,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23082;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.namespaces.ex_cause;},cljs.core.cst$sym$sci$impl$namespaces_SLASH_ex_DASH_cause,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.with_meta(cljs.core.cst$sym$sci$impl$namespaces,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$no_DASH_doc,true], null)),cljs.core.cst$sym$ex_DASH_cause,"resources/public/cljs-out/dev/sci/impl/namespaces.cljc",14,1,255,255,cljs.core.List.EMPTY,null,(cljs.core.truth_(sci.impl.namespaces.ex_cause)?sci.impl.namespaces.ex_cause.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.namespaces.ex_cause;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23083 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23083,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23083;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.keyword_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$keyword_QMARK_,"cljs/core.cljs",15,1,3346,3346,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a Keyword",(cljs.core.truth_(cljs.core.keyword_QMARK_)?cljs.core.keyword_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.keyword_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23084 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23084,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23084;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.ex_data;},cljs.core.cst$sym$cljs$core_SLASH_ex_DASH_data,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ex_DASH_data,"cljs/core.cljs",14,1,11368,11368,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ex], null)),"Returns exception data (a map) if ex is an ExceptionInfo.\n  Otherwise returns nil.",(cljs.core.truth_(cljs.core.ex_data)?cljs.core.ex_data.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.ex_data;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23085 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23085,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23085;
}
})(),false);
})(),sci.impl.io.print_namespace_maps,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.compare;},cljs.core.cst$sym$cljs$core_SLASH_compare,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$compare,"cljs/core.cljs",22,1,2391,2391,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)),"Comparator. Returns a negative number, zero, or a positive number\n  when x is logically 'less than', 'equal to', or 'greater than'\n  y. Uses IComparable if available and google.array.defaultCompare for objects\n of the same type and special-cases nil to be less than any other object.",(cljs.core.truth_(cljs.core.compare)?cljs.core.compare.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.compare;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23086 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23086,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23086;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.hierarchies.underive_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.transduce;},cljs.core.cst$sym$cljs$core_SLASH_transduce,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$transduce,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,4,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,4,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$f,cljs.core.cst$sym$init,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$f,cljs.core.cst$sym$init,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2596,2596,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xform,cljs.core.cst$sym$f,cljs.core.cst$sym$init,cljs.core.cst$sym$coll], null)),"reduce with a transformation of f (xf). If init is not\n  supplied, (f) will be called to produce it. f should be a reducing\n  step function that accepts both 1 and 2 arguments, if it accepts\n  only 2 you can add the arity-1 with 'completing'. Returns the result\n  of applying (the transformed) xf to init and the first item in coll,\n  then applying xf to that result and the 2nd item, etc. If coll\n  contains no items, returns init and f is not called. Note that\n  certain transforms may inject or skip items.",(cljs.core.truth_(cljs.core.transduce)?cljs.core.transduce.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.transduce;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23087 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23087,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23087;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.range;},cljs.core.cst$sym$cljs$core_SLASH_range,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$range,"cljs/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$end], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$start,cljs.core.cst$sym$end], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$start,cljs.core.cst$sym$end,cljs.core.cst$sym$step], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$end], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$start,cljs.core.cst$sym$end], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$start,cljs.core.cst$sym$end,cljs.core.cst$sym$step], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,9801,9801,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$end], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$start,cljs.core.cst$sym$end], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$start,cljs.core.cst$sym$end,cljs.core.cst$sym$step], null)),"Returns a lazy seq of nums from start (inclusive) to end\n   (exclusive), by step, where start defaults to 0, step to 1,\n   and end to infinity.",(cljs.core.truth_(cljs.core.range)?cljs.core.range.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.range;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23088 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23088,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23088;
}
})(),false);
})(),sci.impl.core_protocols.deref_protocol,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sorted_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_sorted_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sorted_QMARK_,"cljs/core.cljs",14,1,2159,2159,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if coll satisfies ISorted",(cljs.core.truth_(cljs.core.sorted_QMARK_)?cljs.core.sorted_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sorted_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23089 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23089,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23089;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.frequencies;},cljs.core.cst$sym$cljs$core_SLASH_frequencies,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$frequencies,"cljs/core.cljs",18,1,9892,9892,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a map from distinct items in coll to the number of times\n  they appear.",(cljs.core.truth_(cljs.core.frequencies)?cljs.core.frequencies.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.frequencies;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23090 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23090,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23090;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.cycle;},cljs.core.cst$sym$cljs$core_SLASH_cycle,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$cycle,"cljs/core.cljs",12,1,4909,4909,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a lazy (infinite!) sequence of repetitions of the items in coll.",(cljs.core.truth_(cljs.core.cycle)?cljs.core.cycle.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.cycle;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23091 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23091,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23091;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.max;},cljs.core.cst$sym$cljs$core_SLASH_max,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$max,"cljs/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2697,2697,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the greatest of the nums.",(cljs.core.truth_(cljs.core.max)?cljs.core.max.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.max;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23092 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23092,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23092;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.simple_symbol_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_simple_DASH_symbol_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$simple_DASH_symbol_QMARK_,"cljs/core.cljs",21,1,3388,3388,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a symbol without a namespace",(cljs.core.truth_(cljs.core.simple_symbol_QMARK_)?cljs.core.simple_symbol_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.simple_symbol_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23093 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23093,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23093;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.reify.reify,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sci_SLASH_macro,true,cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.empty_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_empty_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$empty_QMARK_,"cljs/core.cljs",13,1,2127,2127,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns true if coll has no items - same as (not (seq coll)).\n  Please use the idiom (seq x) rather than (not (empty? x))",(cljs.core.truth_(cljs.core.empty_QMARK_)?cljs.core.empty_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.empty_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23094 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23094,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23094;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.into;},cljs.core.cst$sym$cljs$core_SLASH_into,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$into,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to,cljs.core.cst$sym$from], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to,cljs.core.cst$sym$xform,cljs.core.cst$sym$from], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to,cljs.core.cst$sym$from], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to,cljs.core.cst$sym$xform,cljs.core.cst$sym$from], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,5224,5224,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to,cljs.core.cst$sym$from], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$to,cljs.core.cst$sym$xform,cljs.core.cst$sym$from], null)),"Returns a new coll consisting of to-coll with all of the items of\n  from-coll conjoined. A transducer may be supplied.",(cljs.core.truth_(cljs.core.into)?cljs.core.into.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.into;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23095 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23095,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23095;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.integer_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_integer_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$integer_QMARK_,"cljs/core.cljs",15,1,2275,2275,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null)),"Returns true if n is a JavaScript number with no decimal part.",(cljs.core.truth_(cljs.core.integer_QMARK_)?cljs.core.integer_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.integer_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23096 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23096,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23096;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._STAR_;},cljs.core.cst$sym$cljs$core_SLASH__STAR_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_STAR_,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,2629,2629,cljs.core.cst$sym$number,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the product of nums. (*) returns 1.",(cljs.core.truth_(cljs.core._STAR_)?cljs.core._STAR_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._STAR_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23097 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23097,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23097;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.some__GT__GT__STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unsigned_bit_shift_right;},cljs.core.cst$sym$cljs$core_SLASH_unsigned_DASH_bit_DASH_shift_DASH_right,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unsigned_DASH_bit_DASH_shift_DASH_right,"cljs/core.cljs",31,1,2923,2923,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$n], null)),"Bitwise shift right with zero fill",(cljs.core.truth_(cljs.core.unsigned_bit_shift_right)?cljs.core.unsigned_bit_shift_right.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unsigned_bit_shift_right;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23098 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23098,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23098;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.io.pr_str;},cljs.core.cst$sym$sci$impl$io_SLASH_pr_DASH_str,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$sci$impl$io,cljs.core.cst$sym$pr_DASH_str,"resources/public/cljs-out/dev/sci/impl/io.cljc",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$objs)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$objs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),4,92,92,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$objs], null)),"pr to a string, returning it",(cljs.core.truth_(sci.impl.io.pr_str)?sci.impl.io.pr_str.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.io.pr_str;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23099 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23099,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23099;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.some__GT__STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chunk;},cljs.core.cst$sym$cljs$core_SLASH_chunk,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chunk,"cljs/core.cljs",12,1,3642,3642,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$b], null)),null,(cljs.core.truth_(cljs.core.chunk)?cljs.core.chunk.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chunk;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23100 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23100,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23100;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.cond_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.distinct;},cljs.core.cst$sym$cljs$core_SLASH_distinct,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$distinct,"cljs/core.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,1,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,1,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9483,9483,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of the elements of coll with duplicates removed.\n  Returns a stateful transducer when no collection is provided.",(cljs.core.truth_(cljs.core.distinct)?cljs.core.distinct.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.distinct;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23101 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23101,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23101;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.ensure_reduced;},cljs.core.cst$sym$cljs$core_SLASH_ensure_DASH_reduced,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ensure_DASH_reduced,"cljs/core.cljs",21,1,1457,1457,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"If x is already reduced?, returns it, else returns (reduced x)",(cljs.core.truth_(cljs.core.ensure_reduced)?cljs.core.ensure_reduced.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.ensure_reduced;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23102 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23102,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23102;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.object_array;},cljs.core.cst$sym$cljs$core_SLASH_object_DASH_array,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$object_DASH_array,"cljs/core.cljs",19,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,3745,3745,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)),"Creates an array of objects. Does not coerce array, provided for compatibility\n  with Clojure.",(cljs.core.truth_(cljs.core.object_array)?cljs.core.object_array.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.object_array;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23103 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23103,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23103;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.juxt;},cljs.core.cst$sym$cljs$core_SLASH_juxt,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$juxt,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g,cljs.core.cst$sym$h], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g,cljs.core.cst$sym$h], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g,cljs.core.cst$sym$h,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$fs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,9917,9917,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g,cljs.core.cst$sym$h], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$g,cljs.core.cst$sym$h,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$fs], null)),"Takes a set of functions and returns a fn that is the juxtaposition\n  of those fns.  The returned fn takes a variable number of args, and\n  returns a vector containing the result of applying each fn to the\n  args (left-to-right).\n  ((juxt a b c) x) => [(a x) (b x) (c x)]",(cljs.core.truth_(cljs.core.juxt)?cljs.core.juxt.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.juxt;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23104 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23104,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23104;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.some;},cljs.core.cst$sym$cljs$core_SLASH_some,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$some,"cljs/core.cljs",11,1,4248,4248,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns the first logical true value of (pred x) for any x in coll,\n  else nil.  One common idiom is to use a set as pred, for example\n  this will return :fred if :fred is in the sequence, otherwise nil:\n  (some #{:fred} coll)",(cljs.core.truth_(cljs.core.some)?cljs.core.some.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.some;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23105 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23105,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23105;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.interpose;},cljs.core.cst$sym$cljs$core_SLASH_interpose,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$interpose,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sep], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sep,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sep], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sep,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,5118,5118,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sep], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sep,cljs.core.cst$sym$coll], null)),"Returns a lazy seq of the elements of coll separated by sep.\n  Returns a stateful transducer when no collection is provided.",(cljs.core.truth_(cljs.core.interpose)?cljs.core.interpose.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.interpose;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23106 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23106,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23106;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_the_ns,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.protocols.instance_impl,cljs.core.with_meta(sci.impl.hierarchies.descendants_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.get_in;},cljs.core.cst$sym$cljs$core_SLASH_get_DASH_in,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$static,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.2",cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$get_DASH_in,"cljs/core.cljs",13,true,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$ks], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$ks,cljs.core.cst$sym$not_DASH_found], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$ks], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$ks,cljs.core.cst$sym$not_DASH_found], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,5287,5287,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$ks], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$ks,cljs.core.cst$sym$not_DASH_found], null)),"Returns the value in a nested associative structure,\n  where ks is a sequence of keys. Returns nil if the key is not present,\n  or the not-found value if supplied.",(cljs.core.truth_(cljs.core.get_in)?cljs.core.get_in.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.get_in;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23107 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23107,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23107;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.meta;},cljs.core.cst$sym$cljs$core_SLASH_meta,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$meta,"cljs/core.cljs",11,1,2091,2091,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o], null)),"Returns the metadata of obj, returns nil if there is no metadata.",(cljs.core.truth_(cljs.core.meta)?cljs.core.meta.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.meta;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23108 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23108,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23108;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.reify.reify_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),cljs.core.with_meta(sci.impl.records.defrecord,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sci_SLASH_macro,true,cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.val;},cljs.core.cst$sym$cljs$core_SLASH_val,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$val,"cljs/core.cljs",10,1,9104,9104,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$map_DASH_entry], null)),"Returns the value in the map entry.",(cljs.core.truth_(cljs.core.val)?cljs.core.val.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.val;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23109 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23109,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23109;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.read.read_string,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.assoc_in;},cljs.core.cst$sym$cljs$core_SLASH_assoc_DASH_in,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$assoc_DASH_in,"cljs/core.cljs",15,1,5306,5306,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ks], null),cljs.core.cst$sym$v], null)),"Associates a value in a nested associative structure, where ks is a\n  sequence of keys and v is the new value and returns a new nested structure.\n  If any levels do not exist, hash-maps will be created.",(cljs.core.truth_(cljs.core.assoc_in)?cljs.core.assoc_in.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.assoc_in;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23110 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23110,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23110;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.zero_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_zero_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$zero_QMARK_,"cljs/core.cljs",21,1,2951,2951,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if num is zero, else false",((cljs.core.zero_QMARK_)?cljs.core.zero_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.zero_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23111 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23111,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23111;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.transient$;},cljs.core.cst$sym$cljs$core_SLASH_transient,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$transient,"cljs/core.cljs",16,1,3826,3826,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a new, transient version of the collection, in constant time.",(cljs.core.truth_(cljs.core.transient$)?cljs.core.transient$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.transient$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23112 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23112,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23112;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.letfn_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.realized_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_realized_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$realized_QMARK_,"cljs/core.cljs",25,1,10597,10597,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if a value has been produced for a delay or lazy sequence.",((cljs.core.realized_QMARK_)?cljs.core.realized_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.realized_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23113 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23113,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23113;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.list_STAR_;},cljs.core.cst$sym$cljs$core_SLASH_list_STAR_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$list_STAR_,"cljs/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(4),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(4),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$args], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null,null)], null),1,3813,3813,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$args], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$a,cljs.core.cst$sym$b,cljs.core.cst$sym$c,cljs.core.cst$sym$d,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Creates a new list containing the items prepended to the rest, the\n  last of which will be treated as a sequence.",(cljs.core.truth_(cljs.core.list_STAR_)?cljs.core.list_STAR_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.list_STAR_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23114 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23114,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23114;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_ns_interns,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.memoize;},cljs.core.cst$sym$cljs$core_SLASH_memoize,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$memoize,"cljs/core.cljs",14,1,10802,10802,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null)),"Returns a memoized version of a referentially transparent function. The\n  memoized version of the function keeps a cache of the mapping from arguments\n  to results and, when calls with the same arguments are repeated often, has\n  higher performance at the expense of higher memory use.",(cljs.core.truth_(cljs.core.memoize)?cljs.core.memoize.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.memoize;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23115 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23115,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23115;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.subseq;},cljs.core.cst$sym$cljs$core_SLASH_subseq,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$subseq,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,5,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,5,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$test,cljs.core.cst$sym$key], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$start_DASH_test,cljs.core.cst$sym$start_DASH_key,cljs.core.cst$sym$end_DASH_test,cljs.core.cst$sym$end_DASH_key], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$test,cljs.core.cst$sym$key], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$start_DASH_test,cljs.core.cst$sym$start_DASH_key,cljs.core.cst$sym$end_DASH_test,cljs.core.cst$sym$end_DASH_key], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9623,9623,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$test,cljs.core.cst$sym$key], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$start_DASH_test,cljs.core.cst$sym$start_DASH_key,cljs.core.cst$sym$end_DASH_test,cljs.core.cst$sym$end_DASH_key], null)),"sc must be a sorted collection, test(s) one of <, <=, > or\n  >=. Returns a seq of those entries with keys ek for\n  which (test (.. sc comparator (compare ek key)) 0) is true",(cljs.core.truth_(cljs.core.subseq)?cljs.core.subseq.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.subseq;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23116 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23116,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23116;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.completing;},cljs.core.cst$sym$cljs$core_SLASH_completing,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$completing,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$cf], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$cf], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2585,2585,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$cf], null)),"Takes a reducing function f of 2 args and returns a fn suitable for\n  transduce by adding an arity-1 signature that calls cf (default -\n  identity) on the result argument.",(cljs.core.truth_(cljs.core.completing)?cljs.core.completing.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.completing;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23117 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23117,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23117;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_divide_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_divide_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_divide_DASH_int,"cljs/core.cljs",35,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2755,2755,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"If no denominators are supplied, returns 1/numerator,\n  else returns numerator divided by all of the denominators.",(cljs.core.truth_(cljs.core.unchecked_divide_int)?cljs.core.unchecked_divide_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_divide_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23118 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23118,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23118;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.shuffle;},cljs.core.cst$sym$cljs$core_SLASH_shuffle,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$shuffle,"cljs/core.cljs",14,1,2490,2490,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Return a random permutation of coll",(cljs.core.truth_(cljs.core.shuffle)?cljs.core.shuffle.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.shuffle;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23119 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23119,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23119;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_ns_map,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.io.prn_str;},cljs.core.cst$sym$sci$impl$io_SLASH_prn_DASH_str,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$sci$impl$io,cljs.core.cst$sym$prn_DASH_str,"resources/public/cljs-out/dev/sci/impl/io.cljc",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$objs)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$objs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),4,127,127,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$objs], null)),"pr to a string, returning it",(cljs.core.truth_(sci.impl.io.prn_str)?sci.impl.io.prn_str.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.io.prn_str;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23120 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23120,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23120;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.defn__STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.compare_and_set_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_compare_DASH_and_DASH_set_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$compare_DASH_and_DASH_set_BANG_,"cljs/core.cljs",23,1,4547,4547,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(cljs.core.cst$sym$a,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$tag,cljs.core.cst$sym$not_DASH_native], null)),cljs.core.cst$sym$oldval,cljs.core.cst$sym$newval], null)),"Atomically sets the value of atom to newval if and only if the\n  current value of the atom is equal to oldval. Returns true if\n  set happened, else false.",(cljs.core.truth_(cljs.core.compare_and_set_BANG_)?cljs.core.compare_and_set_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.compare_and_set_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23121 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23121,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23121;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.use,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.longs;},cljs.core.cst$sym$cljs$core_SLASH_longs,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$longs,"cljs/core.cljs",12,1,2839,2839,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.longs)?cljs.core.longs.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.longs;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23122 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23122,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23122;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_remove_ns,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_int,"cljs/core.cljs",20,1,2817,2817,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Coerce to int by stripping decimal places.",(cljs.core.truth_(cljs.core.unchecked_int)?cljs.core.unchecked_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23123 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23123,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23123;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.nthrest;},cljs.core.cst$sym$cljs$core_SLASH_nthrest,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$nthrest,"cljs/core.cljs",14,1,1941,1941,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$n], null)),"Returns the nth rest of coll, coll when n is 0.",(cljs.core.truth_(cljs.core.nthrest)?cljs.core.nthrest.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.nthrest;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23124 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23124,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23124;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.doubles;},cljs.core.cst$sym$cljs$core_SLASH_doubles,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$doubles,"cljs/core.cljs",14,1,2838,2838,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.doubles)?cljs.core.doubles.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.doubles;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23125 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23125,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23125;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.remove_method;},cljs.core.cst$sym$cljs$core_SLASH_remove_DASH_method,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$remove_DASH_method,"cljs/core.cljs",20,1,11238,11238,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$multifn,cljs.core.cst$sym$dispatch_DASH_val], null)),"Removes the method of multimethod associated with dispatch-value.",(cljs.core.truth_(cljs.core.remove_method)?cljs.core.remove_method.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.remove_method;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23126 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23126,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23126;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.protocols.extend,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.nnext;},cljs.core.cst$sym$cljs$core_SLASH_nnext,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$nnext,"cljs/core.cljs",12,1,1777,1777,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Same as (next (next x))",(cljs.core.truth_(cljs.core.nnext)?cljs.core.nnext.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.nnext;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23127 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23127,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23127;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.dec;},cljs.core.cst$sym$cljs$core_SLASH_dec,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$dec,"cljs/core.cljs",10,1,2693,2693,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns a number one less than num.",(cljs.core.truth_(cljs.core.dec)?cljs.core.dec.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.dec;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23128 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23128,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23128;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.qualified_keyword_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_qualified_DASH_keyword_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$qualified_DASH_keyword_QMARK_,"cljs/core.cljs",25,1,3400,3400,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a keyword with a namespace",(cljs.core.truth_(cljs.core.qualified_keyword_QMARK_)?cljs.core.qualified_keyword_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.qualified_keyword_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23129 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23129,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23129;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.comparator;},cljs.core.cst$sym$cljs$core_SLASH_comparator,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$comparator,"cljs/core.cljs",17,1,11390,11390,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null)),"Returns an JavaScript compatible comparator based upon pred.",(cljs.core.truth_(cljs.core.comparator)?cljs.core.comparator.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.comparator;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23130 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23130,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23130;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.take_last;},cljs.core.cst$sym$cljs$core_SLASH_take_DASH_last,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$take_DASH_last,"cljs/core.cljs",16,1,4814,4814,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),"Returns a seq of the last n items in coll.  Depending on the type\n  of coll may be no better than linear time.  For vectors, see also subvec.",(cljs.core.truth_(cljs.core.take_last)?cljs.core.take_last.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.take_last;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23131 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23131,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23131;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_find_ns,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.string_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$string_QMARK_,"cljs/core.cljs",23,1,271,271,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x is a JavaScript string.",((cljs.core.string_QMARK_)?cljs.core.string_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.string_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23132 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23132,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23132;
}
})(),false);
})(),sci.impl.io.print,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_xor;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_xor,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_xor,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2863,2863,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Bitwise exclusive or",(cljs.core.truth_(cljs.core.bit_xor)?cljs.core.bit_xor.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_xor;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23133 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23133,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23133;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.map;},cljs.core.cst$sym$cljs$core_SLASH_map,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$map,"cljs/core.cljs",10,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(4),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(4),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null,null)], null),1,4710,4710,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$c1,cljs.core.cst$sym$c2,cljs.core.cst$sym$c3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),"Returns a lazy sequence consisting of the result of applying f to\n  the set of first items of each coll, followed by applying f to the\n  set of second items in each coll, until any one of the colls is\n  exhausted.  Any remaining items in other colls are ignored. Function\n  f should accept number-of-colls arguments. Returns a transducer when\n  no collection is provided.",(cljs.core.truth_(cljs.core.map)?cljs.core.map.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.map;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23134 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23134,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23134;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.float$;},cljs.core.cst$sym$cljs$core_SLASH_float,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$float,"cljs/core.cljs",20,1,2722,2722,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.float$)?cljs.core.float$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.float$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23135 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23135,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23135;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chunk_append;},cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_append,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chunk_DASH_append,"cljs/core.cljs",19,1,3639,3639,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$b,cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.chunk_append)?cljs.core.chunk_append.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chunk_append;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23136 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23136,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23136;
}
})(),false);
})(),sci.impl.core_protocols.deref_STAR_,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.re_pattern;},cljs.core.cst$sym$cljs$core_SLASH_re_DASH_pattern,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$re_DASH_pattern,"cljs/core.cljs",17,1,10034,10034,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Returns an instance of RegExp which has compiled the provided string.",(cljs.core.truth_(cljs.core.re_pattern)?cljs.core.re_pattern.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.re_pattern;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23137 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23137,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23137;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.repeat;},cljs.core.cst$sym$cljs$core_SLASH_repeat,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$repeat,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$x], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$x], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,5017,5017,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$x], null)),"Returns a lazy (infinite!, or length n if supplied) sequence of xs.",(cljs.core.truth_(cljs.core.repeat)?cljs.core.repeat.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.repeat;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23138 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23138,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23138;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.reduce;},cljs.core.cst$sym$cljs$core_SLASH_reduce,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$reduce,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$val,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$val,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2520,2520,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$val,cljs.core.cst$sym$coll], null)),"f should be a function of 2 arguments. If val is not supplied,\n  returns the result of applying f to the first 2 items in coll, then\n  applying f to that result and the 3rd item, etc. If coll contains no\n  items, f must accept no arguments as well, and reduce returns the\n  result of calling f with no arguments.  If coll has only 1 item, it\n  is returned and f is not called.  If val is supplied, returns the\n  result of applying f to val and the first item in coll, then\n  applying f to that result and the 2nd item, etc. If coll contains no\n  items, returns val and f is not called.",(cljs.core.truth_(cljs.core.reduce)?cljs.core.reduce.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.reduce;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23139 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23139,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23139;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.qualified_symbol_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_qualified_DASH_symbol_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$qualified_DASH_symbol_QMARK_,"cljs/core.cljs",24,1,3392,3392,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a symbol with a namespace",(cljs.core.truth_(cljs.core.qualified_symbol_QMARK_)?cljs.core.qualified_symbol_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.qualified_symbol_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23140 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23140,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23140;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.read.eval,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.vector;},cljs.core.cst$sym$cljs$core_SLASH_vector,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$vector,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$args)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,5737,5737,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),"Creates a new vector containing the args.",(cljs.core.truth_(cljs.core.vector)?cljs.core.vector.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.vector;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23141 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23141,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23141;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.doall;},cljs.core.cst$sym$cljs$core_SLASH_doall,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$doall,"cljs/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9966,9966,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),"When lazy sequences are produced via functions that have side\n  effects, any effects other than those needed to produce the first\n  element in the seq do not occur until the seq is consumed. doall can\n  be used to force any effects. Walks through the successive nexts of\n  the seq, retains the head and returns it, thus causing the entire\n  seq to reside in memory at one time.",(cljs.core.truth_(cljs.core.doall)?cljs.core.doall.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.doall;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23142 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23142,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23142;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.assoc_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_assoc_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$assoc_BANG_,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$key,cljs.core.cst$sym$val], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$key,cljs.core.cst$sym$val], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$key,cljs.core.cst$sym$val,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$kvs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,3851,3851,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$key,cljs.core.cst$sym$val], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll,cljs.core.cst$sym$key,cljs.core.cst$sym$val,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$kvs], null)),"When applied to a transient map, adds mapping of key(s) to\n  val(s). When applied to a transient vector, sets the val at index.\n  Note - index must be <= (count vector). Returns coll.",(cljs.core.truth_(cljs.core.assoc_BANG_)?cljs.core.assoc_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.assoc_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23143 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23143,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23143;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.not_EQ_;},cljs.core.cst$sym$cljs$core_SLASH_not_EQ_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$not_EQ_,"cljs/core.cljs",20,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,4005,4005,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Same as (not (= obj1 obj2))",((cljs.core.not_EQ_)?cljs.core.not_EQ_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.not_EQ_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23144 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23144,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23144;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.alter_meta_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_alter_DASH_meta_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$alter_DASH_meta_BANG_,"cljs/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$iref,cljs.core.cst$sym$f,cljs.core.cst$sym$args)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$iref,cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,10507,10507,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$iref,cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),"Atomically sets the metadata for a namespace/var/ref/agent/atom to be:\n\n  (apply f its-current-meta args)\n\n  f must be free of side-effects",(cljs.core.truth_(cljs.core.alter_meta_BANG_)?cljs.core.alter_meta_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.alter_meta_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23145 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23145,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23145;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.constantly;},cljs.core.cst$sym$cljs$core_SLASH_constantly,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$constantly,"cljs/core.cljs",17,1,4282,4282,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns a function that takes any number of arguments and returns x.",(cljs.core.truth_(cljs.core.constantly)?cljs.core.constantly.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.constantly;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23146 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23146,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23146;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.seq_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_seq_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$seq_QMARK_,"cljs/core.cljs",11,1,2246,2246,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Return true if s satisfies ISeq",(cljs.core.truth_(cljs.core.seq_QMARK_)?cljs.core.seq_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.seq_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23147 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23147,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23147;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.get;},cljs.core.cst$sym$cljs$core_SLASH_get,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$get,"cljs/core.cljs",10,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o,cljs.core.cst$sym$k], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o,cljs.core.cst$sym$k,cljs.core.cst$sym$not_DASH_found], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o,cljs.core.cst$sym$k], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o,cljs.core.cst$sym$k,cljs.core.cst$sym$not_DASH_found], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,1949,1949,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o,cljs.core.cst$sym$k], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$o,cljs.core.cst$sym$k,cljs.core.cst$sym$not_DASH_found], null)),"Returns the value mapped to key, not-found or nil if key not present.",(cljs.core.truth_(cljs.core.get)?cljs.core.get.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.get;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23148 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23148,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23148;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.require,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.key;},cljs.core.cst$sym$cljs$core_SLASH_key,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$key,"cljs/core.cljs",10,1,9025,9025,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$map_DASH_entry], null)),"Returns the key of the map entry.",(cljs.core.truth_(cljs.core.key)?cljs.core.key.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.key;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23149 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23149,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23149;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_and_not;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and_DASH_not,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_and_DASH_not,"cljs/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2881,2881,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Bitwise and with complement",(cljs.core.truth_(cljs.core.bit_and_not)?cljs.core.bit_and_not.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_and_not;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23150 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23150,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23150;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.mapcat;},cljs.core.cst$sym$cljs$core_SLASH_mapcat,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$static,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.0",cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$mapcat,"cljs/core.cljs",13,true,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,5154,5154,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$colls], null)),"Returns the result of applying concat to the result of applying map\n  to f and colls.  Thus function f should return a collection. Returns\n  a transducer when no collections are provided",(cljs.core.truth_(cljs.core.mapcat)?cljs.core.mapcat.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.mapcat;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23151 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23151,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23151;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.cond__GT__STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.nat_int_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_nat_DASH_int_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$nat_DASH_int_QMARK_,"cljs/core.cljs",15,1,2321,2321,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x satisfies int? and is a natural integer value.",(cljs.core.truth_(cljs.core.nat_int_QMARK_)?cljs.core.nat_int_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.nat_int_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23152 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23152,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23152;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.get_method;},cljs.core.cst$sym$cljs$core_SLASH_get_DASH_method,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$get_DASH_method,"cljs/core.cljs",17,1,11253,11253,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$multifn,cljs.core.cst$sym$dispatch_DASH_val], null)),"Given a multimethod and a dispatch value, returns the dispatch fn\n  that would apply to that value, or nil if none apply and no default",(cljs.core.truth_(cljs.core.get_method)?cljs.core.get_method.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.get_method;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23153 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23153,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23153;
}
})(),false);
})(),sci.impl.io.out,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.str;},cljs.core.cst$sym$cljs$core_SLASH_str,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$str,"cljs/core.cljs",10,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ys], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2972,2972,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ys], null)),"With no args, returns the empty string. With one arg x, returns\n  x.toString().  (str nil) returns the empty string. With more than\n  one arg, returns the concatenation of the str values of the args.",(cljs.core.truth_(cljs.core.str)?cljs.core.str.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.str;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23154 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23154,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23154;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.empty;},cljs.core.cst$sym$cljs$core_SLASH_empty,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$empty,"cljs/core.cljs",12,1,1809,1809,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns an empty collection of the same category as coll, or nil",(cljs.core.truth_(cljs.core.empty)?cljs.core.empty.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.empty;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23155 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23155,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23155;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.counted_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_counted_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$counted_QMARK_,"cljs/core.cljs",15,1,1534,1534,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if coll implements count in constant time",(cljs.core.truth_(cljs.core.counted_QMARK_)?cljs.core.counted_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.counted_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23156 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23156,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23156;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.set_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$set_QMARK_,"cljs/core.cljs",11,1,2140,2140,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x satisfies ISet",(cljs.core.truth_(cljs.core.set_QMARK_)?cljs.core.set_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.set_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23157 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23157,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23157;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.alength;},cljs.core.cst$sym$cljs$core_SLASH_alength,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$alength,"cljs/core.cljs",22,1,517,517,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$array], null)),"Returns the length of the array. Works on arrays of all types.",(cljs.core.truth_(cljs.core.alength)?cljs.core.alength.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.alength;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23158 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23158,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23158;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.filterv;},cljs.core.cst$sym$cljs$core_SLASH_filterv,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$filterv,"cljs/core.cljs",14,1,5256,5256,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns a vector of the items in coll for which\n  (pred item) returns logical true. pred must be free of side-effects.",(cljs.core.truth_(cljs.core.filterv)?cljs.core.filterv.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.filterv;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23159 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23159,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23159;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.reductions;},cljs.core.cst$sym$cljs$core_SLASH_reductions,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$reductions,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$init,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$init,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9901,9901,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$init,cljs.core.cst$sym$coll], null)),"Returns a lazy seq of the intermediate values of the reduction (as\n  per reduce) of coll by f, starting with init.",(cljs.core.truth_(cljs.core.reductions)?cljs.core.reductions.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.reductions;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23160 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23160,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23160;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.booleans;},cljs.core.cst$sym$cljs$core_SLASH_booleans,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$booleans,"cljs/core.cljs",15,1,2832,2832,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.booleans)?cljs.core.booleans.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.booleans;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23161 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23161,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23161;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._LT_;},cljs.core.cst$sym$cljs$core_SLASH__LT_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_LT_,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2645,2645,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns non-nil if nums are in monotonically increasing order,\n  otherwise false.",((cljs.core._LT_)?cljs.core._LT_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._LT_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23162 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23162,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23162;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.reduced;},cljs.core.cst$sym$cljs$core_SLASH_reduced,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$reduced,"cljs/core.cljs",14,1,1447,1447,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Wraps x in a way such that a reduce will terminate with the value x",(cljs.core.truth_(cljs.core.reduced)?cljs.core.reduced.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.reduced;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23163 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23163,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23163;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.namespace;},cljs.core.cst$sym$cljs$core_SLASH_namespace,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$namespace,"cljs/core.cljs",16,1,3369,3369,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns the namespace String of a symbol or keyword, or nil if not present.",(cljs.core.truth_(cljs.core.namespace)?cljs.core.namespace.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.namespace;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23164 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23164,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23164;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.keyword;},cljs.core.cst$sym$cljs$core_SLASH_keyword,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$keyword,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ns,cljs.core.cst$sym$name], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ns,cljs.core.cst$sym$name], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,3404,3404,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ns,cljs.core.cst$sym$name], null)),"Returns a Keyword with the given namespace and name.  Do not use :\n  in the keyword strings, it will be added automatically.",(cljs.core.truth_(cljs.core.keyword)?cljs.core.keyword.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.keyword;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23165 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23165,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23165;
}
})(),false);
})(),sci.impl.records.sci_record_QMARK_,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.tagged_literal_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_tagged_DASH_literal_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$tagged_DASH_literal_QMARK_,"cljs/core.cljs",22,1,11444,11444,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$value], null)),"Return true if the value is the data representation of a tagged literal",(cljs.core.truth_(cljs.core.tagged_literal_QMARK_)?cljs.core.tagged_literal_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.tagged_literal_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23166 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23166,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23166;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core._;},cljs.core.cst$sym$cljs$core_SLASH__DASH_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$_DASH_,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2622,2622,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"If no ys are supplied, returns the negation of x, else subtracts\n  the ys from x and returns the result.",(cljs.core.truth_(cljs.core._)?cljs.core._.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core._;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23167 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23167,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23167;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_and;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_and,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_and,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2869,2869,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Bitwise and",(cljs.core.truth_(cljs.core.bit_and)?cljs.core.bit_and.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_and;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23168 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23168,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23168;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unreduced;},cljs.core.cst$sym$cljs$core_SLASH_unreduced,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unreduced,"cljs/core.cljs",16,1,1462,1462,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"If x is reduced?, returns (deref x), else returns x",(cljs.core.truth_(cljs.core.unreduced)?cljs.core.unreduced.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unreduced;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23169 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23169,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23169;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.assoc;},cljs.core.cst$sym$cljs$core_SLASH_assoc,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$assoc,"cljs/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$v], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$v], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$v,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$kvs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,1993,1993,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$v], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$k,cljs.core.cst$sym$v,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$kvs], null)),"assoc[iate]. When applied to a map, returns a new map of the\n   same (hashed/sorted) type, that contains the mapping of key(s) to\n   val(s). When applied to a vector, returns a new vector that\n   contains val at index. Note - index must be <= (count vector).",(cljs.core.truth_(cljs.core.assoc)?cljs.core.assoc.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.assoc;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23170 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23170,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23170;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.multimethods.defmulti,new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$sci_SLASH_macro,true,cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.partition_all;},cljs.core.cst$sym$cljs$core_SLASH_partition_DASH_all,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$partition_DASH_all,"cljs/core.cljs",20,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,9567,9567,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$step,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of lists like partition, but may include\n  partitions with fewer than n items at the end.  Returns a stateful\n  transducer when no collection is provided.",(cljs.core.truth_(cljs.core.partition_all)?cljs.core.partition_all.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.partition_all;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23171 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23171,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23171;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_not;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_not,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_not,"cljs/core.cljs",14,1,2897,2897,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Bitwise complement",(cljs.core.truth_(cljs.core.bit_not)?cljs.core.bit_not.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_not;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23172 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23172,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23172;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.some_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_some_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$some_QMARK_,"cljs/core.cljs",21,1,260,260,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x is not nil, false otherwise.",((cljs.core.some_QMARK_)?cljs.core.some_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.some_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23173 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23173,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23173;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.pos_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_pos_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$pos_QMARK_,"cljs/core.cljs",20,1,2947,2947,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if num is greater than zero, else false",((cljs.core.pos_QMARK_)?cljs.core.pos_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.pos_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23174 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23174,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23174;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.trampoline;},cljs.core.cst$sym$cljs$core_SLASH_trampoline,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$trampoline,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,10817,10817,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),"trampoline can be used to convert algorithms requiring mutual\n  recursion without stack consumption. Calls f with supplied args, if\n  any. If f returns a fn, calls that fn with no arguments, and\n  continues to repeat, until the return value is not a fn, then\n  returns that non-fn value. Note that if you want to return a fn as a\n  final value, you must wrap it in some data structure and unpack it\n  after trampoline returns.",(cljs.core.truth_(cljs.core.trampoline)?cljs.core.trampoline.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.trampoline;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23175 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23175,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23175;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.rand;},cljs.core.cst$sym$cljs$core_SLASH_rand,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$rand,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,1,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,1,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,10833,10833,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null)),"Returns a random floating point number between 0 (inclusive) and\n  n (default 1) (exclusive).",(cljs.core.truth_(cljs.core.rand)?cljs.core.rand.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.rand;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23176 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23176,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23176;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.re_matches;},cljs.core.cst$sym$cljs$core_SLASH_re_DASH_matches,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$re_DASH_matches,"cljs/core.cljs",17,1,9987,9987,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$re,cljs.core.cst$sym$s], null)),"Returns the result of (re-find re s) if re fully matches s.",(cljs.core.truth_(cljs.core.re_matches)?cljs.core.re_matches.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.re_matches;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23177 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23177,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23177;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.boolean_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_boolean_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$boolean_QMARK_,"cljs/core.cljs",15,1,2237,2237,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x is a Boolean",(cljs.core.truth_(cljs.core.boolean_QMARK_)?cljs.core.boolean_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.boolean_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23178 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23178,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23178;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.every_pred;},cljs.core.cst$sym$cljs$core_SLASH_every_DASH_pred,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$every_DASH_pred,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ps], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,4632,4632,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$p1,cljs.core.cst$sym$p2,cljs.core.cst$sym$p3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$ps], null)),"Takes a set of predicates and returns a function f that returns true if all of its\n  composing predicates return a logical true value against all of its arguments, else it returns\n  false. Note that f is short-circuiting in that it will stop execution on the first\n  argument that triggers a logical false result against the original predicates.",(cljs.core.truth_(cljs.core.every_pred)?cljs.core.every_pred.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.every_pred;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23179 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23179,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23179;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.fn_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_fn_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$fn_QMARK_,"cljs/core.cljs",10,1,2024,2024,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null)),"Return true if f is a JavaScript function or satisfies the Fn protocol.",(cljs.core.truth_(cljs.core.fn_QMARK_)?cljs.core.fn_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.fn_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23180 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23180,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23180;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sequential_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sequential_QMARK_,"cljs/core.cljs",18,1,2155,2155,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if coll satisfies ISequential",(cljs.core.truth_(cljs.core.sequential_QMARK_)?cljs.core.sequential_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sequential_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23181 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23181,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23181;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.list;},cljs.core.cst$sym$cljs$core_SLASH_list,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$list,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$xs)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$xs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,3218,3218,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$xs], null)),"Creates a new list containing the items.",(cljs.core.truth_(cljs.core.list)?cljs.core.list.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.list;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23182 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23182,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23182;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sorted_set_by;},cljs.core.cst$sym$cljs$core_SLASH_sorted_DASH_set_DASH_by,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sorted_DASH_set_DASH_by,"cljs/core.cljs",20,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$comparator,cljs.core.cst$sym$keys)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$comparator,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keys], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,9459,9459,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$comparator,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keys], null)),"Returns a new sorted set with supplied keys, using the supplied comparator.",(cljs.core.truth_(cljs.core.sorted_set_by)?cljs.core.sorted_set_by.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sorted_set_by;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23183 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23183,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23183;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.nthnext;},cljs.core.cst$sym$cljs$core_SLASH_nthnext,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$nthnext,"cljs/core.cljs",14,1,2962,2962,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$n], null)),"Returns the nth next of coll, (seq coll) when n is 0.",(cljs.core.truth_(cljs.core.nthnext)?cljs.core.nthnext.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.nthnext;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23184 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23184,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23184;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.eduction;},cljs.core.cst$sym$cljs$core_SLASH_eduction,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$eduction,"cljs/core.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$xforms)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$xforms], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,10702,10702,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$xforms], null)),"Returns a reducible/iterable application of the transducers\n  to the items in coll. Transducers are applied in order as if\n  combined with comp. Note that these applications will be\n  performed every time reduce/iterator is called.",(cljs.core.truth_(cljs.core.eduction)?cljs.core.eduction.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.eduction;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23185 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23185,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23185;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.rand_nth;},cljs.core.cst$sym$cljs$core_SLASH_rand_DASH_nth,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$rand_DASH_nth,"cljs/core.cljs",15,1,10843,10843,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Return a random element of the (sequential) collection. Will have\n  the same performance characteristics as nth for the given\n  collection.",(cljs.core.truth_(cljs.core.rand_nth)?cljs.core.rand_nth.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.rand_nth;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23186 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23186,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23186;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.delay_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.partial;},cljs.core.cst$sym$cljs$core_SLASH_partial,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$partial,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(4),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(4),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1,cljs.core.cst$sym$arg2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1,cljs.core.cst$sym$arg2,cljs.core.cst$sym$arg3], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1,cljs.core.cst$sym$arg2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1,cljs.core.cst$sym$arg2,cljs.core.cst$sym$arg3], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1,cljs.core.cst$sym$arg2,cljs.core.cst$sym$arg3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null,null)], null),1,4315,4315,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1,cljs.core.cst$sym$arg2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1,cljs.core.cst$sym$arg2,cljs.core.cst$sym$arg3], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$arg1,cljs.core.cst$sym$arg2,cljs.core.cst$sym$arg3,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Takes a function f and fewer than the normal arguments to f, and\n  returns a fn that takes a variable number of additional args. When\n  called, the returned function calls f with args + additional args.",(cljs.core.truth_(cljs.core.partial)?cljs.core.partial.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.partial;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23187 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23187,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23187;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.sci_with_bindings),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.rsubseq;},cljs.core.cst$sym$cljs$core_SLASH_rsubseq,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$rsubseq,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,5,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,5,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$test,cljs.core.cst$sym$key], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$start_DASH_test,cljs.core.cst$sym$start_DASH_key,cljs.core.cst$sym$end_DASH_test,cljs.core.cst$sym$end_DASH_key], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$test,cljs.core.cst$sym$key], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$start_DASH_test,cljs.core.cst$sym$start_DASH_key,cljs.core.cst$sym$end_DASH_test,cljs.core.cst$sym$end_DASH_key], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9638,9638,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$test,cljs.core.cst$sym$key], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sc,cljs.core.cst$sym$start_DASH_test,cljs.core.cst$sym$start_DASH_key,cljs.core.cst$sym$end_DASH_test,cljs.core.cst$sym$end_DASH_key], null)),"sc must be a sorted collection, test(s) one of <, <=, > or\n  >=. Returns a reverse seq of those entries with keys ek for\n  which (test (.. sc comparator (compare ek key)) 0) is true",(cljs.core.truth_(cljs.core.rsubseq)?cljs.core.rsubseq.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.rsubseq;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23188 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23188,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23188;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.contains_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_contains_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$contains_QMARK_,"cljs/core.cljs",16,1,2352,2352,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$v], null)),"Returns true if key is present in the given collection, otherwise\n  returns false.  Note that for numerically indexed collections like\n  vectors and arrays, this tests if the numeric key is within the\n  range of indexes. 'contains?' operates constant or logarithmic time;\n  it will not perform a linear search for a value.  See also 'some'.",(cljs.core.truth_(cljs.core.contains_QMARK_)?cljs.core.contains_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.contains_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23189 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23189,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23189;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.__GT__STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.shorts;},cljs.core.cst$sym$cljs$core_SLASH_shorts,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$shorts,"cljs/core.cljs",13,1,2835,2835,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.shorts)?cljs.core.shorts.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.shorts;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23190 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23190,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23190;
}
})(),false);
})(),sci.impl.core_protocols.swap_protocol,sci.impl.namespaces.macrofy(sci.impl.namespaces.as__GT__STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.hash_set;},cljs.core.cst$sym$cljs$core_SLASH_hash_DASH_set,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$hash_DASH_set,"cljs/core.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keys], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9448,9448,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keys], null)),"Returns a new hash set with supplied keys.  Any equal keys are\n  handled as if by repeated uses of conj.",(cljs.core.truth_(cljs.core.hash_set)?cljs.core.hash_set.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.hash_set;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23191 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23191,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23191;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.take;},cljs.core.cst$sym$cljs$core_SLASH_take,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$take,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,4757,4757,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of the first n items in coll, or all items if\n  there are fewer than n.  Returns a stateful transducer when\n  no collection is provided.",(cljs.core.truth_(cljs.core.take)?cljs.core.take.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.take;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23192 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23192,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23192;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.if_let_STAR_),cljs.core.with_meta(sci.impl.namespaces.macroexpand_1_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.split_with;},cljs.core.cst$sym$cljs$core_SLASH_split_DASH_with,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$split_DASH_with,"cljs/core.cljs",17,1,9846,9846,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns a vector of [(take-while pred coll) (drop-while pred coll)]",(cljs.core.truth_(cljs.core.split_with)?cljs.core.split_with.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.split_with;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23193 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23193,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23193;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_refer,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.vars.binding_conveyor_fn,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.make_hierarchy;},cljs.core.cst$sym$cljs$core_SLASH_make_DASH_hierarchy,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$make_DASH_hierarchy,"cljs/core.cljs",21,1,10862,10862,cljs.core.list(cljs.core.PersistentVector.EMPTY),"Creates a hierarchy object for use with derive, isa? etc.",(cljs.core.truth_(cljs.core.make_hierarchy)?cljs.core.make_hierarchy.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.make_hierarchy;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23194 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23194,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23194;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.tagged_literal;},cljs.core.cst$sym$cljs$core_SLASH_tagged_DASH_literal,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$tagged_DASH_literal,"cljs/core.cljs",21,1,11449,11449,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tag,cljs.core.cst$sym$form], null)),"Construct a data representation of a tagged literal from a\n  tag symbol and a form.",(cljs.core.truth_(cljs.core.tagged_literal)?cljs.core.tagged_literal.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.tagged_literal;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23195 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23195,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23195;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.namespaces.has_root_impl;},cljs.core.cst$sym$sci$impl$namespaces_SLASH_has_DASH_root_DASH_impl,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.with_meta(cljs.core.cst$sym$sci$impl$namespaces,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$no_DASH_doc,true], null)),cljs.core.cst$sym$has_DASH_root_DASH_impl,"resources/public/cljs-out/dev/sci/impl/namespaces.cljc",20,1,365,365,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$sci_DASH_var], null)),null,(cljs.core.truth_(sci.impl.namespaces.has_root_impl)?sci.impl.namespaces.has_root_impl.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.namespaces.has_root_impl;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23196 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23196,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23196;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.hierarchies.parents_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.vec;},cljs.core.cst$sym$cljs$core_SLASH_vec,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$vec,"cljs/core.cljs",10,1,5717,5717,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Creates a new vector containing the contents of coll. JavaScript arrays\n  will be aliased and should not be modified.",(cljs.core.truth_(cljs.core.vec)?cljs.core.vec.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.vec;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23197 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23197,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23197;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.nth;},cljs.core.cst$sym$cljs$core_SLASH_nth,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$nth,"cljs/core.cljs",10,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$n,cljs.core.cst$sym$not_DASH_found], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$n,cljs.core.cst$sym$not_DASH_found], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,1869,1869,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$n,cljs.core.cst$sym$not_DASH_found], null)),"Returns the value at the index. get returns nil if index out of\n  bounds, nth throws an exception unless not-found is supplied.  nth\n  also works for strings, arrays, regex Matchers and Lists, and,\n  in O(n) time, for sequences.",(cljs.core.truth_(cljs.core.nth)?cljs.core.nth.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.nth;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23198 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23198,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23198;
}
})(),false);
})(),sci.impl.namespaces.clojure_core_ns,sci.impl.namespaces.macrofy(sci.impl.namespaces.lazy_cat_STAR_),sci.impl.namespaces.macrofy(sci.impl.namespaces.if_some_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.subs;},cljs.core.cst$sym$cljs$core_SLASH_subs,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$subs,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$start], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$start,cljs.core.cst$sym$end], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$start], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$start,cljs.core.cst$sym$end], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,2986,2986,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$start], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$start,cljs.core.cst$sym$end], null)),"Returns the substring of s beginning at start inclusive, and ending\n  at end (defaults to length of string), exclusive.",(cljs.core.truth_(cljs.core.subs)?cljs.core.subs.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.subs;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23199 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23199,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23199;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.namespaces.symbol_STAR_;},cljs.core.cst$sym$sci$impl$namespaces_SLASH_symbol_STAR_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.with_meta(cljs.core.cst$sym$sci$impl$namespaces,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$no_DASH_doc,true], null)),cljs.core.cst$sym$symbol_STAR_,"resources/public/cljs-out/dev/sci/impl/namespaces.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ns,cljs.core.cst$sym$name], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ns,cljs.core.cst$sym$name], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,611,611,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$name], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$ns,cljs.core.cst$sym$name], null)),"Returns a Symbol with the given namespace and name. Arity-1 works\n  on strings, keywords, and vars.",(cljs.core.truth_(sci.impl.namespaces.symbol_STAR_)?sci.impl.namespaces.symbol_STAR_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.namespaces.symbol_STAR_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23200 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23200,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23200;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.mod;},cljs.core.cst$sym$cljs$core_SLASH_mod,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$mod,"cljs/core.cljs",10,1,2846,2846,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$d], null)),"Modulus of num and div. Truncates toward negative infinity.",(cljs.core.truth_(cljs.core.mod)?cljs.core.mod.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.mod;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23201 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23201,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23201;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.number_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$number_QMARK_,"cljs/core.cljs",23,1,247,247,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if x is a JavaScript number.",((cljs.core.number_QMARK_)?cljs.core.number_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.number_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23202 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23202,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23202;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.reduced_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_reduced_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$reduced_QMARK_,"cljs/core.cljs",15,1,1452,1452,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$r], null)),"Returns true if x is the result of a call to reduced",(cljs.core.truth_(cljs.core.reduced_QMARK_)?cljs.core.reduced_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.reduced_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23203 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23203,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23203;
}
})(),false);
})(),(function (){
return sci.impl.vars.new_var.cljs$core$IFn$_invoke$arity$3(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0(),null,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$dynamic,true], null));
}),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.conj;},cljs.core.cst$sym$cljs$core_SLASH_conj,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$conj,"cljs/core.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$x], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$xs], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,1794,1794,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll,cljs.core.cst$sym$x,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$xs], null)),"conj[oin]. Returns a new collection with the xs\n  'added'. (conj nil item) returns (item).  The 'addition' may\n  happen at different 'places' depending on the concrete type.",(cljs.core.truth_(cljs.core.conj)?cljs.core.conj.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.conj;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23204 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23204,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23204;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bytes;},cljs.core.cst$sym$cljs$core_SLASH_bytes,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bytes,"cljs/core.cljs",12,1,2833,2833,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.bytes)?cljs.core.bytes.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bytes;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23205 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23205,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23205;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_float;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_float,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_float,"cljs/core.cljs",30,1,2728,2728,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.unchecked_float)?cljs.core.unchecked_float.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_float;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23206 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23206,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23206;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.bit_test;},cljs.core.cst$sym$cljs$core_SLASH_bit_DASH_test,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$bit_DASH_test,"cljs/core.cljs",24,1,2906,2906,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$n], null)),"Test bit at index n",((cljs.core.bit_test)?cljs.core.bit_test.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.bit_test;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23207 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23207,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23207;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.sorted_map_by;},cljs.core.cst$sym$cljs$core_SLASH_sorted_DASH_map_DASH_by,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$sorted_DASH_map_DASH_by,"cljs/core.cljs",20,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$comparator,cljs.core.cst$sym$keyvals)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$comparator,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,8941,8941,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$comparator,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),"keyval => key val\n  Returns a new sorted map with supplied mappings, using the supplied comparator.",(cljs.core.truth_(cljs.core.sorted_map_by)?cljs.core.sorted_map_by.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.sorted_map_by;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23208 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23208,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23208;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.double_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_double_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$double_QMARK_,"cljs/core.cljs",14,1,2341,2341,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true for JavaScript numbers, false otherwise.",(cljs.core.truth_(cljs.core.double_QMARK_)?cljs.core.double_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.double_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23209 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23209,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23209;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.rseq;},cljs.core.cst$sym$cljs$core_SLASH_rseq,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$rseq,"cljs/core.cljs",16,1,3205,3205,cljs.core.cst$sym$seq,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$rev], null)),"Returns, in constant time, a seq of the items in rev (which\n  can be a vector or sorted-map), in reverse order. If rev is empty returns nil",((cljs.core.rseq)?cljs.core.rseq.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.rseq;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23210 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23210,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23210;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_long;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_long,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_long,"cljs/core.cljs",21,1,2827,2827,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Coerce to long by stripping decimal places. Identical to `int'.",(cljs.core.truth_(cljs.core.unchecked_long)?cljs.core.unchecked_long.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_long;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23211 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23211,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23211;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_binding,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci_SLASH_macro,true], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.double$;},cljs.core.cst$sym$cljs$core_SLASH_double,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$double,"cljs/core.cljs",21,1,2723,2723,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.double$)?cljs.core.double$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.double$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23212 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23212,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23212;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.tree_seq;},cljs.core.cst$sym$cljs$core_SLASH_tree_DASH_seq,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$tree_DASH_seq,"cljs/core.cljs",15,1,5201,5201,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$branch_QMARK_,cljs.core.cst$sym$children,cljs.core.cst$sym$root], null)),"Returns a lazy sequence of the nodes in a tree, via a depth-first walk.\n  branch? must be a fn of one arg that returns true if passed a node\n  that can have children (but may not).  children must be a fn of one\n  arg that returns a sequence of the children. Will only be called on\n  nodes for which branch? returns true. Root is the root node of the\n  tree.",(cljs.core.truth_(cljs.core.tree_seq)?cljs.core.tree_seq.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.tree_seq;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23213 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23213,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23213;
}
})(),false);
})(),sci.impl.multimethods.multi_fn_add_method_impl,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.seqable_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_seqable_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$seqable_QMARK_,"cljs/core.cljs",15,1,2253,2253,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Return true if the seq function is supported for s",(cljs.core.truth_(cljs.core.seqable_QMARK_)?cljs.core.seqable_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.seqable_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23214 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23214,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23214;
}
})(),false);
})(),sci.impl.core_protocols.swap_BANG__STAR_,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.namespaces.vswap_BANG__STAR_;},cljs.core.cst$sym$sci$impl$namespaces_SLASH_vswap_BANG__STAR_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.with_meta(cljs.core.cst$sym$sci$impl$namespaces,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$no_DASH_doc,true], null)),cljs.core.cst$sym$vswap_BANG__STAR_,"resources/public/cljs-out/dev/sci/impl/namespaces.cljc",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$vol,cljs.core.cst$sym$f,cljs.core.cst$sym$args)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$vol,cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,309,309,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$vol,cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),null,(cljs.core.truth_(sci.impl.namespaces.vswap_BANG__STAR_)?sci.impl.namespaces.vswap_BANG__STAR_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.namespaces.vswap_BANG__STAR_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23215 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23215,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23215;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.array_map;},cljs.core.cst$sym$cljs$core_SLASH_array_DASH_map,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$array_DASH_map,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(0),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(0),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$keyvals)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,8910,8910,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$keyvals], null)),"keyval => key val\n  Returns a new array map with supplied mappings.",(cljs.core.truth_(cljs.core.array_map)?cljs.core.array_map.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.array_map;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23216 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23216,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23216;
}
})(),false);
})(),sci.impl.vars.reset_thread_binding_frame,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.dedupe;},cljs.core.cst$sym$cljs$core_SLASH_dedupe,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$dedupe,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,1,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,1,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,10645,10645,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a lazy sequence removing consecutive duplicates in coll.\n  Returns a transducer when no collection is provided.",(cljs.core.truth_(cljs.core.dedupe)?cljs.core.dedupe.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.dedupe;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23217 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23217,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23217;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.short$;},cljs.core.cst$sym$cljs$core_SLASH_short,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$short,"cljs/core.cljs",20,1,2721,2721,cljs.core.cst$sym$number,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.short$)?cljs.core.short$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.short$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23218 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23218,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23218;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.update;},cljs.core.cst$sym$cljs$core_SLASH_update,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$update,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(6),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(6),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z], null),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null,null)], null),1,5342,5342,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z], null),new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m,cljs.core.cst$sym$k,cljs.core.cst$sym$f,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$z,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"'Updates' a value in an associative structure, where k is a\n  key and f is a function that will take the old value\n  and any supplied args and return the new value, and returns a new\n  structure.  If the key does not exist, nil is passed as the old value.",(cljs.core.truth_(cljs.core.update)?cljs.core.update.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.update;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23219 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23219,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23219;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.filter;},cljs.core.cst$sym$cljs$core_SLASH_filter,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$filter,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,5164,5164,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of the items in coll for which\n  (pred item) returns logical true. pred must be free of side-effects.\n  Returns a transducer when no collection is provided.",(cljs.core.truth_(cljs.core.filter)?cljs.core.filter.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.filter;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23220 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23220,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23220;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.unchecked_dec_int;},cljs.core.cst$sym$cljs$core_SLASH_unchecked_DASH_dec_DASH_int,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$unchecked_DASH_dec_DASH_int,"cljs/core.cljs",24,1,2750,2750,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns a number one less than x, an int.",(cljs.core.truth_(cljs.core.unchecked_dec_int)?cljs.core.unchecked_dec_int.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.unchecked_dec_int;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23221 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23221,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23221;
}
})(),false);
})(),sci.impl.namespaces._STAR_3,cljs.core.with_meta(sci.impl.namespaces.sci_requiring_resolve,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.rem;},cljs.core.cst$sym$cljs$core_SLASH_rem,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$rem,"cljs/core.cljs",10,1,2857,2857,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$d], null)),"remainder of dividing numerator by denominator.",(cljs.core.truth_(cljs.core.rem)?cljs.core.rem.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.rem;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23222 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23222,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23222;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.pop;},cljs.core.cst$sym$cljs$core_SLASH_pop,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$pop,"cljs/core.cljs",10,1,2105,2105,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"For a list or queue, returns a new list/queue without the first\n  item, for a vector, returns a new vector without the last item.\n  Note - not the same as next/butlast.",(cljs.core.truth_(cljs.core.pop)?cljs.core.pop.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.pop;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23223 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23223,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23223;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.merge_with;},cljs.core.cst$sym$cljs$core_SLASH_merge_DASH_with,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$merge_DASH_with,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(1),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(1),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$f,cljs.core.cst$sym$maps)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$maps], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,9117,9117,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$maps], null)),"Returns a map that consists of the rest of the maps conj-ed onto\n  the first.  If a key occurs in more than one map, the mapping(s)\n  from the latter (left-to-right) will be combined with the mapping in\n  the result by calling (f val-in-result val-in-latter).",(cljs.core.truth_(cljs.core.merge_with)?cljs.core.merge_with.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.merge_with;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23224 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23224,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23224;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.long$;},cljs.core.cst$sym$cljs$core_SLASH_long,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$long,"cljs/core.cljs",11,1,2822,2822,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Coerce to long by stripping decimal places. Identical to `int'.",(cljs.core.truth_(cljs.core.long$)?cljs.core.long$.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.long$;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23225 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23225,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23225;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.assert_STAR_,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci_SLASH_macro,true], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.flatten;},cljs.core.cst$sym$cljs$core_SLASH_flatten,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$flatten,"cljs/core.cljs",14,1,5216,5216,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Takes any nested combination of sequential things (lists, vectors,\n  etc.) and returns their contents as a single, flat sequence.\n  (flatten nil) returns nil.",(cljs.core.truth_(cljs.core.flatten)?cljs.core.flatten.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.flatten;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23226 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23226,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23226;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.distinct_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_distinct_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$distinct_QMARK_,"cljs/core.cljs",25,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,2373,2373,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns true if no two of the arguments are =",((cljs.core.distinct_QMARK_)?cljs.core.distinct_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.distinct_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23227 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23227,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23227;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.map_indexed;},cljs.core.cst$sym$cljs$core_SLASH_map_DASH_indexed,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$map_DASH_indexed,"cljs/core.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,4369,4369,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence consisting of the result of applying f to 0\n  and the first item of coll, followed by applying f to 1 and the second\n  item in coll, etc, until coll is exhausted. Thus function f should\n  accept 2 arguments, index and item. Returns a stateful transducer when\n  no collection is provided.",(cljs.core.truth_(cljs.core.map_indexed)?cljs.core.map_indexed.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.map_indexed;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23228 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23228,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23228;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_ns_publics,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.types.type_impl,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.even_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_even_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$even_QMARK_,"cljs/core.cljs",12,1,4262,4262,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null)),"Returns true if n is even, throws an exception if n is not an integer",(cljs.core.truth_(cljs.core.even_QMARK_)?cljs.core.even_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.even_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23229 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23229,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23229;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.vars.var_get;},cljs.core.cst$sym$sci$impl$vars_SLASH_var_DASH_get,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$sci$impl$vars,cljs.core.cst$sym$var_DASH_get,"resources/public/cljs-out/dev/sci/impl/vars.cljc",14,1,366,366,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v], null)),null,(cljs.core.truth_(sci.impl.vars.var_get)?sci.impl.vars.var_get.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.vars.var_get;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23230 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23230,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23230;
}
})(),false);
})(),sci.impl.multimethods.multi_fn_QMARK__impl,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return sci.impl.vars.alter_var_root;},cljs.core.cst$sym$sci$impl$vars_SLASH_alter_DASH_var_DASH_root,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$sci$impl$vars,cljs.core.cst$sym$alter_DASH_var_DASH_root,"resources/public/cljs-out/dev/sci/impl/vars.cljc",21,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$v,cljs.core.cst$sym$f,cljs.core.cst$sym$args)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null)], null),1,405,405,cljs.core.list(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$v,cljs.core.cst$sym$f,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$args], null)),null,(cljs.core.truth_(sci.impl.vars.alter_var_root)?sci.impl.vars.alter_var_root.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = sci.impl.vars.alter_var_root;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23231 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23231,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23231;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.type;},cljs.core.cst$sym$cljs$core_SLASH_type,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$type,"cljs/core.cljs",11,1,311,311,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return x's constructor.",(cljs.core.truth_(cljs.core.type)?cljs.core.type.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.type;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23232 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23232,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23232;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.neg_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_neg_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$neg_QMARK_,"cljs/core.cljs",20,1,2956,2956,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if num is less than zero, else false",((cljs.core.neg_QMARK_)?cljs.core.neg_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.neg_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23233 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23233,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23233;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.gensym;},cljs.core.cst$sym$cljs$core_SLASH_gensym,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$gensym,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,1,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,1,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prefix_DASH_string], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prefix_DASH_string], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,10556,10556,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$prefix_DASH_string], null)),"Returns a new symbol with a unique name. If a prefix string is\n  supplied, the name is prefix# where # is some unique number. If\n  prefix is not supplied, the prefix is 'G__'.",(cljs.core.truth_(cljs.core.gensym)?cljs.core.gensym.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.gensym;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23234 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23234,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23234;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_resolve,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.add_watch;},cljs.core.cst$sym$cljs$core_SLASH_add_DASH_watch,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$add_DASH_watch,"cljs/core.cljs",16,1,10521,10521,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$iref,cljs.core.cst$sym$key,cljs.core.cst$sym$f], null)),"Adds a watch function to an atom reference. The watch fn must be a\n  fn of 4 args: a key, the reference, its old-state, its\n  new-state. Whenever the reference's state might have been changed,\n  any registered watches will have their functions called. The watch\n  fn will be called synchronously. Note that an atom's state\n  may have changed again prior to the fn call, so use old/new-state\n  rather than derefing the reference. Keys must be unique per\n  reference, and can be used to remove the watch with remove-watch,\n  but are otherwise considered opaque by the watch mechanism.  Bear in\n  mind that regardless of the result or action of the watch fns the\n  atom's value will change.  Example:\n\n      (def a (atom 0))\n      (add-watch a :inc (fn [k r o n] (assert (== 0 n))))\n      (swap! a inc)\n      ;; Assertion Error\n      (deref a)\n      ;=> 1",(cljs.core.truth_(cljs.core.add_watch)?cljs.core.add_watch.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.add_watch;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23235 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23235,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23235;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.not_any_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_not_DASH_any_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$not_DASH_any_QMARK_,"cljs/core.cljs",15,1,4257,4257,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns false if (pred x) is logical true for any x in coll,\n  else true.",(cljs.core.truth_(cljs.core.not_any_QMARK_)?cljs.core.not_any_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.not_any_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23236 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23236,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23236;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.take_nth;},cljs.core.cst$sym$cljs$core_SLASH_take_DASH_nth,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$take_DASH_nth,"cljs/core.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9825,9825,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),"Returns a lazy seq of every nth item in coll.  Returns a stateful\n  transducer when no collection is provided.",(cljs.core.truth_(cljs.core.take_nth)?cljs.core.take_nth.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.take_nth;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23237 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23237,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23237;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.dorun;},cljs.core.cst$sym$cljs$core_SLASH_dorun,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$dorun,"cljs/core.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,9953,9953,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$coll], null)),"When lazy sequences are produced via functions that have side\n  effects, any effects other than those needed to produce the first\n  element in the seq do not occur until the seq is consumed. dorun can\n  be used to force any effects. Walks through the successive nexts of\n  the seq, does not retain the head and returns nil.",(cljs.core.truth_(cljs.core.dorun)?cljs.core.dorun.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.dorun;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23238 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23238,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23238;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.remove_all_methods;},cljs.core.cst$sym$cljs$core_SLASH_remove_DASH_all_DASH_methods,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$remove_DASH_all_DASH_methods,"cljs/core.cljs",25,1,11233,11233,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$multifn], null)),"Removes all of the methods of multimethod.",(cljs.core.truth_(cljs.core.remove_all_methods)?cljs.core.remove_all_methods.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.remove_all_methods;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23239 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23239,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23239;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.not_empty;},cljs.core.cst$sym$cljs$core_SLASH_not_DASH_empty,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$not_DASH_empty,"cljs/core.cljs",16,1,4012,4012,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"If coll is empty, returns nil, else coll",(cljs.core.truth_(cljs.core.not_empty)?cljs.core.not_empty.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.not_empty;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23240 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23240,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23240;
}
})(),false);
})(),cljs.core.with_meta(sci.impl.namespaces.sci_ns_aliases,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),cljs.core.with_meta(sci.impl.namespaces.sci_ns_resolve,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.vars.get_thread_binding_frame,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.chunk_rest;},cljs.core.cst$sym$cljs$core_SLASH_chunk_DASH_rest,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$chunk_DASH_rest,"cljs/core.cljs",17,1,3648,3648,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),null,(cljs.core.truth_(cljs.core.chunk_rest)?cljs.core.chunk_rest.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.chunk_rest;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23241 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23241,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23241;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.remove_watch;},cljs.core.cst$sym$cljs$core_SLASH_remove_DASH_watch,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$remove_DASH_watch,"cljs/core.cljs",19,1,10544,10544,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$iref,cljs.core.cst$sym$key], null)),"Removes a watch (set by add-watch) from a reference",(cljs.core.truth_(cljs.core.remove_watch)?cljs.core.remove_watch.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.remove_watch;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23242 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23242,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23242;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.int_array;},cljs.core.cst$sym$cljs$core_SLASH_int_DASH_array,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$int_DASH_array,"cljs/core.cljs",16,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,3679,3679,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size_DASH_or_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$size,cljs.core.cst$sym$init_DASH_val_DASH_or_DASH_seq], null)),"Creates an array of ints. Does not coerce array, provided for compatibility\n  with Clojure.",(cljs.core.truth_(cljs.core.int_array)?cljs.core.int_array.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.int_array;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23243 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23243,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23243;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.pos_int_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_pos_DASH_int_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$pos_DASH_int_QMARK_,"cljs/core.cljs",15,1,2291,2291,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Return true if x satisfies int? and is positive.",(cljs.core.truth_(cljs.core.pos_int_QMARK_)?cljs.core.pos_int_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.pos_int_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23244 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23244,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23244;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.ints;},cljs.core.cst$sym$cljs$core_SLASH_ints,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$ints,"cljs/core.cljs",11,1,2836,2836,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),null,(cljs.core.truth_(cljs.core.ints)?cljs.core.ints.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.ints;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23245 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23245,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23245;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.identical_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_identical_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$identical_QMARK_,"cljs/core.cljs",26,1,230,230,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)),"Tests if 2 arguments are the same object",((cljs.core.identical_QMARK_)?cljs.core.identical_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.identical_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23246 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23246,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23246;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.persistent_BANG_;},cljs.core.cst$sym$cljs$core_SLASH_persistent_BANG_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$persistent_BANG_,"cljs/core.cljs",18,1,3831,3831,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$tcoll], null)),"Returns a new, persistent version of the transient collection, in\n  constant time. The transient collection cannot be used after this\n  call, any such use will throw an exception.",(cljs.core.truth_(cljs.core.persistent_BANG_)?cljs.core.persistent_BANG_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.persistent_BANG_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23247 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23247,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23247;
}
})(),false);
})(),sci.impl.core_protocols.reset_protocol,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.indexed_QMARK_;},cljs.core.cst$sym$cljs$core_SLASH_indexed_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$indexed_QMARK_,"cljs/core.cljs",15,1,1538,1538,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$x], null)),"Returns true if coll implements nth in constant time",(cljs.core.truth_(cljs.core.indexed_QMARK_)?cljs.core.indexed_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.indexed_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23248 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23248,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23248;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.min_key;},cljs.core.cst$sym$cljs$core_SLASH_min_DASH_key,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$min_DASH_key,"cljs/core.cljs",14,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(3),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(3),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,9547,9547,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$k,cljs.core.cst$sym$x,cljs.core.cst$sym$y,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$more], null)),"Returns the x for which (k x), a number, is least.\n\n  If there are multiple such xs, the last one is returned.",(cljs.core.truth_(cljs.core.min_key)?cljs.core.min_key.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.min_key;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23249 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23249,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23249;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.repeatedly;},cljs.core.cst$sym$cljs$core_SLASH_repeatedly,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$repeatedly,"cljs/core.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$f], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$f], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,5029,5029,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$n,cljs.core.cst$sym$f], null)),"Takes a function of no args, presumably with side effects, and\n  returns an infinite (or length n if supplied) lazy sequence of calls\n  to it",(cljs.core.truth_(cljs.core.repeatedly)?cljs.core.repeatedly.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.repeatedly;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23250 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23250,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23250;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.set;},cljs.core.cst$sym$cljs$core_SLASH_set,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$set,"cljs/core.cljs",10,1,9429,9429,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null)),"Returns a set of the distinct elements of coll.",(cljs.core.truth_(cljs.core.set)?cljs.core.set.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.set;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23251 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23251,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23251;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.remove;},cljs.core.cst$sym$cljs$core_SLASH_remove,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$remove,"cljs/core.cljs",13,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,5193,5193,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$coll], null)),"Returns a lazy sequence of the items in coll for which\n  (pred item) returns logical false. pred must be free of side-effects.\n  Returns a transducer when no collection is provided.",(cljs.core.truth_(cljs.core.remove)?cljs.core.remove.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.remove;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23252 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23252,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23252;
}
})(),false);
})(),sci.impl.namespaces.macrofy(sci.impl.namespaces.while_STAR_),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_core_ns;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.core.re_find;},cljs.core.cst$sym$cljs$core_SLASH_re_DASH_find,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$core,cljs.core.cst$sym$re_DASH_find,"cljs/core.cljs",14,1,10000,10000,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$re,cljs.core.cst$sym$s], null)),"Returns the first regex match, if any, of s to re, using\n  re.exec(s). Returns a vector, containing first the matching\n  substring, then any capturing groups if the regular expression contains\n  capturing groups.",(cljs.core.truth_(cljs.core.re_find)?cljs.core.re_find.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.core.re_find;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23253 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23253,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23253;
}
})(),false);
})()]);
sci.impl.namespaces.dir_fn = (function sci$impl$namespaces$dir_fn(ctx,ns){
var current_ns = sci.impl.vars.current_ns_name();
var the_ns = sci.impl.namespaces.sci_the_ns(ctx,cljs.core.get.cljs$core$IFn$_invoke$arity$3(sci.impl.namespaces.sci_ns_aliases(ctx,current_ns),ns,ns));
return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,sci.impl.namespaces.sci_ns_publics(ctx,the_ns)));
});
sci.impl.namespaces.dir = (function sci$impl$namespaces$dir(_,___$1,nsname){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_doseq,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$v__23254__auto__,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$clojure$repl_SLASH_dir_DASH_fn,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$quote,null,(1),null)),(new cljs.core.List(null,nsname,null,(1),null))))),null,(1),null))))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_println,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$v__23254__auto__,null,(1),null))))),null,(1),null))], 0))));
});
sci.impl.namespaces.print_doc = (function sci$impl$namespaces$print_doc(m){
var arglists = cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m);
var doc = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m);
var macro_QMARK_ = cljs.core.cst$kw$macro.cljs$core$IFn$_invoke$arity$1(m);
sci.impl.io.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["-------------------------"], 0));

sci.impl.io.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(function (){var temp__5720__auto__ = cljs.core.cst$kw$ns.cljs$core$IFn$_invoke$arity$1(m);
if(cljs.core.truth_(temp__5720__auto__)){
var ns_STAR_ = temp__5720__auto__;
return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sci.impl.namespaces.sci_ns_name(ns_STAR_)),"/"].join('');
} else {
return null;
}
})(),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m))].join('')], 0));

if(cljs.core.truth_(arglists)){
sci.impl.io.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arglists], 0));
} else {
}

if(cljs.core.truth_(macro_QMARK_)){
sci.impl.io.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["Macro"], 0));
} else {
}

if(cljs.core.truth_(doc)){
return sci.impl.io.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([" ",doc], 0));
} else {
return null;
}
});
sci.impl.namespaces.doc = (function sci$impl$namespaces$doc(_,___$1,sym){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_if_DASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$var__23255__auto__,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_resolve,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$quote,null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_when,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_var_QMARK_,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$var__23255__auto__,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$clojure$repl_SLASH_print_DASH_doc,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_meta,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$var__23255__auto__,null,(1),null))))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_if_DASH_let,null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$ns__23256__auto__,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_find_DASH_ns,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$quote,null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$clojure$repl_SLASH_print_DASH_doc,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_assoc,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_meta,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$ns__23256__auto__,null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.cst$kw$name,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_ns_DASH_name,null,(1),null)),(new cljs.core.List(null,cljs.core.cst$sym$ns__23256__auto__,null,(1),null))))),null,(1),null))], 0)))),null,(1),null))))),null,(1),null))], 0)))),null,(1),null))], 0))));
});
/**
 * Prints documentation for any var whose documentation or name
 *   contains a match for re-string-or-pattern
 */
sci.impl.namespaces.find_doc = (function sci$impl$namespaces$find_doc(ctx,re_string_or_pattern){
var re = cljs.core.re_pattern(re_string_or_pattern);
var ms = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__23257_SHARP_){
return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$name,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta,cljs.core.vals(sci.impl.namespaces.sci_ns_interns(ctx,p1__23257_SHARP_))));
}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sci.impl.namespaces.sci_all_ns(ctx)], 0)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23258_SHARP_){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.meta(p1__23258_SHARP_),cljs.core.cst$kw$name,sci.impl.namespaces.sci_ns_name(p1__23258_SHARP_));
}),sci.impl.namespaces.sci_all_ns(ctx)));
var seq__23259 = cljs.core.seq(ms);
var chunk__23261 = null;
var count__23262 = (0);
var i__23263 = (0);
while(true){
if((i__23263 < count__23262)){
var m = chunk__23261.cljs$core$IIndexed$_nth$arity$2(null,i__23263);
if(cljs.core.truth_((function (){var and__4115__auto__ = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m);
if(cljs.core.truth_(and__4115__auto__)){
var or__4126__auto__ = cljs.core.re_find(re,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m));
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return cljs.core.re_find(re,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m)));
}
} else {
return and__4115__auto__;
}
})())){
sci.impl.namespaces.print_doc(m);


var G__23265 = seq__23259;
var G__23266 = chunk__23261;
var G__23267 = count__23262;
var G__23268 = (i__23263 + (1));
seq__23259 = G__23265;
chunk__23261 = G__23266;
count__23262 = G__23267;
i__23263 = G__23268;
continue;
} else {
var G__23269 = seq__23259;
var G__23270 = chunk__23261;
var G__23271 = count__23262;
var G__23272 = (i__23263 + (1));
seq__23259 = G__23269;
chunk__23261 = G__23270;
count__23262 = G__23271;
i__23263 = G__23272;
continue;
}
} else {
var temp__5720__auto__ = cljs.core.seq(seq__23259);
if(temp__5720__auto__){
var seq__23259__$1 = temp__5720__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23259__$1)){
var c__4556__auto__ = cljs.core.chunk_first(seq__23259__$1);
var G__23273 = cljs.core.chunk_rest(seq__23259__$1);
var G__23274 = c__4556__auto__;
var G__23275 = cljs.core.count(c__4556__auto__);
var G__23276 = (0);
seq__23259 = G__23273;
chunk__23261 = G__23274;
count__23262 = G__23275;
i__23263 = G__23276;
continue;
} else {
var m = cljs.core.first(seq__23259__$1);
if(cljs.core.truth_((function (){var and__4115__auto__ = cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m);
if(cljs.core.truth_(and__4115__auto__)){
var or__4126__auto__ = cljs.core.re_find(re,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m));
if(cljs.core.truth_(or__4126__auto__)){
return or__4126__auto__;
} else {
return cljs.core.re_find(re,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m)));
}
} else {
return and__4115__auto__;
}
})())){
sci.impl.namespaces.print_doc(m);


var G__23277 = cljs.core.next(seq__23259__$1);
var G__23278 = null;
var G__23279 = (0);
var G__23280 = (0);
seq__23259 = G__23277;
chunk__23261 = G__23278;
count__23262 = G__23279;
i__23263 = G__23280;
continue;
} else {
var G__23281 = cljs.core.next(seq__23259__$1);
var G__23282 = null;
var G__23283 = (0);
var G__23284 = (0);
seq__23259 = G__23281;
chunk__23261 = G__23282;
count__23262 = G__23283;
i__23263 = G__23284;
continue;
}
}
} else {
return null;
}
}
break;
}
});
/**
 * Given a regular expression or stringable thing, return a seq of all
 *   public definitions in all currently-loaded namespaces that match the
 *   str-or-pattern.
 */
sci.impl.namespaces.apropos = (function sci$impl$namespaces$apropos(ctx,str_or_pattern){
var matches_QMARK_ = (((str_or_pattern instanceof RegExp))?(function (p1__23285_SHARP_){
return cljs.core.re_find(str_or_pattern,cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__23285_SHARP_));
}):(function (p1__23286_SHARP_){
return clojure.string.includes_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__23286_SHARP_),cljs.core.str.cljs$core$IFn$_invoke$arity$1(str_or_pattern));
}));
return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (ns){
var ns_name = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__23287_SHARP_){
return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(ns_name,cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__23287_SHARP_));
}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(matches_QMARK_,cljs.core.keys(sci.impl.namespaces.sci_ns_publics(ctx,ns))));
}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sci.impl.namespaces.sci_all_ns(ctx)], 0)));
});
/**
 * Returns a string of the source code for the given symbol, if it can
 *   find it.  This requires that the symbol resolve to a Var defined in
 *   a namespace for which the .clj is in the classpath.  Returns nil if
 *   it can't find the source.  For most REPL usage, 'source' is more
 *   convenient.
 * 
 *   Example: (source-fn 'filter)
 */
sci.impl.namespaces.source_fn = (function sci$impl$namespaces$source_fn(ctx,x){
var temp__5720__auto__ = sci.impl.namespaces.sci_resolve.cljs$core$IFn$_invoke$arity$2(ctx,x);
if(cljs.core.truth_(temp__5720__auto__)){
var v = temp__5720__auto__;
var map__23288 = cljs.core.meta(v);
var map__23288__$1 = (((((!((map__23288 == null))))?(((((map__23288.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__23288.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23288):map__23288);
var line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23288__$1,cljs.core.cst$kw$line);
var ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23288__$1,cljs.core.cst$kw$ns);
if(cljs.core.truth_((function (){var and__4115__auto__ = line;
if(cljs.core.truth_(and__4115__auto__)){
return ns;
} else {
return and__4115__auto__;
}
})())){
var temp__5720__auto____$1 = (function (){var temp__5720__auto____$1 = cljs.core.cst$kw$load_DASH_fn.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.cst$kw$env.cljs$core$IFn$_invoke$arity$1(ctx)));
if(cljs.core.truth_(temp__5720__auto____$1)){
var load_fn = temp__5720__auto____$1;
return cljs.core.cst$kw$source.cljs$core$IFn$_invoke$arity$1((function (){var G__23290 = new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$namespace,sci.impl.namespaces.sci_ns_name(ns)], null);
return (load_fn.cljs$core$IFn$_invoke$arity$1 ? load_fn.cljs$core$IFn$_invoke$arity$1(G__23290) : load_fn.call(null,G__23290));
})());
} else {
return null;
}
})();
if(cljs.core.truth_(temp__5720__auto____$1)){
var source = temp__5720__auto____$1;
var lines = clojure.string.split.cljs$core$IFn$_invoke$arity$2(source,/\n/);
var line__$1 = (line - (1));
var start = clojure.string.join.cljs$core$IFn$_invoke$arity$2("\n",cljs.core.drop.cljs$core$IFn$_invoke$arity$2(line__$1,lines));
var reader = sci.impl.read.source_logging_reader(start);
var res = sci.impl.parser.parse_next.cljs$core$IFn$_invoke$arity$3(ctx,reader,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$source,true], null));
return cljs.core.cst$kw$source.cljs$core$IFn$_invoke$arity$1(cljs.core.meta(res));
} else {
return null;
}
} else {
return null;
}
} else {
return null;
}
});
/**
 * Prints the source code for the given symbol, if it can find it.
 *   This requires that the symbol resolve to a Var defined in a
 *   namespace for which the .clj is in the classpath.
 * 
 *   Example: (source filter)
 */
sci.impl.namespaces.source = (function sci$impl$namespaces$source(_,___$1,n){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_println,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_or,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$clojure$repl_SLASH_source_DASH_fn,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$quote,null,(1),null)),(new cljs.core.List(null,n,null,(1),null))))),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$cljs$core_SLASH_str,null,(1),null)),(new cljs.core.List(null,"Source not found",null,(1),null))))),null,(1),null))], 0)))),null,(1),null)))));
});
sci.impl.namespaces.clojure_repl = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$sym$find_DASH_doc,cljs.core.cst$sym$dir,cljs.core.cst$sym$dir_DASH_fn,cljs.core.cst$sym$source_DASH_fn,cljs.core.cst$sym$source,cljs.core.cst$sym$doc,cljs.core.cst$sym$print_DASH_doc,cljs.core.cst$sym$apropos,cljs.core.cst$kw$obj],[cljs.core.with_meta(sci.impl.namespaces.find_doc,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.namespaces.macrofy(sci.impl.namespaces.dir),cljs.core.with_meta(sci.impl.namespaces.dir_fn,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),cljs.core.with_meta(sci.impl.namespaces.source_fn,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.namespaces.macrofy(sci.impl.namespaces.source),sci.impl.namespaces.macrofy(sci.impl.namespaces.doc),cljs.core.with_meta(sci.impl.namespaces.print_doc,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$private,true], null)),cljs.core.with_meta(sci.impl.namespaces.apropos,new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx], null)),sci.impl.vars.__GT_SciNamespace(cljs.core.cst$sym$clojure$repl,null)]);
sci.impl.namespaces.apply_template = (function sci$impl$namespaces$apply_template(argv,expr,values){
if(cljs.core.vector_QMARK_(argv)){
} else {
throw (new Error("Assert failed: (vector? argv)"));
}

if(cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,argv)){
} else {
throw (new Error("Assert failed: (every? symbol? argv)"));
}

return clojure.walk.postwalk_replace(cljs.core.zipmap(argv,values),expr);
});
sci.impl.namespaces.do_template = (function sci$impl$namespaces$do_template(var_args){
var args__4742__auto__ = [];
var len__4736__auto___23297 = arguments.length;
var i__4737__auto___23298 = (0);
while(true){
if((i__4737__auto___23298 < len__4736__auto___23297)){
args__4742__auto__.push((arguments[i__4737__auto___23298]));

var G__23299 = (i__4737__auto___23298 + (1));
i__4737__auto___23298 = G__23299;
continue;
} else {
}
break;
}

var argseq__4743__auto__ = ((((4) < args__4742__auto__.length))?(new cljs.core.IndexedSeq(args__4742__auto__.slice((4)),(0),null)):null);
return sci.impl.namespaces.do_template.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__4743__auto__);
});

(sci.impl.namespaces.do_template.cljs$core$IFn$_invoke$arity$variadic = (function (_,___$1,argv,expr,values){
var c = cljs.core.count(argv);
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.cst$sym$do,null,(1),null)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (a){
return sci.impl.namespaces.apply_template(argv,expr,a);
}),cljs.core.partition.cljs$core$IFn$_invoke$arity$2(c,values)))));
}));

(sci.impl.namespaces.do_template.cljs$lang$maxFixedArity = (4));

/** @this {Function} */
(sci.impl.namespaces.do_template.cljs$lang$applyTo = (function (seq23292){
var G__23293 = cljs.core.first(seq23292);
var seq23292__$1 = cljs.core.next(seq23292);
var G__23294 = cljs.core.first(seq23292__$1);
var seq23292__$2 = cljs.core.next(seq23292__$1);
var G__23295 = cljs.core.first(seq23292__$2);
var seq23292__$3 = cljs.core.next(seq23292__$2);
var G__23296 = cljs.core.first(seq23292__$3);
var seq23292__$4 = cljs.core.next(seq23292__$3);
var self__4723__auto__ = this;
return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23293,G__23294,G__23295,G__23296,seq23292__$4);
}));

sci.impl.namespaces.clojure_template = new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$obj,sci.impl.vars.__GT_SciNamespace(cljs.core.cst$sym$clojure$template,null),cljs.core.cst$sym$apply_DASH_template,sci.impl.namespaces.apply_template,cljs.core.cst$sym$do_DASH_template,sci.impl.namespaces.macrofy(sci.impl.namespaces.do_template)], null);
sci.impl.namespaces.clojure_string_namespace = sci.impl.vars.__GT_SciNamespace(cljs.core.cst$sym$clojure$string,null);
sci.impl.namespaces.clojure_set_namespace = sci.impl.vars.__GT_SciNamespace(cljs.core.cst$sym$clojure$set,null);
sci.impl.namespaces.clojure_walk_namespace = sci.impl.vars.__GT_SciNamespace(cljs.core.cst$sym$clojure$walk,null);
sci.impl.namespaces.clojure_edn_namespace = sci.impl.vars.__GT_SciNamespace(cljs.core.cst$sym$clojure$edn,null);
sci.impl.namespaces.macroexpand_all = sci.impl.vars.__GT_SciVar((function (ctx,form){
return clojure.walk.prewalk((function (x){
if(cljs.core.seq_QMARK_(x)){
var fexpr__23300 = cljs.core.deref(sci.impl.utils.macroexpand_STAR_);
return (fexpr__23300.cljs$core$IFn$_invoke$arity$2 ? fexpr__23300.cljs$core$IFn$_invoke$arity$2(ctx,x) : fexpr__23300.call(null,ctx,x));
} else {
return x;
}
}),form);
}),cljs.core.cst$sym$macroexpand_DASH_all,new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$ns,sci.impl.namespaces.clojure_walk_namespace,cljs.core.cst$kw$name,cljs.core.cst$sym$macroexpand_DASH_all,cljs.core.cst$kw$sci$impl_SLASH_op,sci.impl.utils.needs_ctx,cljs.core.cst$kw$doc,"Recursively performs all possible macroexpansions in form."], null),false);
sci.impl.namespaces.clojure_walk_ns = cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$sym$keywordize_DASH_keys,cljs.core.cst$sym$postwalk,cljs.core.cst$sym$postwalk_DASH_replace,cljs.core.cst$sym$walk,cljs.core.cst$sym$prewalk,cljs.core.cst$sym$prewalk_DASH_replace,cljs.core.cst$kw$obj,cljs.core.cst$sym$stringify_DASH_keys,cljs.core.cst$sym$macroexpand_DASH_all],[(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_walk_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.walk.keywordize_keys;},cljs.core.cst$sym$clojure$walk_SLASH_keywordize_DASH_keys,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.1",cljs.core.cst$sym$clojure$walk,cljs.core.cst$sym$keywordize_DASH_keys,"resources/public/cljs-out/dev/clojure/walk.cljs",22,1,68,68,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m], null)),"Recursively transforms all map keys from strings to keywords.",(cljs.core.truth_(clojure.walk.keywordize_keys)?clojure.walk.keywordize_keys.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.walk.keywordize_keys;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23301 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23301,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23301;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_walk_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.walk.postwalk;},cljs.core.cst$sym$clojure$walk_SLASH_postwalk,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.1",cljs.core.cst$sym$clojure$walk,cljs.core.cst$sym$postwalk,"resources/public/cljs-out/dev/clojure/walk.cljs",15,1,54,54,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$form], null)),"Performs a depth-first, post-order traversal of form.  Calls f on\n  each sub-form, uses f's return value in place of the original.\n  Recognizes all Clojure data structures. Consumes seqs as with doall.",(cljs.core.truth_(clojure.walk.postwalk)?clojure.walk.postwalk.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.walk.postwalk;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23302 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23302,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23302;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_walk_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.walk.postwalk_replace;},cljs.core.cst$sym$clojure$walk_SLASH_postwalk_DASH_replace,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.1",cljs.core.cst$sym$clojure$walk,cljs.core.cst$sym$postwalk_DASH_replace,"resources/public/cljs-out/dev/clojure/walk.cljs",23,1,92,92,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$smap,cljs.core.cst$sym$form], null)),"Recursively transforms form by replacing keys in smap with their\n  values.  Like clojure/replace but works on any data structure.  Does\n  replacement at the leaves of the tree first.",(cljs.core.truth_(clojure.walk.postwalk_replace)?clojure.walk.postwalk_replace.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.walk.postwalk_replace;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23303 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23303,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23303;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_walk_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.walk.walk;},cljs.core.cst$sym$clojure$walk_SLASH_walk,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.1",cljs.core.cst$sym$clojure$walk,cljs.core.cst$sym$walk,"resources/public/cljs-out/dev/clojure/walk.cljs",11,1,37,37,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$inner,cljs.core.cst$sym$outer,cljs.core.cst$sym$form], null)),"Traverses form, an arbitrary data structure.  inner and outer are\n  functions.  Applies inner to each element of form, building up a\n  data structure of the same type, then applies outer to the result.\n  Recognizes all Clojure data structures. Consumes seqs as with doall.",(cljs.core.truth_(clojure.walk.walk)?clojure.walk.walk.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.walk.walk;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23304 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23304,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23304;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_walk_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.walk.prewalk;},cljs.core.cst$sym$clojure$walk_SLASH_prewalk,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.1",cljs.core.cst$sym$clojure$walk,cljs.core.cst$sym$prewalk,"resources/public/cljs-out/dev/clojure/walk.cljs",14,1,62,62,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$f,cljs.core.cst$sym$form], null)),"Like postwalk, but does pre-order traversal.",(cljs.core.truth_(clojure.walk.prewalk)?clojure.walk.prewalk.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.walk.prewalk;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23305 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23305,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23305;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_walk_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.walk.prewalk_replace;},cljs.core.cst$sym$clojure$walk_SLASH_prewalk_DASH_replace,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.1",cljs.core.cst$sym$clojure$walk,cljs.core.cst$sym$prewalk_DASH_replace,"resources/public/cljs-out/dev/clojure/walk.cljs",22,1,84,84,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$smap,cljs.core.cst$sym$form], null)),"Recursively transforms form by replacing keys in smap with their\n  values.  Like clojure/replace but works on any data structure.  Does\n  replacement at the root of the tree first.",(cljs.core.truth_(clojure.walk.prewalk_replace)?clojure.walk.prewalk_replace.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.walk.prewalk_replace;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23306 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23306,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23306;
}
})(),false);
})(),sci.impl.namespaces.clojure_walk_namespace,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_walk_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.walk.stringify_keys;},cljs.core.cst$sym$clojure$walk_SLASH_stringify_DASH_keys,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$added,cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],["1.1",cljs.core.cst$sym$clojure$walk,cljs.core.cst$sym$stringify_DASH_keys,"resources/public/cljs-out/dev/clojure/walk.cljs",21,1,76,76,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m], null)),"Recursively transforms all map keys from keywords to strings.",(cljs.core.truth_(clojure.walk.stringify_keys)?clojure.walk.stringify_keys.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.walk.stringify_keys;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23307 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23307,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23307;
}
})(),false);
})(),sci.impl.namespaces.macroexpand_all]);
sci.impl.namespaces.namespaces = new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$sym$clojure$core,sci.impl.namespaces.clojure_core,cljs.core.cst$sym$clojure$string,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$sym$split,cljs.core.cst$sym$index_DASH_of,cljs.core.cst$sym$trimr,cljs.core.cst$sym$upper_DASH_case,cljs.core.cst$sym$lower_DASH_case,cljs.core.cst$sym$reverse,cljs.core.cst$sym$ends_DASH_with_QMARK_,cljs.core.cst$sym$split_DASH_lines,cljs.core.cst$sym$last_DASH_index_DASH_of,cljs.core.cst$sym$trim_DASH_newline,cljs.core.cst$sym$blank_QMARK_,cljs.core.cst$sym$replace,cljs.core.cst$sym$join,cljs.core.cst$sym$trim,cljs.core.cst$sym$starts_DASH_with_QMARK_,cljs.core.cst$sym$triml,cljs.core.cst$sym$escape,cljs.core.cst$kw$obj,cljs.core.cst$sym$includes_QMARK_,cljs.core.cst$sym$capitalize,cljs.core.cst$sym$replace_DASH_first],[(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.split;},cljs.core.cst$sym$clojure$string_SLASH_split,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$split,"resources/public/cljs-out/dev/clojure/string.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$re], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$re,cljs.core.cst$sym$limit], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$re], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$re,cljs.core.cst$sym$limit], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,167,167,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$re], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$re,cljs.core.cst$sym$limit], null)),"Splits string on a regular expression. Optional argument limit is\n  the maximum number of splits. Not lazy. Returns vector of the splits.",(cljs.core.truth_(clojure.string.split)?clojure.string.split.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.split;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23308 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23308,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23308;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.index_of;},cljs.core.cst$sym$clojure$string_SLASH_index_DASH_of,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$index_DASH_of,"resources/public/cljs-out/dev/clojure/string.cljs",15,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value,cljs.core.cst$sym$from_DASH_index], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value,cljs.core.cst$sym$from_DASH_index], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,248,248,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value,cljs.core.cst$sym$from_DASH_index], null)),"Return index of value (string or char) in s, optionally searching\n  forward from from-index or nil if not found.",(cljs.core.truth_(clojure.string.index_of)?clojure.string.index_of.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.index_of;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23309 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23309,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23309;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.trimr;},cljs.core.cst$sym$clojure$string_SLASH_trimr,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$trimr,"resources/public/cljs-out/dev/clojure/string.cljs",20,1,206,206,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Removes whitespace from the right side of string.",(cljs.core.truth_(clojure.string.trimr)?clojure.string.trimr.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.trimr;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23310 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23310,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23310;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.upper_case;},cljs.core.cst$sym$clojure$string_SLASH_upper_DASH_case,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$upper_DASH_case,"resources/public/cljs-out/dev/clojure/string.cljs",25,1,119,119,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Converts string to all upper-case.",(cljs.core.truth_(clojure.string.upper_case)?clojure.string.upper_case.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.upper_case;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23311 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23311,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23311;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.lower_case;},cljs.core.cst$sym$clojure$string_SLASH_lower_DASH_case,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$lower_DASH_case,"resources/public/cljs-out/dev/clojure/string.cljs",25,1,124,124,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Converts string to all lower-case.",(cljs.core.truth_(clojure.string.lower_case)?clojure.string.lower_case.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.lower_case;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23312 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23312,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23312;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.reverse;},cljs.core.cst$sym$clojure$string_SLASH_reverse,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$reverse,"resources/public/cljs-out/dev/clojure/string.cljs",22,1,21,21,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Returns s with its characters reversed.",(cljs.core.truth_(clojure.string.reverse)?clojure.string.reverse.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.reverse;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23313 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23313,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23313;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.ends_with_QMARK_;},cljs.core.cst$sym$clojure$string_SLASH_ends_DASH_with_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$ends_DASH_with_QMARK_,"resources/public/cljs-out/dev/clojure/string.cljs",26,1,281,281,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$substr], null)),"True if s ends with substr.",((clojure.string.ends_with_QMARK_)?clojure.string.ends_with_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.ends_with_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23314 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23314,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23314;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.split_lines;},cljs.core.cst$sym$clojure$string_SLASH_split_DASH_lines,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$split_DASH_lines,"resources/public/cljs-out/dev/clojure/string.cljs",18,1,191,191,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Splits s on \\n or \\r\\n.",(cljs.core.truth_(clojure.string.split_lines)?clojure.string.split_lines.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.split_lines;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23315 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23315,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23315;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.last_index_of;},cljs.core.cst$sym$clojure$string_SLASH_last_DASH_index_DASH_of,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$last_DASH_index_DASH_of,"resources/public/cljs-out/dev/clojure/string.cljs",20,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value,cljs.core.cst$sym$from_DASH_index], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value,cljs.core.cst$sym$from_DASH_index], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,262,262,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$value,cljs.core.cst$sym$from_DASH_index], null)),"Return last index of value (string or char) in s, optionally\n  searching backward from from-index or nil if not found.",(cljs.core.truth_(clojure.string.last_index_of)?clojure.string.last_index_of.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.last_index_of;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23316 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23316,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23316;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.trim_newline;},cljs.core.cst$sym$clojure$string_SLASH_trim_DASH_newline,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$trim_DASH_newline,"resources/public/cljs-out/dev/clojure/string.cljs",27,1,211,211,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Removes all trailing newline \\n or return \\r characters from\n  string.  Similar to Perl's chomp.",(cljs.core.truth_(clojure.string.trim_newline)?clojure.string.trim_newline.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.trim_newline;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23317 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23317,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23317;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.blank_QMARK_;},cljs.core.cst$sym$clojure$string_SLASH_blank_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$blank_QMARK_,"resources/public/cljs-out/dev/clojure/string.cljs",22,1,224,224,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"True is s is nil, empty, or contains only whitespace.",((clojure.string.blank_QMARK_)?clojure.string.blank_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.blank_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23318 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23318,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23318;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.replace;},cljs.core.cst$sym$clojure$string_SLASH_replace,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$replace,"resources/public/cljs-out/dev/clojure/string.cljs",22,1,44,44,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$match,cljs.core.cst$sym$replacement], null)),"Replaces all instance of match with replacement in s.\n\n   match/replacement can be:\n\n   string / string\n   pattern / (string or function of match).\n\n   See also replace-first.\n\n   The replacement is literal (i.e. none of its characters are treated\n   specially) for all cases above except pattern / string.\n\n   For pattern / string, $1, $2, etc. in the replacement string are\n   substituted with the string that matched the corresponding\n   parenthesized group in the pattern.\n\n   Example:\n   (clojure.string/replace \"Almost Pig Latin\" #\"\\b(\\w)(\\w+)\\b\" \"$2$1ay\")\n   -> \"lmostAay igPay atinLay\"",(cljs.core.truth_(clojure.string.replace)?clojure.string.replace.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.replace;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23319 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23319,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23319;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.join;},cljs.core.cst$sym$clojure$string_SLASH_join,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$join,"resources/public/cljs-out/dev/clojure/string.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$separator,cljs.core.cst$sym$coll], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$separator,cljs.core.cst$sym$coll], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,100,100,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$coll], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$separator,cljs.core.cst$sym$coll], null)),"Returns a string of all elements in coll, as returned by (seq coll),\n  separated by an optional separator.",(cljs.core.truth_(clojure.string.join)?clojure.string.join.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.join;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23320 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23320,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23320;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.trim;},cljs.core.cst$sym$clojure$string_SLASH_trim,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$trim,"resources/public/cljs-out/dev/clojure/string.cljs",19,1,196,196,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Removes whitespace from both ends of string.",(cljs.core.truth_(clojure.string.trim)?clojure.string.trim.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.trim;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23321 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23321,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23321;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.starts_with_QMARK_;},cljs.core.cst$sym$clojure$string_SLASH_starts_DASH_with_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$starts_DASH_with_QMARK_,"resources/public/cljs-out/dev/clojure/string.cljs",28,1,276,276,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$substr], null)),"True if s starts with substr.",((clojure.string.starts_with_QMARK_)?clojure.string.starts_with_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.starts_with_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23322 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23322,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23322;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.triml;},cljs.core.cst$sym$clojure$string_SLASH_triml,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$triml,"resources/public/cljs-out/dev/clojure/string.cljs",20,1,201,201,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Removes whitespace from the left side of string.",(cljs.core.truth_(clojure.string.triml)?clojure.string.triml.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.triml;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23323 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23323,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23323;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.escape;},cljs.core.cst$sym$clojure$string_SLASH_escape,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$escape,"resources/public/cljs-out/dev/clojure/string.cljs",21,1,229,229,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$cmap], null)),"Return a new string, using cmap to escape each character ch\n   from s as follows:\n\n   If (cmap ch) is nil, append ch to the new string.\n   If (cmap ch) is non-nil, append (str (cmap ch)) instead.",(cljs.core.truth_(clojure.string.escape)?clojure.string.escape.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.escape;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23324 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23324,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23324;
}
})(),false);
})(),sci.impl.namespaces.clojure_string_namespace,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.includes_QMARK_;},cljs.core.cst$sym$clojure$string_SLASH_includes_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$includes_QMARK_,"resources/public/cljs-out/dev/clojure/string.cljs",25,1,286,286,cljs.core.cst$sym$boolean,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$substr], null)),"True if s includes substr.",((clojure.string.includes_QMARK_)?clojure.string.includes_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.includes_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23325 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23325,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23325;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.capitalize;},cljs.core.cst$sym$clojure$string_SLASH_capitalize,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$capitalize,"resources/public/cljs-out/dev/clojure/string.cljs",25,1,129,129,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null)),"Converts first character of the string to upper-case, all other\n  characters to lower-case.",(cljs.core.truth_(clojure.string.capitalize)?clojure.string.capitalize.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.capitalize;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23326 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23326,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23326;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_string_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.string.replace_first;},cljs.core.cst$sym$clojure$string_SLASH_replace_DASH_first,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$tag,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$replace_DASH_first,"resources/public/cljs-out/dev/clojure/string.cljs",28,1,76,76,cljs.core.cst$sym$string,cljs.core.list(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s,cljs.core.cst$sym$match,cljs.core.cst$sym$replacement], null)),"Replaces the first instance of match with replacement in s.\n\n   match/replacement can be:\n\n   string / string\n   pattern / (string or function of match).\n\n   See also replace.\n\n   The replacement is literal (i.e. none of its characters are treated\n   specially) for all cases above except pattern / string.\n\n   For pattern / string, $1, $2, etc. in the replacement string are\n   substituted with the string that matched the corresponding\n   parenthesized group in the pattern.\n\n   Example:\n   (clojure.string/replace-first \"swap first two words\"\n                                 #\"(\\w+)(\\s+)(\\w+)\" \"$3$2$1\")\n   -> \"first swap two words\"",(cljs.core.truth_(clojure.string.replace_first)?clojure.string.replace_first.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.string.replace_first;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23327 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23327,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23327;
}
})(),false);
})()]),cljs.core.cst$sym$clojure$set,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$sym$project,cljs.core.cst$sym$map_DASH_invert,cljs.core.cst$sym$select,cljs.core.cst$sym$superset_QMARK_,cljs.core.cst$sym$join,cljs.core.cst$sym$union,cljs.core.cst$sym$rename,cljs.core.cst$sym$subset_QMARK_,cljs.core.cst$sym$difference,cljs.core.cst$kw$obj,cljs.core.cst$sym$intersection,cljs.core.cst$sym$index,cljs.core.cst$sym$rename_DASH_keys],[(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.project;},cljs.core.cst$sym$clojure$set_SLASH_project,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$project,"resources/public/cljs-out/dev/clojure/set.cljs",14,1,67,67,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$ks], null)),"Returns a rel of the elements of xrel with only the keys in ks",(cljs.core.truth_(clojure.set.project)?clojure.set.project.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.project;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23328 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23328,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23328;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.map_invert;},cljs.core.cst$sym$clojure$set_SLASH_map_DASH_invert,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$map_DASH_invert,"resources/public/cljs-out/dev/clojure/set.cljs",17,1,97,97,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$m], null)),"Returns the map with the vals mapped to the keys.",(cljs.core.truth_(clojure.set.map_invert)?clojure.set.map_invert.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.map_invert;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23329 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23329,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23329;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.select;},cljs.core.cst$sym$clojure$set_SLASH_select,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$select,"resources/public/cljs-out/dev/clojure/set.cljs",13,1,61,61,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$pred,cljs.core.cst$sym$xset], null)),"Returns a set of the elements for which pred is true",(cljs.core.truth_(clojure.set.select)?clojure.set.select.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.select;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23330 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23330,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23330;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.superset_QMARK_;},cljs.core.cst$sym$clojure$set_SLASH_superset_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$superset_QMARK_,"resources/public/cljs-out/dev/clojure/set.cljs",16,1,137,137,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$set1,cljs.core.cst$sym$set2], null)),"Is set1 a superset of set2?",(cljs.core.truth_(clojure.set.superset_QMARK_)?clojure.set.superset_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.superset_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23331 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23331,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23331;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.join;},cljs.core.cst$sym$clojure$set_SLASH_join,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$join,"resources/public/cljs-out/dev/clojure/set.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,3,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,3,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$yrel], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$yrel,cljs.core.cst$sym$km], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$yrel], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$yrel,cljs.core.cst$sym$km], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,101,101,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$yrel], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$yrel,cljs.core.cst$sym$km], null)),"When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys.",(cljs.core.truth_(clojure.set.join)?clojure.set.join.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.join;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23332 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23332,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23332;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.union;},cljs.core.cst$sym$clojure$set_SLASH_union,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$union,"resources/public/cljs-out/dev/clojure/set.cljs",12,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$sets], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null,null)], null),1,19,19,cljs.core.list(cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$sets], null)),"Return a set that is the union of the input sets",(cljs.core.truth_(clojure.set.union)?clojure.set.union.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.union;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23333 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23333,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23333;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.rename;},cljs.core.cst$sym$clojure$set_SLASH_rename,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$rename,"resources/public/cljs-out/dev/clojure/set.cljs",13,1,82,82,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$kmap], null)),"Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap",(cljs.core.truth_(clojure.set.rename)?clojure.set.rename.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.rename;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23334 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23334,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23334;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.subset_QMARK_;},cljs.core.cst$sym$clojure$set_SLASH_subset_QMARK_,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$subset_QMARK_,"resources/public/cljs-out/dev/clojure/set.cljs",14,1,131,131,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$set1,cljs.core.cst$sym$set2], null)),"Is set1 a subset of set2?",(cljs.core.truth_(clojure.set.subset_QMARK_)?clojure.set.subset_QMARK_.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.subset_QMARK_;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23335 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23335,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23335;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.difference;},cljs.core.cst$sym$clojure$set_SLASH_difference,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$difference,"resources/public/cljs-out/dev/clojure/set.cljs",17,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$sets], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,46,46,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$sets], null)),"Return a set that is the first set without elements of the remaining sets",(cljs.core.truth_(clojure.set.difference)?clojure.set.difference.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.difference;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23336 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23336,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23336;
}
})(),false);
})(),sci.impl.namespaces.clojure_set_namespace,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.intersection;},cljs.core.cst$sym$clojure$set_SLASH_intersection,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$intersection,"resources/public/cljs-out/dev/clojure/set.cljs",19,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,true,cljs.core.cst$kw$fixed_DASH_arity,(2),cljs.core.cst$kw$max_DASH_fixed_DASH_arity,(2),cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$sets], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,31,31,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s1,cljs.core.cst$sym$s2,cljs.core.cst$sym$_AMPERSAND_,cljs.core.cst$sym$sets], null)),"Return a set that is the intersection of the input sets",(cljs.core.truth_(clojure.set.intersection)?clojure.set.intersection.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.intersection;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23337 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23337,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23337;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.index;},cljs.core.cst$sym$clojure$set_SLASH_index,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$index,"resources/public/cljs-out/dev/clojure/set.cljs",12,1,87,87,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$xrel,cljs.core.cst$sym$ks], null)),"Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks.",(cljs.core.truth_(clojure.set.index)?clojure.set.index.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.index;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23338 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23338,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23338;
}
})(),false);
})(),(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_set_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return clojure.set.rename_keys;},cljs.core.cst$sym$clojure$set_SLASH_rename_DASH_keys,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$clojure$set,cljs.core.cst$sym$rename_DASH_keys,"resources/public/cljs-out/dev/clojure/set.cljs",18,1,72,72,cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$map,cljs.core.cst$sym$kmap], null)),"Returns the map with the keys in kmap renamed to the vals in kmap",(cljs.core.truth_(clojure.set.rename_keys)?clojure.set.rename_keys.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = clojure.set.rename_keys;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23339 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23339,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23339;
}
})(),false);
})()]),cljs.core.cst$sym$clojure$walk,sci.impl.namespaces.clojure_walk_ns,cljs.core.cst$sym$clojure$template,sci.impl.namespaces.clojure_template,cljs.core.cst$sym$clojure$repl,sci.impl.namespaces.clojure_repl,cljs.core.cst$sym$clojure$edn,new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$obj,sci.impl.namespaces.clojure_edn_namespace,cljs.core.cst$sym$read,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_edn_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.reader.read;},cljs.core.cst$sym$cljs$reader_SLASH_read,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$reader,cljs.core.cst$sym$read,"resources/public/cljs-out/dev/cljs/reader.cljs",11,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,4,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,4,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$reader], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$keys,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$eof], null),cljs.core.cst$kw$as,cljs.core.cst$sym$opts], null),cljs.core.cst$sym$reader], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$reader,cljs.core.cst$sym$eof_DASH_error_QMARK_,cljs.core.cst$sym$eof,cljs.core.cst$sym$opts], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$reader], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$keys,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$eof], null),cljs.core.cst$kw$as,cljs.core.cst$sym$opts], null),cljs.core.cst$sym$reader], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$reader,cljs.core.cst$sym$eof_DASH_error_QMARK_,cljs.core.cst$sym$eof,cljs.core.cst$sym$opts], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null,null)], null),1,142,142,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$reader], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$keys,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$eof], null),cljs.core.cst$kw$as,cljs.core.cst$sym$opts], null),cljs.core.cst$sym$reader], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$reader,cljs.core.cst$sym$eof_DASH_error_QMARK_,cljs.core.cst$sym$eof,cljs.core.cst$sym$opts], null)),"Reads the first object from an cljs.tools.reader.reader-types/IPushbackReader.\n   Returns the object read. If EOF, throws if eof-error? is true otherwise returns eof.\n   If no reader is provided, *in* will be used.\n\n   Reads data in the edn format (subset of Clojure data):\n   http://edn-format.org\n\n   cljs.tools.reader.edn/read doesn't depend on dynamic Vars, all configuration\n   is done by passing an opt map.\n\n   opts is a map that can include the following keys:\n   :eof - value to return on end-of-file. When not supplied, eof throws an exception.\n   :readers  - a map of tag symbols to data-reader functions to be considered before default-data-readers.\n              When not supplied, only the default-data-readers will be used.\n   :default - A function of two args, that will, if present and no reader is found for a tag,\n              be called with the tag and the value.",(cljs.core.truth_(cljs.reader.read)?cljs.reader.read.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.reader.read;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23340 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23340,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23340;
}
})(),false);
})(),cljs.core.cst$sym$read_DASH_string,(function (){var ns__18188__auto__ = sci.impl.namespaces.clojure_edn_namespace;
var m__18189__auto__ = cljs.core.meta(new cljs.core.Var(function(){return cljs.reader.read_string;},cljs.core.cst$sym$cljs$reader_SLASH_read_DASH_string,cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$ns,cljs.core.cst$kw$name,cljs.core.cst$kw$file,cljs.core.cst$kw$end_DASH_column,cljs.core.cst$kw$top_DASH_fn,cljs.core.cst$kw$column,cljs.core.cst$kw$line,cljs.core.cst$kw$end_DASH_line,cljs.core.cst$kw$arglists,cljs.core.cst$kw$doc,cljs.core.cst$kw$test],[cljs.core.cst$sym$cljs$reader,cljs.core.cst$sym$read_DASH_string,"resources/public/cljs-out/dev/cljs/reader.cljs",18,new cljs.core.PersistentArrayMap(null, 6, [cljs.core.cst$kw$variadic_QMARK_,false,cljs.core.cst$kw$fixed_DASH_arity,2,cljs.core.cst$kw$max_DASH_fixed_DASH_arity,2,cljs.core.cst$kw$method_DASH_params,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$opts,cljs.core.cst$sym$s], null)], null),cljs.core.cst$kw$arglists,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$opts,cljs.core.cst$sym$s], null)),cljs.core.cst$kw$arglists_DASH_meta,cljs.core.list(null,null)], null),1,174,174,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$s], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$opts,cljs.core.cst$sym$s], null)),"Reads one object from the string s.\n   Returns nil when s is nil or empty.\n\n   Reads data in the edn format (subset of Clojure data):\n   http://edn-format.org\n\n   opts is a map as per cljs.tools.reader.edn/read",(cljs.core.truth_(cljs.reader.read_string)?cljs.reader.read_string.cljs$lang$test:null)])));
var ns_name__18190__auto__ = ns__18188__auto__.sci$impl$vars$HasName$getName$arity$1(null);
var name__18191__auto__ = cljs.core.cst$kw$name.cljs$core$IFn$_invoke$arity$1(m__18189__auto__);
var name_sym__18192__auto__ = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name__18190__auto__),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__18191__auto__));
var val__18193__auto__ = cljs.reader.read_string;
return sci.impl.vars.__GT_SciVar(val__18193__auto__,name_sym__18192__auto__,(function (){var G__23341 = new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$ns,ns__18188__auto__,cljs.core.cst$kw$name,name__18191__auto__,cljs.core.cst$kw$sci$impl_SLASH_built_DASH_in,true,cljs.core.cst$kw$arglists,cljs.core.cst$kw$arglists.cljs$core$IFn$_invoke$arity$1(m__18189__auto__),cljs.core.cst$kw$doc,cljs.core.cst$kw$doc.cljs$core$IFn$_invoke$arity$1(m__18189__auto__)], null);
if((((sci.impl.namespaces.clojure_core_ns === ns__18188__auto__)) && (cljs.core.contains_QMARK_(sci.impl.namespaces.inlined_vars,name__18191__auto__)))){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__23341,cljs.core.cst$kw$sci$impl_SLASH_inlined,val__18193__auto__);
} else {
return G__23341;
}
})(),false);
})()], null)], null);
sci.impl.namespaces.aliases = new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$sym$str,cljs.core.cst$sym$clojure$string,cljs.core.cst$sym$set,cljs.core.cst$sym$clojure$set], null);
