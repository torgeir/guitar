// Compiled by ClojureScript 1.10.773 {:static-fns true, :optimize-constants true}
goog.provide('zprint.spec');
goog.require('cljs.core');
goog.require('cljs.core.constants');
goog.require('clojure.string');
goog.require('clojure.walk');
goog.require('zprint.ansi');
goog.require('cljs.spec.alpha');
zprint.spec.zany_QMARK_ = (function zprint$spec$zany_QMARK_(x){
return true;
});
zprint.spec.zboolean_QMARK_ = (function zprint$spec$zboolean_QMARK_(x){
return ((x === true) || (x === false));
});
/**
 * Can this value be coerced into a boolean?
 */
zprint.spec.booleanable_QMARK_ = (function zprint$spec$booleanable_QMARK_(x){
try{cljs.core.boolean$(x);

return true;
}catch (e29726){var e = e29726;
return false;
}});
zprint.spec.ansi_code = cljs.core.set(cljs.core.keys(zprint.ansi.ansi_codes));
zprint.spec.ansi_codes_QMARK_ = (function zprint$spec$ansi_codes_QMARK_(x){
if(cljs.core.sequential_QMARK_(x)){
return cljs.core.every_QMARK_(zprint.spec.ansi_code,x);
} else {
return (zprint.spec.ansi_code.cljs$core$IFn$_invoke$arity$1 ? zprint.spec.ansi_code.cljs$core$IFn$_invoke$arity$1(x) : zprint.spec.ansi_code.call(null,x));
}
});
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$sym$zprint$spec_SLASH_ansi_DASH_codes_QMARK_,zprint.spec.ansi_codes_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_bracket,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_char,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_comma,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_deref,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_false,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_keyword,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_nil,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_none,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_number,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_symbol,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_regex,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_string,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_true,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_unquote,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_unquote_DASH_splicing,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$zprint$spec_SLASH_zboolean_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$zprint$spec_SLASH_zboolean_QMARK_,zprint.spec.zboolean_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 31, [cljs.core.cst$kw$gt3_DASH_force_DASH_nl,"null",cljs.core.cst$kw$arg2_DASH_extend,"null",cljs.core.cst$kw$arg2_DASH_pair,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$fn,"null",cljs.core.cst$kw$arg1_DASH_body,"null",cljs.core.cst$kw$arg2,"null",cljs.core.cst$kw$pair_DASH_fn,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$force_DASH_nl,"null",cljs.core.cst$kw$arg1_DASH_extend,"null",cljs.core.cst$kw$replace_DASH_w_DASH_string,"null",cljs.core.cst$kw$arg1_DASH_pair,"null",cljs.core.cst$kw$pair,"null",cljs.core.cst$kw$flow,"null",cljs.core.cst$kw$noarg1,"null",cljs.core.cst$kw$noarg1_DASH_body,"null",cljs.core.cst$kw$gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$arg1_DASH_pair_DASH_body,"null",cljs.core.cst$kw$force_DASH_nl_DASH_body,"null",cljs.core.cst$kw$arg2_DASH_fn,"null",cljs.core.cst$kw$binding,"null",cljs.core.cst$kw$arg1_DASH_force_DASH_nl,"null",cljs.core.cst$kw$arg2_DASH_mixin,"null",cljs.core.cst$kw$hang,"null",cljs.core.cst$kw$flow_DASH_body,"null",cljs.core.cst$kw$arg1_DASH_mixin,"null",cljs.core.cst$kw$arg1_DASH__GT_,"null",cljs.core.cst$kw$none_DASH_body,"null",cljs.core.cst$kw$arg1,"null",cljs.core.cst$kw$none,"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 31, [cljs.core.cst$kw$gt3_DASH_force_DASH_nl,null,cljs.core.cst$kw$arg2_DASH_extend,null,cljs.core.cst$kw$arg2_DASH_pair,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$fn,null,cljs.core.cst$kw$arg1_DASH_body,null,cljs.core.cst$kw$arg2,null,cljs.core.cst$kw$pair_DASH_fn,null,cljs.core.cst$kw$extend,null,cljs.core.cst$kw$force_DASH_nl,null,cljs.core.cst$kw$arg1_DASH_extend,null,cljs.core.cst$kw$replace_DASH_w_DASH_string,null,cljs.core.cst$kw$arg1_DASH_pair,null,cljs.core.cst$kw$pair,null,cljs.core.cst$kw$flow,null,cljs.core.cst$kw$noarg1,null,cljs.core.cst$kw$noarg1_DASH_body,null,cljs.core.cst$kw$gt2_DASH_force_DASH_nl,null,cljs.core.cst$kw$arg1_DASH_pair_DASH_body,null,cljs.core.cst$kw$force_DASH_nl_DASH_body,null,cljs.core.cst$kw$arg2_DASH_fn,null,cljs.core.cst$kw$binding,null,cljs.core.cst$kw$arg1_DASH_force_DASH_nl,null,cljs.core.cst$kw$arg2_DASH_mixin,null,cljs.core.cst$kw$hang,null,cljs.core.cst$kw$flow_DASH_body,null,cljs.core.cst$kw$arg1_DASH_mixin,null,cljs.core.cst$kw$arg1_DASH__GT_,null,cljs.core.cst$kw$none_DASH_body,null,cljs.core.cst$kw$arg1,null,cljs.core.cst$kw$none,null], null), null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type_DASH_w_DASH_map,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$general_DASH_options,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_options),cljs.core.cst$kw$string_DASH_w_DASH_structure_DASH_options,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_options,cljs.core.cst$kw$zprint$spec_SLASH_options)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$general_DASH_options,cljs.core.cst$kw$string_DASH_w_DASH_structure_DASH_options], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_options),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_options,cljs.core.cst$kw$zprint$spec_SLASH_options)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_options], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_options], null)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_options,cljs.core.cst$kw$zprint$spec_SLASH_options], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_options,cljs.core.cst$kw$zprint$spec_SLASH_options], null))], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_specifier,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$simple_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$complex_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type_DASH_w_DASH_map),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$simple_DASH_type,cljs.core.cst$kw$complex_DASH_type], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type_DASH_w_DASH_map], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type_DASH_w_DASH_map], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_format_DASH_value,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$next,"null",cljs.core.cst$kw$off,"null",cljs.core.cst$kw$on,"null",cljs.core.cst$kw$skip,"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$next,null,cljs.core.cst$kw$off,null,cljs.core.cst$kw$on,null,cljs.core.cst$kw$skip,null], null), null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_vec_DASH_or_DASH_list_DASH_of_DASH_keyword,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$sym$keyword_QMARK_,cljs.core.keyword_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29727){
return cljs.core.sequential_QMARK_(G__29727);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_style_DASH_value,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$multiple_DASH_styles,cljs.core.cst$kw$zprint$spec_SLASH_vec_DASH_or_DASH_list_DASH_of_DASH_keyword,cljs.core.cst$kw$single_DASH_style,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$multiple_DASH_styles,cljs.core.cst$kw$single_DASH_style], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_vec_DASH_or_DASH_list_DASH_of_DASH_keyword,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_vec_DASH_or_DASH_list_DASH_of_DASH_keyword,cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.keyword_QMARK_,null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$string,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$number,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$keyword,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$string,cljs.core.cst$kw$number,cljs.core.cst$kw$keyword], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,cljs.core.number_QMARK_,cljs.core.keyword_QMARK_], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_seq,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$zprint$spec_SLASH_constant,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29728){
return cljs.core.sequential_QMARK_(G__29728);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_line_DASH_seq,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$number,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$range,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$number,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$range,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$s_SLASH_or,cljs.core.cst$kw$number,cljs.core.cst$sym$number_QMARK_,cljs.core.cst$kw$range,cljs.core.list(cljs.core.cst$sym$s_SLASH_coll_DASH_of,cljs.core.cst$sym$number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$sequential_QMARK_)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$number,cljs.core.cst$kw$range], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.number_QMARK_,cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$sym$number_QMARK_,cljs.core.number_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29730){
return cljs.core.sequential_QMARK_(G__29730);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null)], null),null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29729){
return cljs.core.sequential_QMARK_(G__29729);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$number,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$range,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_path_DASH_seq,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$s_SLASH_coll_DASH_of,cljs.core.cst$sym$number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$sym$number_QMARK_,cljs.core.number_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29732){
return cljs.core.sequential_QMARK_(G__29732);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29731){
return cljs.core.sequential_QMARK_(G__29731);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_or_DASH_ks_DASH_seq,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$constant,cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$constant_DASH_seq,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_seq),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$s_SLASH_or,cljs.core.cst$kw$constant,cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$constant_DASH_seq,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_seq),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$constant,cljs.core.cst$kw$constant_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_seq], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_seq], null),null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29733){
return cljs.core.sequential_QMARK_(G__29733);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$constant,cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$constant_DASH_seq,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_seq),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$zprint$spec_SLASH_constant,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29734){
return cljs.core.sequential_QMARK_(G__29734);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_constant,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_color_DASH_value,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_color),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_color),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$s_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_color),cljs.spec.alpha.nilable_impl(cljs.core.cst$kw$zprint$spec_SLASH_color,cljs.core.cst$kw$zprint$spec_SLASH_color,null),new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29735){
return cljs.core.sequential_QMARK_(G__29735);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_color),cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_boolean_DASH_or_DASH_string,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$string,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$boolean,cljs.core.cst$kw$string], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.string_QMARK_], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_keep_DASH_or_DASH_drop,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$drop,"null",cljs.core.cst$kw$keep,"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$drop,null,cljs.core.cst$kw$keep,null], null), null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_keys,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$default,"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$default,null], null), null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_value,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$specific_DASH_function_DASH_name,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$generic_DASH_function_DASH_configuration,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_keys),cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_specifier)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$specific_DASH_function_DASH_name,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$generic_DASH_function_DASH_configuration,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_keys),cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_specifier),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.list(cljs.core.cst$sym$s_SLASH_or,cljs.core.cst$kw$specific_DASH_function_DASH_name,cljs.core.cst$sym$string_QMARK_,cljs.core.cst$kw$generic_DASH_function_DASH_configuration,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_keys),cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_specifier),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$specific_DASH_function_DASH_name,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$generic_DASH_function_DASH_configuration,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_keys),cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_specifier], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$specific_DASH_function_DASH_name,cljs.core.cst$kw$generic_DASH_function_DASH_configuration], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_keys], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.string_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_keys], null),null),cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_specifier], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29736){
return cljs.core.map_QMARK_(G__29736);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$specific_DASH_function_DASH_name,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$generic_DASH_function_DASH_configuration,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_keys),cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_specifier)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_number_DASH_or_DASH_vector_DASH_of_DASH_numbers,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_or,cljs.core.cst$kw$length,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$length_DASH_by_DASH_depth,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_)),cljs.spec.alpha.or_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$length,cljs.core.cst$kw$length_DASH_by_DASH_depth], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.number_QMARK_,cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$sym$number_QMARK_,cljs.core.number_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29737){
return cljs.core.vector_QMARK_(G__29737);
}),cljs.core.cst$kw$kind,cljs.core.vector_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_)], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_DASH_style_DASH_value,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$input_DASH_hang,"null",cljs.core.cst$kw$none,"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$input_DASH_hang,null,cljs.core.cst$kw$none,null], null), null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_inline_DASH_align_DASH_style_DASH_value,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$aligned,"null",cljs.core.cst$kw$consecutive,"null",cljs.core.cst$kw$none,"null"], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$aligned,null,cljs.core.cst$kw$consecutive,null,cljs.core.cst$kw$none,null], null), null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_binding_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_dir,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_path,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_secs,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_min,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_fn,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_fn_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_fn_QMARK_,cljs.core.fn_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_count_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_directory,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_docstring_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_elide,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_end,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_expand_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_focus,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_zloc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_path,cljs.core.cst$kw$zprint$spec_SLASH_surround], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_zloc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_path,cljs.core.cst$kw$zprint$spec_SLASH_surround], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$path,"null",cljs.core.cst$kw$zloc_QMARK_,"null",cljs.core.cst$kw$surround,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_zloc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_path,cljs.core.cst$kw$zprint$spec_SLASH_surround], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29738){
return cljs.core.map_QMARK_(G__29738);
})], null),(function (G__29738){
return cljs.core.map_QMARK_(G__29738);
}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zloc_QMARK_,cljs.core.cst$kw$path,cljs.core.cst$kw$surround], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_zloc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_path,cljs.core.cst$kw$zprint$spec_SLASH_surround], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$path,"null",cljs.core.cst$kw$zloc_QMARK_,"null",cljs.core.cst$kw$surround,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$path,"null",cljs.core.cst$kw$zloc_QMARK_,"null",cljs.core.cst$kw$surround,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$path,null,cljs.core.cst$kw$zloc_QMARK_,null,cljs.core.cst$kw$surround,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29739){
return cljs.core.map_QMARK_(G__29739);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$path,"null",cljs.core.cst$kw$zloc_QMARK_,"null",cljs.core.cst$kw$surround,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_avoid,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_if_DASH_equal_DASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_hex_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_arg,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_DASH_style,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_DASH_style_DASH_value,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_DASH_style_DASH_value);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_inline_DASH_align_DASH_style,cljs.core.cst$kw$zprint$spec_SLASH_inline_DASH_align_DASH_style_DASH_value,cljs.core.cst$kw$zprint$spec_SLASH_inline_DASH_align_DASH_style_DASH_value);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_inline_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_interpose,cljs.core.cst$kw$zprint$spec_SLASH_boolean_DASH_or_DASH_string,cljs.core.cst$kw$zprint$spec_SLASH_boolean_DASH_or_DASH_string);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29740){
return cljs.core.map_QMARK_(G__29740);
})], null),(function (G__29740){
return cljs.core.map_QMARK_(G__29740);
}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$hang_QMARK_,cljs.core.cst$kw$hang_DASH_expand,cljs.core.cst$kw$hang_DASH_diff], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$hang_DASH_expand,null,cljs.core.cst$kw$hang_DASH_diff,null,cljs.core.cst$kw$hang_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29741){
return cljs.core.map_QMARK_(G__29741);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,"null",cljs.core.cst$kw$hang_DASH_flow,"null",cljs.core.cst$kw$general_DASH_hang_DASH_adjust,"null",cljs.core.cst$kw$hang_DASH_flow_DASH_limit,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29742){
return cljs.core.map_QMARK_(G__29742);
})], null),(function (G__29742){
return cljs.core.map_QMARK_(G__29742);
}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$hang_DASH_flow,cljs.core.cst$kw$hang_DASH_type_DASH_flow,cljs.core.cst$kw$hang_DASH_flow_DASH_limit,cljs.core.cst$kw$general_DASH_hang_DASH_adjust], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,"null",cljs.core.cst$kw$hang_DASH_flow,"null",cljs.core.cst$kw$general_DASH_hang_DASH_adjust,"null",cljs.core.cst$kw$hang_DASH_flow_DASH_limit,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,"null",cljs.core.cst$kw$hang_DASH_flow,"null",cljs.core.cst$kw$general_DASH_hang_DASH_adjust,"null",cljs.core.cst$kw$hang_DASH_flow_DASH_limit,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,null,cljs.core.cst$kw$hang_DASH_flow,null,cljs.core.cst$kw$general_DASH_hang_DASH_adjust,null,cljs.core.cst$kw$hang_DASH_flow_DASH_limit,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29743){
return cljs.core.map_QMARK_(G__29743);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,"null",cljs.core.cst$kw$hang_DASH_flow,"null",cljs.core.cst$kw$general_DASH_hang_DASH_adjust,"null",cljs.core.cst$kw$hang_DASH_flow_DASH_limit,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_color,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$sym$zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [zprint.spec.zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29744){
return cljs.core.map_QMARK_(G__29744);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value_DASH_color,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$sym$zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [zprint.spec.zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29745){
return cljs.core.map_QMARK_(G__29745);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_depth_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_color_DASH_value,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_color_DASH_value);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_or_DASH_ks_DASH_seq),cljs.spec.alpha.nilable_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_or_DASH_ks_DASH_seq,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_or_DASH_ks_DASH_seq,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore_DASH_silent,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_or_DASH_ks_DASH_seq),cljs.spec.alpha.nilable_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_or_DASH_ks_DASH_seq,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_or_DASH_ks_DASH_seq,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value),cljs.spec.alpha.nilable_impl(cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_left_DASH_space,cljs.core.cst$kw$zprint$spec_SLASH_keep_DASH_or_DASH_drop,cljs.core.cst$kw$zprint$spec_SLASH_keep_DASH_or_DASH_drop);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_lines,cljs.core.cst$kw$zprint$spec_SLASH_line_DASH_seq,cljs.core.cst$kw$zprint$spec_SLASH_line_DASH_seq);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_location,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_modifiers,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$sym$string_QMARK_,cljs.core.string_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29746){
return cljs.core.set_QMARK_(G__29746);
}),cljs.core.cst$kw$kind,cljs.core.set_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_parallel_QMARK_,cljs.core.cst$sym$cljs$core_SLASH_false_QMARK_,cljs.core.false_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_path,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$sym$number_QMARK_,cljs.core.number_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29747){
return cljs.core.sequential_QMARK_(G__29747);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_paths,cljs.core.cst$kw$zprint$spec_SLASH_path_DASH_seq,cljs.core.cst$kw$zprint$spec_SLASH_path_DASH_seq);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_range,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_start,cljs.core.cst$kw$zprint$spec_SLASH_end], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_start,cljs.core.cst$kw$zprint$spec_SLASH_end], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$start,"null",cljs.core.cst$kw$end,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_start,cljs.core.cst$kw$zprint$spec_SLASH_end], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29748){
return cljs.core.map_QMARK_(G__29748);
})], null),(function (G__29748){
return cljs.core.map_QMARK_(G__29748);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$start,cljs.core.cst$kw$end], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_start,cljs.core.cst$kw$zprint$spec_SLASH_end], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$start,"null",cljs.core.cst$kw$end,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$start,"null",cljs.core.cst$kw$end,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$start,null,cljs.core.cst$kw$end,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29749){
return cljs.core.map_QMARK_(G__29749);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$start,"null",cljs.core.cst$kw$end,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_replacement_DASH_string,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_altered_DASH_zipper,cljs.core.cst$sym$cljs$core_SLASH_vector_QMARK_,cljs.core.vector_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_surround,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$sym$number_QMARK_,cljs.core.number_QMARK_,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29750){
return cljs.core.sequential_QMARK_(G__29750);
}),cljs.core.cst$kw$kind,cljs.core.sequential_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_sequential_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn_DASH_first,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_fn_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_fn_QMARK_,cljs.core.fn_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_fn_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_fn_QMARK_,cljs.core.fn_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_format,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type),cljs.spec.alpha.nilable_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_record_DASH_type_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_size,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_start,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_),cljs.spec.alpha.nilable_impl(cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_unlift_DASH_ns_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_to_DASH_string_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_value,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,zprint.spec.zany_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_zloc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_agent,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29751){
return cljs.core.map_QMARK_(G__29751);
})], null),(function (G__29751){
return cljs.core.map_QMARK_(G__29751);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$object_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29752){
return cljs.core.map_QMARK_(G__29752);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_array,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hex_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hex_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$hex_QMARK_,"null",cljs.core.cst$kw$object_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hex_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29753){
return cljs.core.map_QMARK_(G__29753);
})], null),(function (G__29753){
return cljs.core.map_QMARK_(G__29753);
}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$hex_QMARK_,cljs.core.cst$kw$indent,cljs.core.cst$kw$object_QMARK_,cljs.core.cst$kw$wrap_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hex_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$hex_QMARK_,"null",cljs.core.cst$kw$object_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$hex_QMARK_,"null",cljs.core.cst$kw$object_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$indent,null,cljs.core.cst$kw$hex_QMARK_,null,cljs.core.cst$kw$object_QMARK_,null,cljs.core.cst$kw$wrap_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29754){
return cljs.core.map_QMARK_(G__29754);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$hex_QMARK_,"null",cljs.core.cst$kw$object_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_atom,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29755){
return cljs.core.map_QMARK_(G__29755);
})], null),(function (G__29755){
return cljs.core.map_QMARK_(G__29755);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$object_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29756){
return cljs.core.map_QMARK_(G__29756);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_binding,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29757){
return cljs.core.map_QMARK_(G__29757);
})], null),(function (G__29757){
return cljs.core.map_QMARK_(G__29757);
}),new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$flow_QMARK_,cljs.core.cst$kw$force_DASH_nl_QMARK_,cljs.core.cst$kw$hang_DASH_diff,cljs.core.cst$kw$hang_DASH_expand,cljs.core.cst$kw$hang_QMARK_,cljs.core.cst$kw$hang_DASH_accept,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,cljs.core.cst$kw$ha_DASH_width_DASH_factor,cljs.core.cst$kw$indent,cljs.core.cst$kw$justify_QMARK_,cljs.core.cst$kw$justify_DASH_hang,cljs.core.cst$kw$justify_DASH_tuning,cljs.core.cst$kw$nl_DASH_separator_QMARK_,cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,null,cljs.core.cst$kw$nl_DASH_separator_QMARK_,null,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$justify_QMARK_,null,cljs.core.cst$kw$justify_DASH_tuning,null,cljs.core.cst$kw$ha_DASH_width_DASH_factor,null,cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,null,cljs.core.cst$kw$hang_DASH_expand,null,cljs.core.cst$kw$force_DASH_nl_QMARK_,null,cljs.core.cst$kw$hang_DASH_accept,null,cljs.core.cst$kw$hang_DASH_diff,null,cljs.core.cst$kw$justify_DASH_hang,null,cljs.core.cst$kw$hang_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29758){
return cljs.core.map_QMARK_(G__29758);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_cache,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_directory,cljs.core.cst$kw$zprint$spec_SLASH_location], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_directory,cljs.core.cst$kw$zprint$spec_SLASH_location], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$directory,"null",cljs.core.cst$kw$location,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_directory,cljs.core.cst$kw$zprint$spec_SLASH_location], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29759){
return cljs.core.map_QMARK_(G__29759);
})], null),(function (G__29759){
return cljs.core.map_QMARK_(G__29759);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$directory,cljs.core.cst$kw$location], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_directory,cljs.core.cst$kw$zprint$spec_SLASH_location], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$directory,"null",cljs.core.cst$kw$location,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$directory,"null",cljs.core.cst$kw$location,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$directory,null,cljs.core.cst$kw$location,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29760){
return cljs.core.map_QMARK_(G__29760);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$directory,"null",cljs.core.cst$kw$location,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 26, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_bracket,cljs.core.cst$kw$zprint$spec_SLASH_char,cljs.core.cst$kw$zprint$spec_SLASH_comma,cljs.core.cst$kw$zprint$spec_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_deref,cljs.core.cst$kw$zprint$spec_SLASH_false,cljs.core.cst$kw$zprint$spec_SLASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_keyword,cljs.core.cst$kw$zprint$spec_SLASH_nil,cljs.core.cst$kw$zprint$spec_SLASH_none,cljs.core.cst$kw$zprint$spec_SLASH_number,cljs.core.cst$kw$zprint$spec_SLASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_regex,cljs.core.cst$kw$zprint$spec_SLASH_string,cljs.core.cst$kw$zprint$spec_SLASH_symbol,cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_true,cljs.core.cst$kw$zprint$spec_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_unquote,cljs.core.cst$kw$zprint$spec_SLASH_unquote_DASH_splicing,cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 26, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_bracket,cljs.core.cst$kw$zprint$spec_SLASH_char,cljs.core.cst$kw$zprint$spec_SLASH_comma,cljs.core.cst$kw$zprint$spec_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_deref,cljs.core.cst$kw$zprint$spec_SLASH_false,cljs.core.cst$kw$zprint$spec_SLASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_keyword,cljs.core.cst$kw$zprint$spec_SLASH_nil,cljs.core.cst$kw$zprint$spec_SLASH_none,cljs.core.cst$kw$zprint$spec_SLASH_number,cljs.core.cst$kw$zprint$spec_SLASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_regex,cljs.core.cst$kw$zprint$spec_SLASH_string,cljs.core.cst$kw$zprint$spec_SLASH_symbol,cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_true,cljs.core.cst$kw$zprint$spec_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_unquote,cljs.core.cst$kw$zprint$spec_SLASH_unquote_DASH_splicing,cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 26, [cljs.core.cst$kw$true,"null",cljs.core.cst$kw$fn,"null",cljs.core.cst$kw$unquote_DASH_splicing,"null",cljs.core.cst$kw$hash_DASH_paren,"null",cljs.core.cst$kw$number,"null",cljs.core.cst$kw$brace,"null",cljs.core.cst$kw$unquote,"null",cljs.core.cst$kw$symbol,"null",cljs.core.cst$kw$comma,"null",cljs.core.cst$kw$user_DASH_fn,"null",cljs.core.cst$kw$uneval,"null",cljs.core.cst$kw$false,"null",cljs.core.cst$kw$string,"null",cljs.core.cst$kw$paren,"null",cljs.core.cst$kw$syntax_DASH_quote,"null",cljs.core.cst$kw$quote,"null",cljs.core.cst$kw$keyword,"null",cljs.core.cst$kw$syntax_DASH_quote_DASH_paren,"null",cljs.core.cst$kw$nil,"null",cljs.core.cst$kw$deref,"null",cljs.core.cst$kw$bracket,"null",cljs.core.cst$kw$comment,"null",cljs.core.cst$kw$regex,"null",cljs.core.cst$kw$hash_DASH_brace,"null",cljs.core.cst$kw$none,"null",cljs.core.cst$kw$char,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 26, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_bracket,cljs.core.cst$kw$zprint$spec_SLASH_char,cljs.core.cst$kw$zprint$spec_SLASH_comma,cljs.core.cst$kw$zprint$spec_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_deref,cljs.core.cst$kw$zprint$spec_SLASH_false,cljs.core.cst$kw$zprint$spec_SLASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_keyword,cljs.core.cst$kw$zprint$spec_SLASH_nil,cljs.core.cst$kw$zprint$spec_SLASH_none,cljs.core.cst$kw$zprint$spec_SLASH_number,cljs.core.cst$kw$zprint$spec_SLASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_regex,cljs.core.cst$kw$zprint$spec_SLASH_string,cljs.core.cst$kw$zprint$spec_SLASH_symbol,cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_true,cljs.core.cst$kw$zprint$spec_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_unquote,cljs.core.cst$kw$zprint$spec_SLASH_unquote_DASH_splicing,cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29761){
return cljs.core.map_QMARK_(G__29761);
})], null),(function (G__29761){
return cljs.core.map_QMARK_(G__29761);
}),new cljs.core.PersistentVector(null, 26, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$brace,cljs.core.cst$kw$bracket,cljs.core.cst$kw$char,cljs.core.cst$kw$comma,cljs.core.cst$kw$comment,cljs.core.cst$kw$deref,cljs.core.cst$kw$false,cljs.core.cst$kw$fn,cljs.core.cst$kw$hash_DASH_brace,cljs.core.cst$kw$hash_DASH_paren,cljs.core.cst$kw$keyword,cljs.core.cst$kw$nil,cljs.core.cst$kw$none,cljs.core.cst$kw$number,cljs.core.cst$kw$paren,cljs.core.cst$kw$quote,cljs.core.cst$kw$regex,cljs.core.cst$kw$string,cljs.core.cst$kw$symbol,cljs.core.cst$kw$syntax_DASH_quote,cljs.core.cst$kw$syntax_DASH_quote_DASH_paren,cljs.core.cst$kw$true,cljs.core.cst$kw$uneval,cljs.core.cst$kw$unquote,cljs.core.cst$kw$unquote_DASH_splicing,cljs.core.cst$kw$user_DASH_fn], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 26, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_bracket,cljs.core.cst$kw$zprint$spec_SLASH_char,cljs.core.cst$kw$zprint$spec_SLASH_comma,cljs.core.cst$kw$zprint$spec_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_deref,cljs.core.cst$kw$zprint$spec_SLASH_false,cljs.core.cst$kw$zprint$spec_SLASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_brace,cljs.core.cst$kw$zprint$spec_SLASH_hash_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_keyword,cljs.core.cst$kw$zprint$spec_SLASH_nil,cljs.core.cst$kw$zprint$spec_SLASH_none,cljs.core.cst$kw$zprint$spec_SLASH_number,cljs.core.cst$kw$zprint$spec_SLASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_regex,cljs.core.cst$kw$zprint$spec_SLASH_string,cljs.core.cst$kw$zprint$spec_SLASH_symbol,cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote,cljs.core.cst$kw$zprint$spec_SLASH_syntax_DASH_quote_DASH_paren,cljs.core.cst$kw$zprint$spec_SLASH_true,cljs.core.cst$kw$zprint$spec_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_unquote,cljs.core.cst$kw$zprint$spec_SLASH_unquote_DASH_splicing,cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 26, [cljs.core.cst$kw$true,"null",cljs.core.cst$kw$fn,"null",cljs.core.cst$kw$unquote_DASH_splicing,"null",cljs.core.cst$kw$hash_DASH_paren,"null",cljs.core.cst$kw$number,"null",cljs.core.cst$kw$brace,"null",cljs.core.cst$kw$unquote,"null",cljs.core.cst$kw$symbol,"null",cljs.core.cst$kw$comma,"null",cljs.core.cst$kw$user_DASH_fn,"null",cljs.core.cst$kw$uneval,"null",cljs.core.cst$kw$false,"null",cljs.core.cst$kw$string,"null",cljs.core.cst$kw$paren,"null",cljs.core.cst$kw$syntax_DASH_quote,"null",cljs.core.cst$kw$quote,"null",cljs.core.cst$kw$keyword,"null",cljs.core.cst$kw$syntax_DASH_quote_DASH_paren,"null",cljs.core.cst$kw$nil,"null",cljs.core.cst$kw$deref,"null",cljs.core.cst$kw$bracket,"null",cljs.core.cst$kw$comment,"null",cljs.core.cst$kw$regex,"null",cljs.core.cst$kw$hash_DASH_brace,"null",cljs.core.cst$kw$none,"null",cljs.core.cst$kw$char,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 26, [cljs.core.cst$kw$true,"null",cljs.core.cst$kw$fn,"null",cljs.core.cst$kw$unquote_DASH_splicing,"null",cljs.core.cst$kw$hash_DASH_paren,"null",cljs.core.cst$kw$number,"null",cljs.core.cst$kw$brace,"null",cljs.core.cst$kw$unquote,"null",cljs.core.cst$kw$symbol,"null",cljs.core.cst$kw$comma,"null",cljs.core.cst$kw$user_DASH_fn,"null",cljs.core.cst$kw$uneval,"null",cljs.core.cst$kw$false,"null",cljs.core.cst$kw$string,"null",cljs.core.cst$kw$paren,"null",cljs.core.cst$kw$syntax_DASH_quote,"null",cljs.core.cst$kw$quote,"null",cljs.core.cst$kw$keyword,"null",cljs.core.cst$kw$syntax_DASH_quote_DASH_paren,"null",cljs.core.cst$kw$nil,"null",cljs.core.cst$kw$deref,"null",cljs.core.cst$kw$bracket,"null",cljs.core.cst$kw$comment,"null",cljs.core.cst$kw$regex,"null",cljs.core.cst$kw$hash_DASH_brace,"null",cljs.core.cst$kw$none,"null",cljs.core.cst$kw$char,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 26, [cljs.core.cst$kw$true,null,cljs.core.cst$kw$fn,null,cljs.core.cst$kw$unquote_DASH_splicing,null,cljs.core.cst$kw$hash_DASH_paren,null,cljs.core.cst$kw$number,null,cljs.core.cst$kw$brace,null,cljs.core.cst$kw$unquote,null,cljs.core.cst$kw$symbol,null,cljs.core.cst$kw$comma,null,cljs.core.cst$kw$user_DASH_fn,null,cljs.core.cst$kw$uneval,null,cljs.core.cst$kw$false,null,cljs.core.cst$kw$string,null,cljs.core.cst$kw$paren,null,cljs.core.cst$kw$syntax_DASH_quote,null,cljs.core.cst$kw$quote,null,cljs.core.cst$kw$keyword,null,cljs.core.cst$kw$syntax_DASH_quote_DASH_paren,null,cljs.core.cst$kw$nil,null,cljs.core.cst$kw$deref,null,cljs.core.cst$kw$bracket,null,cljs.core.cst$kw$comment,null,cljs.core.cst$kw$regex,null,cljs.core.cst$kw$hash_DASH_brace,null,cljs.core.cst$kw$none,null,cljs.core.cst$kw$char,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29762){
return cljs.core.map_QMARK_(G__29762);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 26, [cljs.core.cst$kw$true,"null",cljs.core.cst$kw$fn,"null",cljs.core.cst$kw$unquote_DASH_splicing,"null",cljs.core.cst$kw$hash_DASH_paren,"null",cljs.core.cst$kw$number,"null",cljs.core.cst$kw$brace,"null",cljs.core.cst$kw$unquote,"null",cljs.core.cst$kw$symbol,"null",cljs.core.cst$kw$comma,"null",cljs.core.cst$kw$user_DASH_fn,"null",cljs.core.cst$kw$uneval,"null",cljs.core.cst$kw$false,"null",cljs.core.cst$kw$string,"null",cljs.core.cst$kw$paren,"null",cljs.core.cst$kw$syntax_DASH_quote,"null",cljs.core.cst$kw$quote,"null",cljs.core.cst$kw$keyword,"null",cljs.core.cst$kw$syntax_DASH_quote_DASH_paren,"null",cljs.core.cst$kw$nil,"null",cljs.core.cst$kw$deref,"null",cljs.core.cst$kw$bracket,"null",cljs.core.cst$kw$comment,"null",cljs.core.cst$kw$regex,"null",cljs.core.cst$kw$hash_DASH_brace,"null",cljs.core.cst$kw$none,"null",cljs.core.cst$kw$char,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$alt_SLASH_comment,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_count_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_inline_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_inline_DASH_align_DASH_style], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_count_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_inline_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_inline_DASH_align_DASH_style], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$inline_DASH_align_DASH_style,"null",cljs.core.cst$kw$count_QMARK_,"null",cljs.core.cst$kw$inline_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_count_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_inline_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_inline_DASH_align_DASH_style], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29763){
return cljs.core.map_QMARK_(G__29763);
})], null),(function (G__29763){
return cljs.core.map_QMARK_(G__29763);
}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$count_QMARK_,cljs.core.cst$kw$wrap_QMARK_,cljs.core.cst$kw$inline_QMARK_,cljs.core.cst$kw$inline_DASH_align_DASH_style], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_count_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_inline_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_inline_DASH_align_DASH_style], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$inline_DASH_align_DASH_style,"null",cljs.core.cst$kw$count_QMARK_,"null",cljs.core.cst$kw$inline_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$inline_DASH_align_DASH_style,"null",cljs.core.cst$kw$count_QMARK_,"null",cljs.core.cst$kw$inline_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$inline_DASH_align_DASH_style,null,cljs.core.cst$kw$count_QMARK_,null,cljs.core.cst$kw$inline_QMARK_,null,cljs.core.cst$kw$wrap_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29764){
return cljs.core.map_QMARK_(G__29764);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$inline_DASH_align_DASH_style,"null",cljs.core.cst$kw$count_QMARK_,"null",cljs.core.cst$kw$inline_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_color_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_configured_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_cwd_DASH_zprintrc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_search_DASH_config_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_dbg_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_test_DASH_for_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_local_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_print_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_ge,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,zprint.spec.zany_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_bug_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_delay,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29765){
return cljs.core.map_QMARK_(G__29765);
})], null),(function (G__29765){
return cljs.core.map_QMARK_(G__29765);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$object_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29766){
return cljs.core.map_QMARK_(G__29766);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_drop_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_do_DASH_in_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_extend,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_modifiers,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_modifiers,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$modifiers,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_modifiers,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29767){
return cljs.core.map_QMARK_(G__29767);
})], null),(function (G__29767){
return cljs.core.map_QMARK_(G__29767);
}),new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$flow_QMARK_,cljs.core.cst$kw$force_DASH_nl_QMARK_,cljs.core.cst$kw$hang_DASH_diff,cljs.core.cst$kw$hang_DASH_expand,cljs.core.cst$kw$hang_QMARK_,cljs.core.cst$kw$hang_DASH_accept,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,cljs.core.cst$kw$ha_DASH_width_DASH_factor,cljs.core.cst$kw$indent,cljs.core.cst$kw$modifiers,cljs.core.cst$kw$nl_DASH_separator_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_modifiers,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$modifiers,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$modifiers,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$flow_QMARK_,null,cljs.core.cst$kw$nl_DASH_separator_QMARK_,null,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$ha_DASH_width_DASH_factor,null,cljs.core.cst$kw$hang_DASH_expand,null,cljs.core.cst$kw$force_DASH_nl_QMARK_,null,cljs.core.cst$kw$hang_DASH_accept,null,cljs.core.cst$kw$hang_DASH_diff,null,cljs.core.cst$kw$modifiers,null,cljs.core.cst$kw$hang_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29768){
return cljs.core.map_QMARK_(G__29768);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$modifiers,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$alt_SLASH_extend,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_modifiers], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_modifiers], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$modifiers,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_modifiers], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29769){
return cljs.core.map_QMARK_(G__29769);
})], null),(function (G__29769){
return cljs.core.map_QMARK_(G__29769);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$modifiers], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_modifiers], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$modifiers,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$modifiers,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$modifiers,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29770){
return cljs.core.map_QMARK_(G__29770);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$modifiers,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_file_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29771){
return cljs.core.set_QMARK_(G__29771);
}),cljs.core.cst$kw$kind,cljs.core.set_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29772){
return cljs.core.set_QMARK_(G__29772);
}),cljs.core.cst$kw$kind,cljs.core.set_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29773){
return cljs.core.set_QMARK_(G__29773);
}),cljs.core.cst$kw$kind,cljs.core.set_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_coll_DASH_of,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_type,cljs.core.cst$kw$kind,cljs.core.cst$sym$cljs$core_SLASH_set_QMARK_)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_value,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_value);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_name,cljs.core.cst$sym$zprint$spec_SLASH_zany_QMARK_,zprint.spec.zany_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_obj,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29774){
return cljs.core.map_QMARK_(G__29774);
})], null),(function (G__29774){
return cljs.core.map_QMARK_(G__29774);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$object_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29775){
return cljs.core.map_QMARK_(G__29775);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_format,cljs.core.cst$kw$zprint$spec_SLASH_format_DASH_value,cljs.core.cst$kw$zprint$spec_SLASH_format_DASH_value);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_future,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29776){
return cljs.core.map_QMARK_(G__29776);
})], null),(function (G__29776){
return cljs.core.map_QMARK_(G__29776);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$object_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29777){
return cljs.core.map_QMARK_(G__29777);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_input,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_range], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_range], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$range,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_range], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29778){
return cljs.core.map_QMARK_(G__29778);
})], null),(function (G__29778){
return cljs.core.map_QMARK_(G__29778);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$range], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_range], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$range,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$range,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$range,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29779){
return cljs.core.map_QMARK_(G__29779);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$range,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_list,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_min,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_avoid,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_arg,cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_altered_DASH_zipper,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_DASH_style,cljs.core.cst$kw$zprint$spec_SLASH_replacement_DASH_string], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_min,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_avoid,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_arg,cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_altered_DASH_zipper,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_DASH_style,cljs.core.cst$kw$zprint$spec_SLASH_replacement_DASH_string], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 20, [cljs.core.cst$kw$hang_DASH_size,"null",cljs.core.cst$kw$indent_DASH_arg,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$constant_DASH_pair_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$pair_DASH_hang_QMARK_,"null",cljs.core.cst$kw$constant_DASH_pair_DASH_min,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_avoid,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$constant_DASH_pair_DASH_fn,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$return_DASH_altered_DASH_zipper,"null",cljs.core.cst$kw$replacement_DASH_string,"null",cljs.core.cst$kw$indent_DASH_only_DASH_style,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_min,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_avoid,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_arg,cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_altered_DASH_zipper,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_DASH_style,cljs.core.cst$kw$zprint$spec_SLASH_replacement_DASH_string], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29780){
return cljs.core.map_QMARK_(G__29780);
})], null),(function (G__29780){
return cljs.core.map_QMARK_(G__29780);
}),new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$constant_DASH_pair_DASH_fn,cljs.core.cst$kw$constant_DASH_pair_DASH_min,cljs.core.cst$kw$constant_DASH_pair_QMARK_,cljs.core.cst$kw$hang_DASH_diff,cljs.core.cst$kw$hang_DASH_avoid,cljs.core.cst$kw$hang_DASH_expand,cljs.core.cst$kw$hang_DASH_size,cljs.core.cst$kw$hang_QMARK_,cljs.core.cst$kw$indent,cljs.core.cst$kw$hang_DASH_accept,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,cljs.core.cst$kw$ha_DASH_width_DASH_factor,cljs.core.cst$kw$indent_DASH_arg,cljs.core.cst$kw$pair_DASH_hang_QMARK_,cljs.core.cst$kw$return_DASH_altered_DASH_zipper,cljs.core.cst$kw$respect_DASH_bl_QMARK_,cljs.core.cst$kw$respect_DASH_nl_QMARK_,cljs.core.cst$kw$indent_DASH_only_QMARK_,cljs.core.cst$kw$indent_DASH_only_DASH_style,cljs.core.cst$kw$replacement_DASH_string], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_DASH_min,cljs.core.cst$kw$zprint$spec_SLASH_constant_DASH_pair_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_avoid,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_arg,cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_altered_DASH_zipper,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_DASH_style,cljs.core.cst$kw$zprint$spec_SLASH_replacement_DASH_string], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 20, [cljs.core.cst$kw$hang_DASH_size,"null",cljs.core.cst$kw$indent_DASH_arg,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$constant_DASH_pair_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$pair_DASH_hang_QMARK_,"null",cljs.core.cst$kw$constant_DASH_pair_DASH_min,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_avoid,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$constant_DASH_pair_DASH_fn,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$return_DASH_altered_DASH_zipper,"null",cljs.core.cst$kw$replacement_DASH_string,"null",cljs.core.cst$kw$indent_DASH_only_DASH_style,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 20, [cljs.core.cst$kw$hang_DASH_size,"null",cljs.core.cst$kw$indent_DASH_arg,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$constant_DASH_pair_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$pair_DASH_hang_QMARK_,"null",cljs.core.cst$kw$constant_DASH_pair_DASH_min,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_avoid,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$constant_DASH_pair_DASH_fn,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$return_DASH_altered_DASH_zipper,"null",cljs.core.cst$kw$replacement_DASH_string,"null",cljs.core.cst$kw$indent_DASH_only_DASH_style,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 20, [cljs.core.cst$kw$hang_DASH_size,null,cljs.core.cst$kw$indent_DASH_arg,null,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,null,cljs.core.cst$kw$constant_DASH_pair_QMARK_,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$ha_DASH_width_DASH_factor,null,cljs.core.cst$kw$hang_DASH_expand,null,cljs.core.cst$kw$pair_DASH_hang_QMARK_,null,cljs.core.cst$kw$constant_DASH_pair_DASH_min,null,cljs.core.cst$kw$respect_DASH_nl_QMARK_,null,cljs.core.cst$kw$respect_DASH_bl_QMARK_,null,cljs.core.cst$kw$hang_DASH_accept,null,cljs.core.cst$kw$hang_DASH_avoid,null,cljs.core.cst$kw$hang_DASH_diff,null,cljs.core.cst$kw$constant_DASH_pair_DASH_fn,null,cljs.core.cst$kw$hang_QMARK_,null,cljs.core.cst$kw$indent_DASH_only_QMARK_,null,cljs.core.cst$kw$return_DASH_altered_DASH_zipper,null,cljs.core.cst$kw$replacement_DASH_string,null,cljs.core.cst$kw$indent_DASH_only_DASH_style,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29781){
return cljs.core.map_QMARK_(G__29781);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 20, [cljs.core.cst$kw$hang_DASH_size,"null",cljs.core.cst$kw$indent_DASH_arg,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$constant_DASH_pair_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$pair_DASH_hang_QMARK_,"null",cljs.core.cst$kw$constant_DASH_pair_DASH_min,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_avoid,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$constant_DASH_pair_DASH_fn,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$return_DASH_altered_DASH_zipper,"null",cljs.core.cst$kw$replacement_DASH_string,"null",cljs.core.cst$kw$indent_DASH_only_DASH_style,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_vector_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_list,cljs.core.cst$kw$zprint$spec_SLASH_list);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_map,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_adjust,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_depth_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore_DASH_silent,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_unlift_DASH_ns_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_adjust,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_depth_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore_DASH_silent,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_unlift_DASH_ns_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 30, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$key_DASH_depth_DASH_color,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$comma_QMARK_,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$key_DASH_value_DASH_color,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$key_DASH_ignore_DASH_silent,"null",cljs.core.cst$kw$key_DASH_order,"null",cljs.core.cst$kw$key_DASH_ignore,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$lift_DASH_ns_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$hang_DASH_adjust,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$key_DASH_color,"null",cljs.core.cst$kw$lift_DASH_ns_QMARK_,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$unlift_DASH_ns_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_adjust,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_depth_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore_DASH_silent,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_unlift_DASH_ns_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29782){
return cljs.core.map_QMARK_(G__29782);
})], null),(function (G__29782){
return cljs.core.map_QMARK_(G__29782);
}),new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$comma_QMARK_,cljs.core.cst$kw$flow_QMARK_,cljs.core.cst$kw$force_DASH_nl_QMARK_,cljs.core.cst$kw$hang_DASH_adjust,cljs.core.cst$kw$hang_DASH_diff,cljs.core.cst$kw$hang_DASH_accept,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,cljs.core.cst$kw$ha_DASH_width_DASH_factor,cljs.core.cst$kw$hang_DASH_expand,cljs.core.cst$kw$hang_QMARK_,cljs.core.cst$kw$indent,cljs.core.cst$kw$indent_DASH_only_QMARK_,cljs.core.cst$kw$justify_QMARK_,cljs.core.cst$kw$justify_DASH_hang,cljs.core.cst$kw$justify_DASH_tuning,cljs.core.cst$kw$key_DASH_color,cljs.core.cst$kw$key_DASH_value_DASH_color,cljs.core.cst$kw$key_DASH_depth_DASH_color,cljs.core.cst$kw$key_DASH_ignore,cljs.core.cst$kw$key_DASH_ignore_DASH_silent,cljs.core.cst$kw$key_DASH_order,cljs.core.cst$kw$lift_DASH_ns_QMARK_,cljs.core.cst$kw$lift_DASH_ns_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$nl_DASH_separator_QMARK_,cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,cljs.core.cst$kw$respect_DASH_bl_QMARK_,cljs.core.cst$kw$respect_DASH_nl_QMARK_,cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$sort_QMARK_,cljs.core.cst$kw$unlift_DASH_ns_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_adjust,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_value_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_depth_DASH_color,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_ignore_DASH_silent,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_lift_DASH_ns_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_unlift_DASH_ns_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 30, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$key_DASH_depth_DASH_color,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$comma_QMARK_,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$key_DASH_value_DASH_color,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$key_DASH_ignore_DASH_silent,"null",cljs.core.cst$kw$key_DASH_order,"null",cljs.core.cst$kw$key_DASH_ignore,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$lift_DASH_ns_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$hang_DASH_adjust,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$key_DASH_color,"null",cljs.core.cst$kw$lift_DASH_ns_QMARK_,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$unlift_DASH_ns_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 30, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$key_DASH_depth_DASH_color,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$comma_QMARK_,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$key_DASH_value_DASH_color,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$key_DASH_ignore_DASH_silent,"null",cljs.core.cst$kw$key_DASH_order,"null",cljs.core.cst$kw$key_DASH_ignore,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$lift_DASH_ns_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$hang_DASH_adjust,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$key_DASH_color,"null",cljs.core.cst$kw$lift_DASH_ns_QMARK_,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$unlift_DASH_ns_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 30, [cljs.core.cst$kw$flow_QMARK_,null,cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,null,cljs.core.cst$kw$nl_DASH_separator_QMARK_,null,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,null,cljs.core.cst$kw$key_DASH_depth_DASH_color,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$comma_QMARK_,null,cljs.core.cst$kw$justify_QMARK_,null,cljs.core.cst$kw$justify_DASH_tuning,null,cljs.core.cst$kw$ha_DASH_width_DASH_factor,null,cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,null,cljs.core.cst$kw$hang_DASH_expand,null,cljs.core.cst$kw$key_DASH_value_DASH_color,null,cljs.core.cst$kw$force_DASH_nl_QMARK_,null,cljs.core.cst$kw$respect_DASH_nl_QMARK_,null,cljs.core.cst$kw$key_DASH_ignore_DASH_silent,null,cljs.core.cst$kw$key_DASH_order,null,cljs.core.cst$kw$key_DASH_ignore,null,cljs.core.cst$kw$respect_DASH_bl_QMARK_,null,cljs.core.cst$kw$hang_DASH_accept,null,cljs.core.cst$kw$hang_DASH_diff,null,cljs.core.cst$kw$lift_DASH_ns_DASH_in_DASH_code_QMARK_,null,cljs.core.cst$kw$hang_DASH_adjust,null,cljs.core.cst$kw$justify_DASH_hang,null,cljs.core.cst$kw$key_DASH_color,null,cljs.core.cst$kw$lift_DASH_ns_QMARK_,null,cljs.core.cst$kw$hang_QMARK_,null,cljs.core.cst$kw$indent_DASH_only_QMARK_,null,cljs.core.cst$kw$unlift_DASH_ns_QMARK_,null,cljs.core.cst$kw$sort_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29783){
return cljs.core.map_QMARK_(G__29783);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 30, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$key_DASH_depth_DASH_color,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$comma_QMARK_,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$key_DASH_value_DASH_color,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$key_DASH_ignore_DASH_silent,"null",cljs.core.cst$kw$key_DASH_order,"null",cljs.core.cst$kw$key_DASH_ignore,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$lift_DASH_ns_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$hang_DASH_adjust,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$key_DASH_color,"null",cljs.core.cst$kw$lift_DASH_ns_QMARK_,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$unlift_DASH_ns_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth_DASH_string,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_count,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_depth,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_span,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_length,cljs.core.cst$kw$zprint$spec_SLASH_number_DASH_or_DASH_vector_DASH_of_DASH_numbers,cljs.core.cst$kw$zprint$spec_SLASH_number_DASH_or_DASH_vector_DASH_of_DASH_numbers);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_object,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29784){
return cljs.core.map_QMARK_(G__29784);
})], null),(function (G__29784){
return cljs.core.map_QMARK_(G__29784);
}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$indent,cljs.core.cst$kw$wrap_DASH_coll_QMARK_,cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29785){
return cljs.core.map_QMARK_(G__29785);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_old_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_more_DASH_options,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_options),cljs.spec.alpha.nilable_impl(cljs.core.cst$kw$zprint$spec_SLASH_options,cljs.core.cst$kw$zprint$spec_SLASH_options,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_output,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_focus,cljs.core.cst$kw$zprint$spec_SLASH_lines,cljs.core.cst$kw$zprint$spec_SLASH_elide,cljs.core.cst$kw$zprint$spec_SLASH_paths], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_focus,cljs.core.cst$kw$zprint$spec_SLASH_lines,cljs.core.cst$kw$zprint$spec_SLASH_elide,cljs.core.cst$kw$zprint$spec_SLASH_paths], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$lines,"null",cljs.core.cst$kw$paths,"null",cljs.core.cst$kw$elide,"null",cljs.core.cst$kw$focus,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_focus,cljs.core.cst$kw$zprint$spec_SLASH_lines,cljs.core.cst$kw$zprint$spec_SLASH_elide,cljs.core.cst$kw$zprint$spec_SLASH_paths], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29786){
return cljs.core.map_QMARK_(G__29786);
})], null),(function (G__29786){
return cljs.core.map_QMARK_(G__29786);
}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$focus,cljs.core.cst$kw$lines,cljs.core.cst$kw$elide,cljs.core.cst$kw$paths], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_focus,cljs.core.cst$kw$zprint$spec_SLASH_lines,cljs.core.cst$kw$zprint$spec_SLASH_elide,cljs.core.cst$kw$zprint$spec_SLASH_paths], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$lines,"null",cljs.core.cst$kw$paths,"null",cljs.core.cst$kw$elide,"null",cljs.core.cst$kw$focus,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$lines,"null",cljs.core.cst$kw$paths,"null",cljs.core.cst$kw$elide,"null",cljs.core.cst$kw$focus,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$lines,null,cljs.core.cst$kw$paths,null,cljs.core.cst$kw$elide,null,cljs.core.cst$kw$focus,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29787){
return cljs.core.map_QMARK_(G__29787);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$lines,"null",cljs.core.cst$kw$paths,"null",cljs.core.cst$kw$elide,"null",cljs.core.cst$kw$focus,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_pair,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29788){
return cljs.core.map_QMARK_(G__29788);
})], null),(function (G__29788){
return cljs.core.map_QMARK_(G__29788);
}),new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$flow_QMARK_,cljs.core.cst$kw$force_DASH_nl_QMARK_,cljs.core.cst$kw$hang_DASH_diff,cljs.core.cst$kw$hang_DASH_expand,cljs.core.cst$kw$hang_QMARK_,cljs.core.cst$kw$hang_DASH_accept,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,cljs.core.cst$kw$ha_DASH_width_DASH_factor,cljs.core.cst$kw$indent,cljs.core.cst$kw$justify_QMARK_,cljs.core.cst$kw$justify_DASH_hang,cljs.core.cst$kw$justify_DASH_tuning,cljs.core.cst$kw$nl_DASH_separator_QMARK_,cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_flow_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_accept,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_depth_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_ha_DASH_width_DASH_factor,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_justify_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_hang,cljs.core.cst$kw$zprint$spec_SLASH_justify_DASH_tuning,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_nl_DASH_separator_DASH_all_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,null,cljs.core.cst$kw$nl_DASH_separator_QMARK_,null,cljs.core.cst$kw$ha_DASH_depth_DASH_factor,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$justify_QMARK_,null,cljs.core.cst$kw$justify_DASH_tuning,null,cljs.core.cst$kw$ha_DASH_width_DASH_factor,null,cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,null,cljs.core.cst$kw$hang_DASH_expand,null,cljs.core.cst$kw$force_DASH_nl_QMARK_,null,cljs.core.cst$kw$hang_DASH_accept,null,cljs.core.cst$kw$hang_DASH_diff,null,cljs.core.cst$kw$justify_DASH_hang,null,cljs.core.cst$kw$hang_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29789){
return cljs.core.map_QMARK_(G__29789);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 14, [cljs.core.cst$kw$flow_QMARK_,"null",cljs.core.cst$kw$nl_DASH_separator_QMARK_,"null",cljs.core.cst$kw$ha_DASH_depth_DASH_factor,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$justify_QMARK_,"null",cljs.core.cst$kw$justify_DASH_tuning,"null",cljs.core.cst$kw$ha_DASH_width_DASH_factor,"null",cljs.core.cst$kw$nl_DASH_separator_DASH_all_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$hang_DASH_accept,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$justify_DASH_hang,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_fn,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_size,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29790){
return cljs.core.map_QMARK_(G__29790);
})], null),(function (G__29790){
return cljs.core.map_QMARK_(G__29790);
}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$hang_DASH_diff,cljs.core.cst$kw$hang_DASH_expand,cljs.core.cst$kw$hang_DASH_size,cljs.core.cst$kw$hang_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_size,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_size,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_size,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_size,null,cljs.core.cst$kw$hang_DASH_expand,null,cljs.core.cst$kw$hang_DASH_diff,null,cljs.core.cst$kw$hang_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29791){
return cljs.core.map_QMARK_(G__29791);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$hang_DASH_size,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_parse,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_interpose,cljs.core.cst$kw$zprint$spec_SLASH_left_DASH_space], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_interpose,cljs.core.cst$kw$zprint$spec_SLASH_left_DASH_space], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$left_DASH_space,"null",cljs.core.cst$kw$interpose,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_interpose,cljs.core.cst$kw$zprint$spec_SLASH_left_DASH_space], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29792){
return cljs.core.map_QMARK_(G__29792);
})], null),(function (G__29792){
return cljs.core.map_QMARK_(G__29792);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$interpose,cljs.core.cst$kw$left_DASH_space], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_interpose,cljs.core.cst$kw$zprint$spec_SLASH_left_DASH_space], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$left_DASH_space,"null",cljs.core.cst$kw$interpose,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$left_DASH_space,"null",cljs.core.cst$kw$interpose,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$left_DASH_space,null,cljs.core.cst$kw$interpose,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29793){
return cljs.core.map_QMARK_(G__29793);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$left_DASH_space,"null",cljs.core.cst$kw$interpose,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_perf_DASH_vs_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number,cljs.core.cst$kw$zprint$spec_SLASH_nilable_DASH_number);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_process_DASH_bang_DASH_zprint_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_promise,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29794){
return cljs.core.map_QMARK_(G__29794);
})], null),(function (G__29794){
return cljs.core.map_QMARK_(G__29794);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$object_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_object_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29795){
return cljs.core.map_QMARK_(G__29795);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$object_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_reader_DASH_cond,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$comma_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$key_DASH_order,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29796){
return cljs.core.map_QMARK_(G__29796);
})], null),(function (G__29796){
return cljs.core.map_QMARK_(G__29796);
}),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$comma_QMARK_,cljs.core.cst$kw$force_DASH_nl_QMARK_,cljs.core.cst$kw$hang_DASH_diff,cljs.core.cst$kw$hang_DASH_expand,cljs.core.cst$kw$hang_QMARK_,cljs.core.cst$kw$indent,cljs.core.cst$kw$key_DASH_order,cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$sort_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_comma_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_diff,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_expand,cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_key_DASH_order,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$comma_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$key_DASH_order,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$comma_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$key_DASH_order,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$comma_QMARK_,null,cljs.core.cst$kw$hang_DASH_expand,null,cljs.core.cst$kw$force_DASH_nl_QMARK_,null,cljs.core.cst$kw$key_DASH_order,null,cljs.core.cst$kw$hang_DASH_diff,null,cljs.core.cst$kw$hang_QMARK_,null,cljs.core.cst$kw$sort_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29797){
return cljs.core.map_QMARK_(G__29797);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$comma_QMARK_,"null",cljs.core.cst$kw$hang_DASH_expand,"null",cljs.core.cst$kw$force_DASH_nl_QMARK_,"null",cljs.core.cst$kw$key_DASH_order,"null",cljs.core.cst$kw$hang_DASH_diff,"null",cljs.core.cst$kw$hang_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_record,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_record_DASH_type_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_to_DASH_string_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_record_DASH_type_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_to_DASH_string_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$record_DASH_type_QMARK_,"null",cljs.core.cst$kw$to_DASH_string_QMARK_,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_record_DASH_type_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_to_DASH_string_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29798){
return cljs.core.map_QMARK_(G__29798);
})], null),(function (G__29798){
return cljs.core.map_QMARK_(G__29798);
}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$hang_QMARK_,cljs.core.cst$kw$record_DASH_type_QMARK_,cljs.core.cst$kw$to_DASH_string_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_record_DASH_type_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_to_DASH_string_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$record_DASH_type_QMARK_,"null",cljs.core.cst$kw$to_DASH_string_QMARK_,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$record_DASH_type_QMARK_,"null",cljs.core.cst$kw$to_DASH_string_QMARK_,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$record_DASH_type_QMARK_,null,cljs.core.cst$kw$to_DASH_string_QMARK_,null,cljs.core.cst$kw$hang_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29799){
return cljs.core.map_QMARK_(G__29799);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$record_DASH_type_QMARK_,"null",cljs.core.cst$kw$to_DASH_string_QMARK_,"null",cljs.core.cst$kw$hang_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_remove,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$alt_SLASH_extend], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$alt_SLASH_extend], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_force_DASH_nl,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$alt_SLASH_extend], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29800){
return cljs.core.map_QMARK_(G__29800);
})], null),(function (G__29800){
return cljs.core.map_QMARK_(G__29800);
}),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$fn_DASH_force_DASH_nl,cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$extend], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$alt_SLASH_extend], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_force_DASH_nl,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_force_DASH_nl,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_force_DASH_nl,null,cljs.core.cst$kw$extend,null,cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,null,cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29801){
return cljs.core.map_QMARK_(G__29801);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [cljs.core.cst$kw$fn_DASH_force_DASH_nl,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_next_DASH_inner,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_options),cljs.spec.alpha.nilable_impl(cljs.core.cst$kw$zprint$spec_SLASH_options,cljs.core.cst$kw$zprint$spec_SLASH_options,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_cvec_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_script,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_more_DASH_options], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_more_DASH_options], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$more_DASH_options,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_more_DASH_options], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29802){
return cljs.core.map_QMARK_(G__29802);
})], null),(function (G__29802){
return cljs.core.map_QMARK_(G__29802);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$more_DASH_options], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_more_DASH_options], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$more_DASH_options,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$more_DASH_options,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$more_DASH_options,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29803){
return cljs.core.map_QMARK_(G__29803);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$more_DASH_options,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_set,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29804){
return cljs.core.map_QMARK_(G__29804);
})], null),(function (G__29804){
return cljs.core.map_QMARK_(G__29804);
}),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$indent,cljs.core.cst$kw$indent_DASH_only_QMARK_,cljs.core.cst$kw$respect_DASH_bl_QMARK_,cljs.core.cst$kw$respect_DASH_nl_QMARK_,cljs.core.cst$kw$sort_QMARK_,cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$wrap_DASH_coll_QMARK_,cljs.core.cst$kw$wrap_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_sort_DASH_in_DASH_code_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,null,cljs.core.cst$kw$wrap_DASH_coll_QMARK_,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$respect_DASH_nl_QMARK_,null,cljs.core.cst$kw$respect_DASH_bl_QMARK_,null,cljs.core.cst$kw$wrap_QMARK_,null,cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,null,cljs.core.cst$kw$indent_DASH_only_QMARK_,null,cljs.core.cst$kw$sort_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29805){
return cljs.core.map_QMARK_(G__29805);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [cljs.core.cst$kw$sort_DASH_in_DASH_code_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$wrap_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null",cljs.core.cst$kw$sort_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_spaces_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_spec,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_docstring_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_value], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_docstring_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_value], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$value,"null",cljs.core.cst$kw$docstring_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_docstring_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_value], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29806){
return cljs.core.map_QMARK_(G__29806);
})], null),(function (G__29806){
return cljs.core.map_QMARK_(G__29806);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$docstring_QMARK_,cljs.core.cst$kw$value], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_docstring_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_value], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$value,"null",cljs.core.cst$kw$docstring_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$value,"null",cljs.core.cst$kw$docstring_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$value,null,cljs.core.cst$kw$docstring_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29807){
return cljs.core.map_QMARK_(G__29807);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$value,"null",cljs.core.cst$kw$docstring_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_style,cljs.core.cst$kw$zprint$spec_SLASH_style_DASH_value,cljs.core.cst$kw$zprint$spec_SLASH_style_DASH_value);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_styles_DASH_applied,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.cst$kw$zprint$spec_SLASH_vec_DASH_or_DASH_list_DASH_of_DASH_keyword),cljs.spec.alpha.nilable_impl(cljs.core.cst$kw$zprint$spec_SLASH_vec_DASH_or_DASH_list_DASH_of_DASH_keyword,cljs.core.cst$kw$zprint$spec_SLASH_vec_DASH_or_DASH_list_DASH_of_DASH_keyword,null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_style_DASH_map,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_nilable,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_options)),cljs.spec.alpha.nilable_impl(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_options),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,cljs.core.cst$sym$keyword_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_options),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_options], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_options], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29808){
return cljs.core.map_QMARK_(G__29808);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,cljs.core.cst$sym$cljs$core_SLASH_keyword_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_options)], null),null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_tab,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_expand_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_size], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_expand_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_size], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$expand_QMARK_,"null",cljs.core.cst$kw$size,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_expand_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_size], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29809){
return cljs.core.map_QMARK_(G__29809);
})], null),(function (G__29809){
return cljs.core.map_QMARK_(G__29809);
}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$expand_QMARK_,cljs.core.cst$kw$size], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_expand_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_size], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$expand_QMARK_,"null",cljs.core.cst$kw$size,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$expand_QMARK_,"null",cljs.core.cst$kw$size,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$expand_QMARK_,null,cljs.core.cst$kw$size,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29810){
return cljs.core.map_QMARK_(G__29810);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [cljs.core.cst$kw$expand_QMARK_,"null",cljs.core.cst$kw$size,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_trim_DASH_comments_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_tuning,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_if_DASH_equal_DASH_flow_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_if_DASH_equal_DASH_flow_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,"null",cljs.core.cst$kw$hang_DASH_flow,"null",cljs.core.cst$kw$general_DASH_hang_DASH_adjust,"null",cljs.core.cst$kw$hang_DASH_if_DASH_equal_DASH_flow_QMARK_,"null",cljs.core.cst$kw$hang_DASH_flow_DASH_limit,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_if_DASH_equal_DASH_flow_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29811){
return cljs.core.map_QMARK_(G__29811);
})], null),(function (G__29811){
return cljs.core.map_QMARK_(G__29811);
}),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$hang_DASH_flow,cljs.core.cst$kw$hang_DASH_type_DASH_flow,cljs.core.cst$kw$hang_DASH_flow_DASH_limit,cljs.core.cst$kw$general_DASH_hang_DASH_adjust,cljs.core.cst$kw$hang_DASH_if_DASH_equal_DASH_flow_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_type_DASH_flow,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_flow_DASH_limit,cljs.core.cst$kw$zprint$spec_SLASH_general_DASH_hang_DASH_adjust,cljs.core.cst$kw$zprint$spec_SLASH_hang_DASH_if_DASH_equal_DASH_flow_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,"null",cljs.core.cst$kw$hang_DASH_flow,"null",cljs.core.cst$kw$general_DASH_hang_DASH_adjust,"null",cljs.core.cst$kw$hang_DASH_if_DASH_equal_DASH_flow_QMARK_,"null",cljs.core.cst$kw$hang_DASH_flow_DASH_limit,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,"null",cljs.core.cst$kw$hang_DASH_flow,"null",cljs.core.cst$kw$general_DASH_hang_DASH_adjust,"null",cljs.core.cst$kw$hang_DASH_if_DASH_equal_DASH_flow_QMARK_,"null",cljs.core.cst$kw$hang_DASH_flow_DASH_limit,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,null,cljs.core.cst$kw$hang_DASH_flow,null,cljs.core.cst$kw$general_DASH_hang_DASH_adjust,null,cljs.core.cst$kw$hang_DASH_if_DASH_equal_DASH_flow_QMARK_,null,cljs.core.cst$kw$hang_DASH_flow_DASH_limit,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29812){
return cljs.core.map_QMARK_(G__29812);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [cljs.core.cst$kw$hang_DASH_type_DASH_flow,"null",cljs.core.cst$kw$hang_DASH_flow,"null",cljs.core.cst$kw$general_DASH_hang_DASH_adjust,"null",cljs.core.cst$kw$hang_DASH_if_DASH_equal_DASH_flow_QMARK_,"null",cljs.core.cst$kw$hang_DASH_flow_DASH_limit,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$alt_SLASH_uneval,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$color_DASH_map,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29813){
return cljs.core.map_QMARK_(G__29813);
})], null),(function (G__29813){
return cljs.core.map_QMARK_(G__29813);
}),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$color_DASH_map], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$color_DASH_map,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$color_DASH_map,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$color_DASH_map,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29814){
return cljs.core.map_QMARK_(G__29814);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [cljs.core.cst$kw$color_DASH_map,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_value,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map_DASH_value);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_vector,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_binding_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn_DASH_first,cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_binding_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn_DASH_first,cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$option_DASH_fn,"null",cljs.core.cst$kw$wrap_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null",cljs.core.cst$kw$binding_QMARK_,"null",cljs.core.cst$kw$option_DASH_fn_DASH_first,"null",cljs.core.cst$kw$fn_DASH_format,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_binding_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn_DASH_first,cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29815){
return cljs.core.map_QMARK_(G__29815);
})], null),(function (G__29815){
return cljs.core.map_QMARK_(G__29815);
}),new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$indent,cljs.core.cst$kw$binding_QMARK_,cljs.core.cst$kw$respect_DASH_bl_QMARK_,cljs.core.cst$kw$respect_DASH_nl_QMARK_,cljs.core.cst$kw$option_DASH_fn_DASH_first,cljs.core.cst$kw$option_DASH_fn,cljs.core.cst$kw$fn_DASH_format,cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$wrap_DASH_coll_QMARK_,cljs.core.cst$kw$wrap_QMARK_,cljs.core.cst$kw$indent_DASH_only_QMARK_], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_binding_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_bl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_respect_DASH_nl_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn_DASH_first,cljs.core.cst$kw$zprint$spec_SLASH_option_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_after_DASH_multi_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_DASH_coll_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_wrap_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_indent_DASH_only_QMARK_], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$option_DASH_fn,"null",cljs.core.cst$kw$wrap_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null",cljs.core.cst$kw$binding_QMARK_,"null",cljs.core.cst$kw$option_DASH_fn_DASH_first,"null",cljs.core.cst$kw$fn_DASH_format,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$option_DASH_fn,"null",cljs.core.cst$kw$wrap_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null",cljs.core.cst$kw$binding_QMARK_,"null",cljs.core.cst$kw$option_DASH_fn_DASH_first,"null",cljs.core.cst$kw$fn_DASH_format,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$respect_DASH_nl_QMARK_,null,cljs.core.cst$kw$respect_DASH_bl_QMARK_,null,cljs.core.cst$kw$option_DASH_fn,null,cljs.core.cst$kw$wrap_QMARK_,null,cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,null,cljs.core.cst$kw$binding_QMARK_,null,cljs.core.cst$kw$option_DASH_fn_DASH_first,null,cljs.core.cst$kw$fn_DASH_format,null,cljs.core.cst$kw$indent_DASH_only_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29816){
return cljs.core.map_QMARK_(G__29816);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [cljs.core.cst$kw$wrap_DASH_coll_QMARK_,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$respect_DASH_nl_QMARK_,"null",cljs.core.cst$kw$respect_DASH_bl_QMARK_,"null",cljs.core.cst$kw$option_DASH_fn,"null",cljs.core.cst$kw$wrap_QMARK_,"null",cljs.core.cst$kw$wrap_DASH_after_DASH_multi_QMARK_,"null",cljs.core.cst$kw$binding_QMARK_,"null",cljs.core.cst$kw$option_DASH_fn_DASH_first,"null",cljs.core.cst$kw$fn_DASH_format,"null",cljs.core.cst$kw$indent_DASH_only_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_version,cljs.core.cst$sym$cljs$core_SLASH_string_QMARK_,cljs.core.string_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_width,cljs.core.cst$sym$cljs$core_SLASH_number_QMARK_,cljs.core.number_QMARK_);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_url,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_dir,cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_path,cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_secs], null)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_dir,cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_path,cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_secs], null)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cache_DASH_secs,"null",cljs.core.cst$kw$cache_DASH_dir,"null",cljs.core.cst$kw$cache_DASH_path,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_dir,cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_path,cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_secs], null),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29817){
return cljs.core.map_QMARK_(G__29817);
})], null),(function (G__29817){
return cljs.core.map_QMARK_(G__29817);
}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$cache_DASH_dir,cljs.core.cst$kw$cache_DASH_path,cljs.core.cst$kw$cache_DASH_secs], null),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_dir,cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_path,cljs.core.cst$kw$zprint$spec_SLASH_cache_DASH_secs], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cache_DASH_secs,"null",cljs.core.cst$kw$cache_DASH_dir,"null",cljs.core.cst$kw$cache_DASH_path,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cache_DASH_secs,"null",cljs.core.cst$kw$cache_DASH_dir,"null",cljs.core.cst$kw$cache_DASH_path,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cache_DASH_secs,null,cljs.core.cst$kw$cache_DASH_dir,null,cljs.core.cst$kw$cache_DASH_path,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29818){
return cljs.core.map_QMARK_(G__29818);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [cljs.core.cst$kw$cache_DASH_secs,"null",cljs.core.cst$kw$cache_DASH_dir,"null",cljs.core.cst$kw$cache_DASH_path,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_zipper_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_boolean,cljs.core.cst$kw$zprint$spec_SLASH_boolean);
cljs.spec.alpha.def_impl(cljs.core.cst$kw$zprint$spec_SLASH_options,cljs.core.list(cljs.core.cst$sym$zprint$smacros_SLASH_only_DASH_keys,cljs.core.cst$kw$opt_DASH_un,cljs.core.PersistentVector.fromArray([cljs.core.cst$kw$zprint$spec_SLASH_agent,cljs.core.cst$kw$zprint$spec_SLASH_array,cljs.core.cst$kw$zprint$spec_SLASH_atom,cljs.core.cst$kw$zprint$spec_SLASH_binding,cljs.core.cst$kw$zprint$spec_SLASH_cache,cljs.core.cst$kw$zprint$spec_SLASH_color_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map,cljs.core.cst$kw$alt_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_configured_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_local_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_cwd_DASH_zprintrc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_bug_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_print_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_ge,cljs.core.cst$kw$zprint$spec_SLASH_delay,cljs.core.cst$kw$zprint$spec_SLASH_do_DASH_in_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_drop_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_extend,cljs.core.cst$kw$zprint$spec_SLASH_file_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_name,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_obj,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_format,cljs.core.cst$kw$zprint$spec_SLASH_future,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_input,cljs.core.cst$kw$zprint$spec_SLASH_list,cljs.core.cst$kw$zprint$spec_SLASH_map,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth_DASH_string,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_count,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_depth,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_span,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_length,cljs.core.cst$kw$zprint$spec_SLASH_object,cljs.core.cst$kw$zprint$spec_SLASH_old_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_output,cljs.core.cst$kw$zprint$spec_SLASH_pair,cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_parallel_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_parse,cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_perf_DASH_vs_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_process_DASH_bang_DASH_zprint_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_promise,cljs.core.cst$kw$zprint$spec_SLASH_reader_DASH_cond,cljs.core.cst$kw$zprint$spec_SLASH_record,cljs.core.cst$kw$zprint$spec_SLASH_remove,cljs.core.cst$kw$zprint$spec_SLASH_next_DASH_inner,cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_cvec_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_search_DASH_config_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_set,cljs.core.cst$kw$zprint$spec_SLASH_spaces_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_script,cljs.core.cst$kw$zprint$spec_SLASH_spec,cljs.core.cst$kw$zprint$spec_SLASH_style,cljs.core.cst$kw$zprint$spec_SLASH_styles_DASH_applied,cljs.core.cst$kw$zprint$spec_SLASH_style_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_tab,cljs.core.cst$kw$zprint$spec_SLASH_test_DASH_for_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_trim_DASH_comments_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_tuning,cljs.core.cst$kw$alt_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_vector,cljs.core.cst$kw$zprint$spec_SLASH_vector_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_version,cljs.core.cst$kw$zprint$spec_SLASH_width,cljs.core.cst$kw$zprint$spec_SLASH_url,cljs.core.cst$kw$zprint$spec_SLASH_zipper_QMARK_], true)),cljs.spec.alpha.merge_spec_impl(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_keys,cljs.core.cst$kw$opt_DASH_un,cljs.core.PersistentVector.fromArray([cljs.core.cst$kw$zprint$spec_SLASH_agent,cljs.core.cst$kw$zprint$spec_SLASH_array,cljs.core.cst$kw$zprint$spec_SLASH_atom,cljs.core.cst$kw$zprint$spec_SLASH_binding,cljs.core.cst$kw$zprint$spec_SLASH_cache,cljs.core.cst$kw$zprint$spec_SLASH_color_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map,cljs.core.cst$kw$alt_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_configured_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_local_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_cwd_DASH_zprintrc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_bug_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_print_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_ge,cljs.core.cst$kw$zprint$spec_SLASH_delay,cljs.core.cst$kw$zprint$spec_SLASH_do_DASH_in_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_drop_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_extend,cljs.core.cst$kw$zprint$spec_SLASH_file_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_name,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_obj,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_format,cljs.core.cst$kw$zprint$spec_SLASH_future,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_input,cljs.core.cst$kw$zprint$spec_SLASH_list,cljs.core.cst$kw$zprint$spec_SLASH_map,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth_DASH_string,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_count,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_depth,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_span,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_length,cljs.core.cst$kw$zprint$spec_SLASH_object,cljs.core.cst$kw$zprint$spec_SLASH_old_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_output,cljs.core.cst$kw$zprint$spec_SLASH_pair,cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_parallel_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_parse,cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_perf_DASH_vs_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_process_DASH_bang_DASH_zprint_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_promise,cljs.core.cst$kw$zprint$spec_SLASH_reader_DASH_cond,cljs.core.cst$kw$zprint$spec_SLASH_record,cljs.core.cst$kw$zprint$spec_SLASH_remove,cljs.core.cst$kw$zprint$spec_SLASH_next_DASH_inner,cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_cvec_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_search_DASH_config_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_set,cljs.core.cst$kw$zprint$spec_SLASH_spaces_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_script,cljs.core.cst$kw$zprint$spec_SLASH_spec,cljs.core.cst$kw$zprint$spec_SLASH_style,cljs.core.cst$kw$zprint$spec_SLASH_styles_DASH_applied,cljs.core.cst$kw$zprint$spec_SLASH_style_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_tab,cljs.core.cst$kw$zprint$spec_SLASH_test_DASH_for_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_trim_DASH_comments_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_tuning,cljs.core.cst$kw$alt_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_vector,cljs.core.cst$kw$zprint$spec_SLASH_vector_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_version,cljs.core.cst$kw$zprint$spec_SLASH_width,cljs.core.cst$kw$zprint$spec_SLASH_url,cljs.core.cst$kw$zprint$spec_SLASH_zipper_QMARK_], true)),cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 76, [cljs.core.cst$kw$old_QMARK_,"null",cljs.core.cst$kw$format,"null",cljs.core.cst$kw$remove,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$max_DASH_length,"null",cljs.core.cst$kw$tuning,"null",cljs.core.cst$kw$fn_DASH_force_DASH_nl,"null",cljs.core.cst$kw$max_DASH_hang_DASH_depth,"null",cljs.core.cst$kw$future,"null",cljs.core.cst$kw$max_DASH_depth_DASH_string,"null",cljs.core.cst$kw$user_DASH_fn_DASH_map,"null",cljs.core.cst$kw$next_DASH_inner,"null",cljs.core.cst$kw$pair_DASH_fn,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$script,"null",cljs.core.cst$kw$promise,"null",cljs.core.cst$kw$spaces_QMARK_,"null",cljs.core.cst$kw$pair,"null",cljs.core.cst$kw$configured_QMARK_,"null",cljs.core.cst$kw$dbg_DASH_ge,"null",cljs.core.cst$kw$width,"null",cljs.core.cst$kw$uneval,"null",cljs.core.cst$kw$fn_DASH_name,"null",cljs.core.cst$kw$color_DASH_map,"null",cljs.core.cst$kw$color_QMARK_,"null",cljs.core.cst$kw$output,"null",cljs.core.cst$kw$agent,"null",cljs.core.cst$kw$do_DASH_in_DASH_hang_QMARK_,"null",cljs.core.cst$kw$search_DASH_config_QMARK_,"null",cljs.core.cst$kw$vector,"null",cljs.core.cst$kw$array,"null",cljs.core.cst$kw$styles_DASH_applied,"null",cljs.core.cst$kw$parse_DASH_string_DASH_all_QMARK_,"null",cljs.core.cst$kw$style,"null",cljs.core.cst$kw$dbg_DASH_print_QMARK_,"null",cljs.core.cst$kw$file_QMARK_,"null",cljs.core.cst$kw$fn_DASH_obj,"null",cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$spec,"null",cljs.core.cst$kw$test_DASH_for_DASH_eol_DASH_blanks_QMARK_,"null",cljs.core.cst$kw$binding,"null",cljs.core.cst$kw$cache,"null",cljs.core.cst$kw$dbg_DASH_local_QMARK_,"null",cljs.core.cst$kw$dbg_QMARK_,"null",cljs.core.cst$kw$list,"null",cljs.core.cst$kw$trim_DASH_comments_QMARK_,"null",cljs.core.cst$kw$max_DASH_hang_DASH_span,"null",cljs.core.cst$kw$record,"null",cljs.core.cst$kw$comment,"null",cljs.core.cst$kw$parse,"null",cljs.core.cst$kw$cwd_DASH_zprintrc_QMARK_,"null",cljs.core.cst$kw$parse_DASH_string_QMARK_,"null",cljs.core.cst$kw$url,"null",cljs.core.cst$kw$perf_DASH_vs_DASH_format,"null",cljs.core.cst$kw$style_DASH_map,"null",cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,"null",cljs.core.cst$kw$process_DASH_bang_DASH_zprint_QMARK_,"null",cljs.core.cst$kw$max_DASH_depth,"null",cljs.core.cst$kw$input,"null",cljs.core.cst$kw$vector_DASH_fn,"null",cljs.core.cst$kw$drop_QMARK_,"null",cljs.core.cst$kw$set,"null",cljs.core.cst$kw$dbg_DASH_bug_QMARK_,"null",cljs.core.cst$kw$fn_DASH_map,"null",cljs.core.cst$kw$version,"null",cljs.core.cst$kw$atom,"null",cljs.core.cst$kw$force_DASH_eol_DASH_blanks_QMARK_,"null",cljs.core.cst$kw$tab,"null",cljs.core.cst$kw$max_DASH_hang_DASH_count,"null",cljs.core.cst$kw$parallel_QMARK_,"null",cljs.core.cst$kw$delay,"null",cljs.core.cst$kw$map,"null",cljs.core.cst$kw$object,"null",cljs.core.cst$kw$reader_DASH_cond,"null",cljs.core.cst$kw$return_DASH_cvec_QMARK_,"null",cljs.core.cst$kw$zipper_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.spec.alpha.map_spec_impl(cljs.core.PersistentHashMap.fromArrays([cljs.core.cst$kw$req_DASH_un,cljs.core.cst$kw$opt_DASH_un,cljs.core.cst$kw$gfn,cljs.core.cst$kw$pred_DASH_exprs,cljs.core.cst$kw$keys_DASH_pred,cljs.core.cst$kw$opt_DASH_keys,cljs.core.cst$kw$req_DASH_specs,cljs.core.cst$kw$req,cljs.core.cst$kw$req_DASH_keys,cljs.core.cst$kw$opt_DASH_specs,cljs.core.cst$kw$pred_DASH_forms,cljs.core.cst$kw$opt],[null,cljs.core.PersistentVector.fromArray([cljs.core.cst$kw$zprint$spec_SLASH_agent,cljs.core.cst$kw$zprint$spec_SLASH_array,cljs.core.cst$kw$zprint$spec_SLASH_atom,cljs.core.cst$kw$zprint$spec_SLASH_binding,cljs.core.cst$kw$zprint$spec_SLASH_cache,cljs.core.cst$kw$zprint$spec_SLASH_color_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map,cljs.core.cst$kw$alt_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_configured_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_local_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_cwd_DASH_zprintrc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_bug_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_print_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_ge,cljs.core.cst$kw$zprint$spec_SLASH_delay,cljs.core.cst$kw$zprint$spec_SLASH_do_DASH_in_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_drop_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_extend,cljs.core.cst$kw$zprint$spec_SLASH_file_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_name,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_obj,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_format,cljs.core.cst$kw$zprint$spec_SLASH_future,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_input,cljs.core.cst$kw$zprint$spec_SLASH_list,cljs.core.cst$kw$zprint$spec_SLASH_map,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth_DASH_string,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_count,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_depth,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_span,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_length,cljs.core.cst$kw$zprint$spec_SLASH_object,cljs.core.cst$kw$zprint$spec_SLASH_old_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_output,cljs.core.cst$kw$zprint$spec_SLASH_pair,cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_parallel_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_parse,cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_perf_DASH_vs_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_process_DASH_bang_DASH_zprint_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_promise,cljs.core.cst$kw$zprint$spec_SLASH_reader_DASH_cond,cljs.core.cst$kw$zprint$spec_SLASH_record,cljs.core.cst$kw$zprint$spec_SLASH_remove,cljs.core.cst$kw$zprint$spec_SLASH_next_DASH_inner,cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_cvec_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_search_DASH_config_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_set,cljs.core.cst$kw$zprint$spec_SLASH_spaces_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_script,cljs.core.cst$kw$zprint$spec_SLASH_spec,cljs.core.cst$kw$zprint$spec_SLASH_style,cljs.core.cst$kw$zprint$spec_SLASH_styles_DASH_applied,cljs.core.cst$kw$zprint$spec_SLASH_style_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_tab,cljs.core.cst$kw$zprint$spec_SLASH_test_DASH_for_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_trim_DASH_comments_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_tuning,cljs.core.cst$kw$alt_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_vector,cljs.core.cst$kw$zprint$spec_SLASH_vector_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_version,cljs.core.cst$kw$zprint$spec_SLASH_width,cljs.core.cst$kw$zprint$spec_SLASH_url,cljs.core.cst$kw$zprint$spec_SLASH_zipper_QMARK_], true),null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (G__29819){
return cljs.core.map_QMARK_(G__29819);
})], null),(function (G__29819){
return cljs.core.map_QMARK_(G__29819);
}),cljs.core.PersistentVector.fromArray([cljs.core.cst$kw$agent,cljs.core.cst$kw$array,cljs.core.cst$kw$atom,cljs.core.cst$kw$binding,cljs.core.cst$kw$cache,cljs.core.cst$kw$color_QMARK_,cljs.core.cst$kw$color_DASH_map,cljs.core.cst$kw$comment,cljs.core.cst$kw$configured_QMARK_,cljs.core.cst$kw$dbg_QMARK_,cljs.core.cst$kw$dbg_DASH_local_QMARK_,cljs.core.cst$kw$cwd_DASH_zprintrc_QMARK_,cljs.core.cst$kw$dbg_DASH_bug_QMARK_,cljs.core.cst$kw$dbg_DASH_print_QMARK_,cljs.core.cst$kw$dbg_DASH_ge,cljs.core.cst$kw$delay,cljs.core.cst$kw$do_DASH_in_DASH_hang_QMARK_,cljs.core.cst$kw$drop_QMARK_,cljs.core.cst$kw$extend,cljs.core.cst$kw$file_QMARK_,cljs.core.cst$kw$fn_DASH_force_DASH_nl,cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$fn_DASH_map,cljs.core.cst$kw$fn_DASH_name,cljs.core.cst$kw$fn_DASH_obj,cljs.core.cst$kw$force_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$format,cljs.core.cst$kw$future,cljs.core.cst$kw$indent,cljs.core.cst$kw$input,cljs.core.cst$kw$list,cljs.core.cst$kw$map,cljs.core.cst$kw$max_DASH_depth,cljs.core.cst$kw$max_DASH_depth_DASH_string,cljs.core.cst$kw$max_DASH_hang_DASH_count,cljs.core.cst$kw$max_DASH_hang_DASH_depth,cljs.core.cst$kw$max_DASH_hang_DASH_span,cljs.core.cst$kw$max_DASH_length,cljs.core.cst$kw$object,cljs.core.cst$kw$old_QMARK_,cljs.core.cst$kw$output,cljs.core.cst$kw$pair,cljs.core.cst$kw$pair_DASH_fn,cljs.core.cst$kw$parallel_QMARK_,cljs.core.cst$kw$parse,cljs.core.cst$kw$parse_DASH_string_DASH_all_QMARK_,cljs.core.cst$kw$parse_DASH_string_QMARK_,cljs.core.cst$kw$perf_DASH_vs_DASH_format,cljs.core.cst$kw$process_DASH_bang_DASH_zprint_QMARK_,cljs.core.cst$kw$promise,cljs.core.cst$kw$reader_DASH_cond,cljs.core.cst$kw$record,cljs.core.cst$kw$remove,cljs.core.cst$kw$next_DASH_inner,cljs.core.cst$kw$return_DASH_cvec_QMARK_,cljs.core.cst$kw$search_DASH_config_QMARK_,cljs.core.cst$kw$set,cljs.core.cst$kw$spaces_QMARK_,cljs.core.cst$kw$script,cljs.core.cst$kw$spec,cljs.core.cst$kw$style,cljs.core.cst$kw$styles_DASH_applied,cljs.core.cst$kw$style_DASH_map,cljs.core.cst$kw$tab,cljs.core.cst$kw$test_DASH_for_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$trim_DASH_comments_QMARK_,cljs.core.cst$kw$tuning,cljs.core.cst$kw$uneval,cljs.core.cst$kw$user_DASH_fn_DASH_map,cljs.core.cst$kw$vector,cljs.core.cst$kw$vector_DASH_fn,cljs.core.cst$kw$version,cljs.core.cst$kw$width,cljs.core.cst$kw$url,cljs.core.cst$kw$zipper_QMARK_], true),cljs.core.PersistentVector.EMPTY,null,cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.fromArray([cljs.core.cst$kw$zprint$spec_SLASH_agent,cljs.core.cst$kw$zprint$spec_SLASH_array,cljs.core.cst$kw$zprint$spec_SLASH_atom,cljs.core.cst$kw$zprint$spec_SLASH_binding,cljs.core.cst$kw$zprint$spec_SLASH_cache,cljs.core.cst$kw$zprint$spec_SLASH_color_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_color_DASH_map,cljs.core.cst$kw$alt_SLASH_comment,cljs.core.cst$kw$zprint$spec_SLASH_configured_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_local_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_cwd_DASH_zprintrc_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_bug_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_print_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_dbg_DASH_ge,cljs.core.cst$kw$zprint$spec_SLASH_delay,cljs.core.cst$kw$zprint$spec_SLASH_do_DASH_in_DASH_hang_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_drop_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_extend,cljs.core.cst$kw$zprint$spec_SLASH_file_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt2_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_gt3_DASH_force_DASH_nl,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_name,cljs.core.cst$kw$zprint$spec_SLASH_fn_DASH_obj,cljs.core.cst$kw$zprint$spec_SLASH_force_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_format,cljs.core.cst$kw$zprint$spec_SLASH_future,cljs.core.cst$kw$zprint$spec_SLASH_indent,cljs.core.cst$kw$zprint$spec_SLASH_input,cljs.core.cst$kw$zprint$spec_SLASH_list,cljs.core.cst$kw$zprint$spec_SLASH_map,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_depth_DASH_string,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_count,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_depth,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_hang_DASH_span,cljs.core.cst$kw$zprint$spec_SLASH_max_DASH_length,cljs.core.cst$kw$zprint$spec_SLASH_object,cljs.core.cst$kw$zprint$spec_SLASH_old_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_output,cljs.core.cst$kw$zprint$spec_SLASH_pair,cljs.core.cst$kw$zprint$spec_SLASH_pair_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_parallel_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_parse,cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_DASH_all_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_parse_DASH_string_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_perf_DASH_vs_DASH_format,cljs.core.cst$kw$zprint$spec_SLASH_process_DASH_bang_DASH_zprint_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_promise,cljs.core.cst$kw$zprint$spec_SLASH_reader_DASH_cond,cljs.core.cst$kw$zprint$spec_SLASH_record,cljs.core.cst$kw$zprint$spec_SLASH_remove,cljs.core.cst$kw$zprint$spec_SLASH_next_DASH_inner,cljs.core.cst$kw$zprint$spec_SLASH_return_DASH_cvec_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_search_DASH_config_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_set,cljs.core.cst$kw$zprint$spec_SLASH_spaces_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_script,cljs.core.cst$kw$zprint$spec_SLASH_spec,cljs.core.cst$kw$zprint$spec_SLASH_style,cljs.core.cst$kw$zprint$spec_SLASH_styles_DASH_applied,cljs.core.cst$kw$zprint$spec_SLASH_style_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_tab,cljs.core.cst$kw$zprint$spec_SLASH_test_DASH_for_DASH_eol_DASH_blanks_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_trim_DASH_comments_QMARK_,cljs.core.cst$kw$zprint$spec_SLASH_tuning,cljs.core.cst$kw$alt_SLASH_uneval,cljs.core.cst$kw$zprint$spec_SLASH_user_DASH_fn_DASH_map,cljs.core.cst$kw$zprint$spec_SLASH_vector,cljs.core.cst$kw$zprint$spec_SLASH_vector_DASH_fn,cljs.core.cst$kw$zprint$spec_SLASH_version,cljs.core.cst$kw$zprint$spec_SLASH_width,cljs.core.cst$kw$zprint$spec_SLASH_url,cljs.core.cst$kw$zprint$spec_SLASH_zipper_QMARK_], true),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_fn,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.cst$sym$_PERCENT_], null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$sym$_PERCENT_))], null),null])),cljs.spec.alpha.every_impl.cljs$core$IFn$_invoke$arity$4(cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_tuple,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 76, [cljs.core.cst$kw$old_QMARK_,"null",cljs.core.cst$kw$format,"null",cljs.core.cst$kw$remove,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$max_DASH_length,"null",cljs.core.cst$kw$tuning,"null",cljs.core.cst$kw$fn_DASH_force_DASH_nl,"null",cljs.core.cst$kw$max_DASH_hang_DASH_depth,"null",cljs.core.cst$kw$future,"null",cljs.core.cst$kw$max_DASH_depth_DASH_string,"null",cljs.core.cst$kw$user_DASH_fn_DASH_map,"null",cljs.core.cst$kw$next_DASH_inner,"null",cljs.core.cst$kw$pair_DASH_fn,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$script,"null",cljs.core.cst$kw$promise,"null",cljs.core.cst$kw$spaces_QMARK_,"null",cljs.core.cst$kw$pair,"null",cljs.core.cst$kw$configured_QMARK_,"null",cljs.core.cst$kw$dbg_DASH_ge,"null",cljs.core.cst$kw$width,"null",cljs.core.cst$kw$uneval,"null",cljs.core.cst$kw$fn_DASH_name,"null",cljs.core.cst$kw$color_DASH_map,"null",cljs.core.cst$kw$color_QMARK_,"null",cljs.core.cst$kw$output,"null",cljs.core.cst$kw$agent,"null",cljs.core.cst$kw$do_DASH_in_DASH_hang_QMARK_,"null",cljs.core.cst$kw$search_DASH_config_QMARK_,"null",cljs.core.cst$kw$vector,"null",cljs.core.cst$kw$array,"null",cljs.core.cst$kw$styles_DASH_applied,"null",cljs.core.cst$kw$parse_DASH_string_DASH_all_QMARK_,"null",cljs.core.cst$kw$style,"null",cljs.core.cst$kw$dbg_DASH_print_QMARK_,"null",cljs.core.cst$kw$file_QMARK_,"null",cljs.core.cst$kw$fn_DASH_obj,"null",cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$spec,"null",cljs.core.cst$kw$test_DASH_for_DASH_eol_DASH_blanks_QMARK_,"null",cljs.core.cst$kw$binding,"null",cljs.core.cst$kw$cache,"null",cljs.core.cst$kw$dbg_DASH_local_QMARK_,"null",cljs.core.cst$kw$dbg_QMARK_,"null",cljs.core.cst$kw$list,"null",cljs.core.cst$kw$trim_DASH_comments_QMARK_,"null",cljs.core.cst$kw$max_DASH_hang_DASH_span,"null",cljs.core.cst$kw$record,"null",cljs.core.cst$kw$comment,"null",cljs.core.cst$kw$parse,"null",cljs.core.cst$kw$cwd_DASH_zprintrc_QMARK_,"null",cljs.core.cst$kw$parse_DASH_string_QMARK_,"null",cljs.core.cst$kw$url,"null",cljs.core.cst$kw$perf_DASH_vs_DASH_format,"null",cljs.core.cst$kw$style_DASH_map,"null",cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,"null",cljs.core.cst$kw$process_DASH_bang_DASH_zprint_QMARK_,"null",cljs.core.cst$kw$max_DASH_depth,"null",cljs.core.cst$kw$input,"null",cljs.core.cst$kw$vector_DASH_fn,"null",cljs.core.cst$kw$drop_QMARK_,"null",cljs.core.cst$kw$set,"null",cljs.core.cst$kw$dbg_DASH_bug_QMARK_,"null",cljs.core.cst$kw$fn_DASH_map,"null",cljs.core.cst$kw$version,"null",cljs.core.cst$kw$atom,"null",cljs.core.cst$kw$force_DASH_eol_DASH_blanks_QMARK_,"null",cljs.core.cst$kw$tab,"null",cljs.core.cst$kw$max_DASH_hang_DASH_count,"null",cljs.core.cst$kw$parallel_QMARK_,"null",cljs.core.cst$kw$delay,"null",cljs.core.cst$kw$map,"null",cljs.core.cst$kw$object,"null",cljs.core.cst$kw$reader_DASH_cond,"null",cljs.core.cst$kw$return_DASH_cvec_QMARK_,"null",cljs.core.cst$kw$zipper_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$clojure$core_SLASH_constantly,true)),cljs.spec.alpha.tuple_impl.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 76, [cljs.core.cst$kw$old_QMARK_,"null",cljs.core.cst$kw$format,"null",cljs.core.cst$kw$remove,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$max_DASH_length,"null",cljs.core.cst$kw$tuning,"null",cljs.core.cst$kw$fn_DASH_force_DASH_nl,"null",cljs.core.cst$kw$max_DASH_hang_DASH_depth,"null",cljs.core.cst$kw$future,"null",cljs.core.cst$kw$max_DASH_depth_DASH_string,"null",cljs.core.cst$kw$user_DASH_fn_DASH_map,"null",cljs.core.cst$kw$next_DASH_inner,"null",cljs.core.cst$kw$pair_DASH_fn,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$script,"null",cljs.core.cst$kw$promise,"null",cljs.core.cst$kw$spaces_QMARK_,"null",cljs.core.cst$kw$pair,"null",cljs.core.cst$kw$configured_QMARK_,"null",cljs.core.cst$kw$dbg_DASH_ge,"null",cljs.core.cst$kw$width,"null",cljs.core.cst$kw$uneval,"null",cljs.core.cst$kw$fn_DASH_name,"null",cljs.core.cst$kw$color_DASH_map,"null",cljs.core.cst$kw$color_QMARK_,"null",cljs.core.cst$kw$output,"null",cljs.core.cst$kw$agent,"null",cljs.core.cst$kw$do_DASH_in_DASH_hang_QMARK_,"null",cljs.core.cst$kw$search_DASH_config_QMARK_,"null",cljs.core.cst$kw$vector,"null",cljs.core.cst$kw$array,"null",cljs.core.cst$kw$styles_DASH_applied,"null",cljs.core.cst$kw$parse_DASH_string_DASH_all_QMARK_,"null",cljs.core.cst$kw$style,"null",cljs.core.cst$kw$dbg_DASH_print_QMARK_,"null",cljs.core.cst$kw$file_QMARK_,"null",cljs.core.cst$kw$fn_DASH_obj,"null",cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$spec,"null",cljs.core.cst$kw$test_DASH_for_DASH_eol_DASH_blanks_QMARK_,"null",cljs.core.cst$kw$binding,"null",cljs.core.cst$kw$cache,"null",cljs.core.cst$kw$dbg_DASH_local_QMARK_,"null",cljs.core.cst$kw$dbg_QMARK_,"null",cljs.core.cst$kw$list,"null",cljs.core.cst$kw$trim_DASH_comments_QMARK_,"null",cljs.core.cst$kw$max_DASH_hang_DASH_span,"null",cljs.core.cst$kw$record,"null",cljs.core.cst$kw$comment,"null",cljs.core.cst$kw$parse,"null",cljs.core.cst$kw$cwd_DASH_zprintrc_QMARK_,"null",cljs.core.cst$kw$parse_DASH_string_QMARK_,"null",cljs.core.cst$kw$url,"null",cljs.core.cst$kw$perf_DASH_vs_DASH_format,"null",cljs.core.cst$kw$style_DASH_map,"null",cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,"null",cljs.core.cst$kw$process_DASH_bang_DASH_zprint_QMARK_,"null",cljs.core.cst$kw$max_DASH_depth,"null",cljs.core.cst$kw$input,"null",cljs.core.cst$kw$vector_DASH_fn,"null",cljs.core.cst$kw$drop_QMARK_,"null",cljs.core.cst$kw$set,"null",cljs.core.cst$kw$dbg_DASH_bug_QMARK_,"null",cljs.core.cst$kw$fn_DASH_map,"null",cljs.core.cst$kw$version,"null",cljs.core.cst$kw$atom,"null",cljs.core.cst$kw$force_DASH_eol_DASH_blanks_QMARK_,"null",cljs.core.cst$kw$tab,"null",cljs.core.cst$kw$max_DASH_hang_DASH_count,"null",cljs.core.cst$kw$parallel_QMARK_,"null",cljs.core.cst$kw$delay,"null",cljs.core.cst$kw$map,"null",cljs.core.cst$kw$object,"null",cljs.core.cst$kw$reader_DASH_cond,"null",cljs.core.cst$kw$return_DASH_cvec_QMARK_,"null",cljs.core.cst$kw$zipper_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 76, [cljs.core.cst$kw$old_QMARK_,null,cljs.core.cst$kw$format,null,cljs.core.cst$kw$remove,null,cljs.core.cst$kw$indent,null,cljs.core.cst$kw$max_DASH_length,null,cljs.core.cst$kw$tuning,null,cljs.core.cst$kw$fn_DASH_force_DASH_nl,null,cljs.core.cst$kw$max_DASH_hang_DASH_depth,null,cljs.core.cst$kw$future,null,cljs.core.cst$kw$max_DASH_depth_DASH_string,null,cljs.core.cst$kw$user_DASH_fn_DASH_map,null,cljs.core.cst$kw$next_DASH_inner,null,cljs.core.cst$kw$pair_DASH_fn,null,cljs.core.cst$kw$extend,null,cljs.core.cst$kw$script,null,cljs.core.cst$kw$promise,null,cljs.core.cst$kw$spaces_QMARK_,null,cljs.core.cst$kw$pair,null,cljs.core.cst$kw$configured_QMARK_,null,cljs.core.cst$kw$dbg_DASH_ge,null,cljs.core.cst$kw$width,null,cljs.core.cst$kw$uneval,null,cljs.core.cst$kw$fn_DASH_name,null,cljs.core.cst$kw$color_DASH_map,null,cljs.core.cst$kw$color_QMARK_,null,cljs.core.cst$kw$output,null,cljs.core.cst$kw$agent,null,cljs.core.cst$kw$do_DASH_in_DASH_hang_QMARK_,null,cljs.core.cst$kw$search_DASH_config_QMARK_,null,cljs.core.cst$kw$vector,null,cljs.core.cst$kw$array,null,cljs.core.cst$kw$styles_DASH_applied,null,cljs.core.cst$kw$parse_DASH_string_DASH_all_QMARK_,null,cljs.core.cst$kw$style,null,cljs.core.cst$kw$dbg_DASH_print_QMARK_,null,cljs.core.cst$kw$file_QMARK_,null,cljs.core.cst$kw$fn_DASH_obj,null,cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,null,cljs.core.cst$kw$spec,null,cljs.core.cst$kw$test_DASH_for_DASH_eol_DASH_blanks_QMARK_,null,cljs.core.cst$kw$binding,null,cljs.core.cst$kw$cache,null,cljs.core.cst$kw$dbg_DASH_local_QMARK_,null,cljs.core.cst$kw$dbg_QMARK_,null,cljs.core.cst$kw$list,null,cljs.core.cst$kw$trim_DASH_comments_QMARK_,null,cljs.core.cst$kw$max_DASH_hang_DASH_span,null,cljs.core.cst$kw$record,null,cljs.core.cst$kw$comment,null,cljs.core.cst$kw$parse,null,cljs.core.cst$kw$cwd_DASH_zprintrc_QMARK_,null,cljs.core.cst$kw$parse_DASH_string_QMARK_,null,cljs.core.cst$kw$url,null,cljs.core.cst$kw$perf_DASH_vs_DASH_format,null,cljs.core.cst$kw$style_DASH_map,null,cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,null,cljs.core.cst$kw$process_DASH_bang_DASH_zprint_QMARK_,null,cljs.core.cst$kw$max_DASH_depth,null,cljs.core.cst$kw$input,null,cljs.core.cst$kw$vector_DASH_fn,null,cljs.core.cst$kw$drop_QMARK_,null,cljs.core.cst$kw$set,null,cljs.core.cst$kw$dbg_DASH_bug_QMARK_,null,cljs.core.cst$kw$fn_DASH_map,null,cljs.core.cst$kw$version,null,cljs.core.cst$kw$atom,null,cljs.core.cst$kw$force_DASH_eol_DASH_blanks_QMARK_,null,cljs.core.cst$kw$tab,null,cljs.core.cst$kw$max_DASH_hang_DASH_count,null,cljs.core.cst$kw$parallel_QMARK_,null,cljs.core.cst$kw$delay,null,cljs.core.cst$kw$map,null,cljs.core.cst$kw$object,null,cljs.core.cst$kw$reader_DASH_cond,null,cljs.core.cst$kw$return_DASH_cvec_QMARK_,null,cljs.core.cst$kw$zipper_QMARK_,null], null), null),cljs.core.constantly(true)], null)),new cljs.core.PersistentArrayMap(null, 7, [cljs.core.cst$kw$into,cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kind_DASH_form,cljs.core.cst$sym$cljs$core_SLASH_map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_cpred,(function (G__29820){
return cljs.core.map_QMARK_(G__29820);
}),cljs.core.cst$kw$kind,cljs.core.map_QMARK_,cljs.core.cst$kw$cljs$spec$alpha_SLASH_kfn,(function (i__28820__auto__,v__28821__auto__){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v__28821__auto__,(0));
}),cljs.core.cst$kw$cljs$spec$alpha_SLASH_conform_DASH_all,true,cljs.core.cst$kw$cljs$spec$alpha_SLASH_describe,cljs.core.list(cljs.core.cst$sym$cljs$spec$alpha_SLASH_map_DASH_of,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 76, [cljs.core.cst$kw$old_QMARK_,"null",cljs.core.cst$kw$format,"null",cljs.core.cst$kw$remove,"null",cljs.core.cst$kw$indent,"null",cljs.core.cst$kw$max_DASH_length,"null",cljs.core.cst$kw$tuning,"null",cljs.core.cst$kw$fn_DASH_force_DASH_nl,"null",cljs.core.cst$kw$max_DASH_hang_DASH_depth,"null",cljs.core.cst$kw$future,"null",cljs.core.cst$kw$max_DASH_depth_DASH_string,"null",cljs.core.cst$kw$user_DASH_fn_DASH_map,"null",cljs.core.cst$kw$next_DASH_inner,"null",cljs.core.cst$kw$pair_DASH_fn,"null",cljs.core.cst$kw$extend,"null",cljs.core.cst$kw$script,"null",cljs.core.cst$kw$promise,"null",cljs.core.cst$kw$spaces_QMARK_,"null",cljs.core.cst$kw$pair,"null",cljs.core.cst$kw$configured_QMARK_,"null",cljs.core.cst$kw$dbg_DASH_ge,"null",cljs.core.cst$kw$width,"null",cljs.core.cst$kw$uneval,"null",cljs.core.cst$kw$fn_DASH_name,"null",cljs.core.cst$kw$color_DASH_map,"null",cljs.core.cst$kw$color_QMARK_,"null",cljs.core.cst$kw$output,"null",cljs.core.cst$kw$agent,"null",cljs.core.cst$kw$do_DASH_in_DASH_hang_QMARK_,"null",cljs.core.cst$kw$search_DASH_config_QMARK_,"null",cljs.core.cst$kw$vector,"null",cljs.core.cst$kw$array,"null",cljs.core.cst$kw$styles_DASH_applied,"null",cljs.core.cst$kw$parse_DASH_string_DASH_all_QMARK_,"null",cljs.core.cst$kw$style,"null",cljs.core.cst$kw$dbg_DASH_print_QMARK_,"null",cljs.core.cst$kw$file_QMARK_,"null",cljs.core.cst$kw$fn_DASH_obj,"null",cljs.core.cst$kw$fn_DASH_gt2_DASH_force_DASH_nl,"null",cljs.core.cst$kw$spec,"null",cljs.core.cst$kw$test_DASH_for_DASH_eol_DASH_blanks_QMARK_,"null",cljs.core.cst$kw$binding,"null",cljs.core.cst$kw$cache,"null",cljs.core.cst$kw$dbg_DASH_local_QMARK_,"null",cljs.core.cst$kw$dbg_QMARK_,"null",cljs.core.cst$kw$list,"null",cljs.core.cst$kw$trim_DASH_comments_QMARK_,"null",cljs.core.cst$kw$max_DASH_hang_DASH_span,"null",cljs.core.cst$kw$record,"null",cljs.core.cst$kw$comment,"null",cljs.core.cst$kw$parse,"null",cljs.core.cst$kw$cwd_DASH_zprintrc_QMARK_,"null",cljs.core.cst$kw$parse_DASH_string_QMARK_,"null",cljs.core.cst$kw$url,"null",cljs.core.cst$kw$perf_DASH_vs_DASH_format,"null",cljs.core.cst$kw$style_DASH_map,"null",cljs.core.cst$kw$fn_DASH_gt3_DASH_force_DASH_nl,"null",cljs.core.cst$kw$process_DASH_bang_DASH_zprint_QMARK_,"null",cljs.core.cst$kw$max_DASH_depth,"null",cljs.core.cst$kw$input,"null",cljs.core.cst$kw$vector_DASH_fn,"null",cljs.core.cst$kw$drop_QMARK_,"null",cljs.core.cst$kw$set,"null",cljs.core.cst$kw$dbg_DASH_bug_QMARK_,"null",cljs.core.cst$kw$fn_DASH_map,"null",cljs.core.cst$kw$version,"null",cljs.core.cst$kw$atom,"null",cljs.core.cst$kw$force_DASH_eol_DASH_blanks_QMARK_,"null",cljs.core.cst$kw$tab,"null",cljs.core.cst$kw$max_DASH_hang_DASH_count,"null",cljs.core.cst$kw$parallel_QMARK_,"null",cljs.core.cst$kw$delay,"null",cljs.core.cst$kw$map,"null",cljs.core.cst$kw$object,"null",cljs.core.cst$kw$reader_DASH_cond,"null",cljs.core.cst$kw$return_DASH_cvec_QMARK_,"null",cljs.core.cst$kw$zipper_QMARK_,"null"], null), null),cljs.core.list(cljs.core.cst$sym$cljs$core_SLASH_constantly,true))], null),null)], null),null));
/**
 * If they are both numbers and are equal, or the first is a number 
 *   and the second one is a pred.
 */
zprint.spec.numbers_or_number_pred_QMARK_ = (function zprint$spec$numbers_or_number_pred_QMARK_(x,y){
return ((typeof x === 'number') && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.cst$kw$cljs$spec$alpha_SLASH_pred)))));
});
/**
 * Return the key sequence for this problem.  This is totally empiric, and
 *   not based on any real understanding of what explain-data is returning as
 *   the problem.  It seems to stick integers into the :in for no obvious reason.
 *   This version has three heuristics, described in the comments in the code.
 */
zprint.spec.problem_ks = (function zprint$spec$problem_ks(problem){
var path = cljs.core.cst$kw$path.cljs$core$IFn$_invoke$arity$1(problem);
var last_path = cljs.core.last(path);
var last_num = ((typeof last_path === 'number')?last_path:false);
var ks = cljs.core.cst$kw$in.cljs$core$IFn$_invoke$arity$1(problem);
var ks__$1 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(cljs.core.count(path),ks));
var last_ks = cljs.core.last(ks__$1);
var ks__$2 = ((((typeof last_ks === 'number') && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(last_path,cljs.core.cst$kw$cljs$spec$alpha_SLASH_pred))))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.butlast(ks__$1)):ks__$1);
var ks_equal = cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__29821_SHARP_,p2__29822_SHARP_){
if(zprint.spec.numbers_or_number_pred_QMARK_(p1__29821_SHARP_,p2__29822_SHARP_)){
return p1__29821_SHARP_;
} else {
return null;
}
}),ks__$2,path);
var matching_index = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__29824_SHARP_,p2__29823_SHARP_){
if(typeof p2__29823_SHARP_ === 'number'){
return cljs.core.reduced(p1__29824_SHARP_);
} else {
return (p1__29824_SHARP_ + (1));
}
}),(0),ks_equal);
var matching_index__$1 = (((matching_index < cljs.core.count(ks__$2)))?matching_index:null);
var ks__$3 = (cljs.core.truth_((function (){var and__4115__auto__ = matching_index__$1;
if(cljs.core.truth_(and__4115__auto__)){
return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ks__$2,matching_index__$1),cljs.core.cst$kw$val.cljs$core$IFn$_invoke$arity$1(problem));
} else {
return and__4115__auto__;
}
})())?(function (){var vec__29825 = cljs.core.split_at(matching_index__$1,ks__$2);
var begin = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29825,(0),null);
var end = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29825,(1),null);
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(begin,cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),end)));
})():ks__$2);
return ks__$3;
});
/**
 * Take a key-sequence and a value, and decide if we want to 
 *   call it a value or a key.
 */
zprint.spec.ks_phrase = (function zprint$spec$ks_phrase(problem){
var val = cljs.core.cst$kw$val.cljs$core$IFn$_invoke$arity$1(problem);
var ks = zprint.spec.problem_ks(problem);
if(cljs.core.truth_((function (){var fexpr__29828 = cljs.core.set(ks);
return (fexpr__29828.cljs$core$IFn$_invoke$arity$1 ? fexpr__29828.cljs$core$IFn$_invoke$arity$1(val) : fexpr__29828.call(null,val));
})())){
return ["In the key-sequence ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ks)," the key ",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([val], 0))].join('');
} else {
return ["The value of the key-sequence ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ks)," -> ",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([val], 0))].join('');
}
});
/**
 * Turn some predicates into something more understandable.
 */
zprint.spec.map_pred = (function zprint$spec$map_pred(pred){
var G__29829 = pred;
switch (G__29829) {
case "zboolean?":
return "boolean";

break;
case "zprint.spec/ansi-codes?":
return "ansi-codes";

break;
case "zprint.spec/zboolean?":
return "boolean";

break;
case "clojure.core/set?":
return "set";

break;
case "clojure.core/sequential?":
return "sequential";

break;
case "clojure.core/number?":
return "number";

break;
case "clojure.core/map?":
return "map";

break;
case "clojure.core/keyword?":
return "keyword";

break;
case "cljs.core/set?":
return "set";

break;
case "cljs.core/sequential?":
return "sequential";

break;
case "cljs.core/number?":
return "number";

break;
case "cljs.core/map?":
return "map";

break;
case "cljs.core/keyword?":
return "keyword";

break;
case "map?":
return "map";

break;
case "string?":
return "string";

break;
default:
return pred;

}
});
/**
 * Take a single problem and turn it into a phrase.
 */
zprint.spec.phrase_problem_str = (function zprint$spec$phrase_problem_str(problem,last_QMARK_){
if(clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$pred.cljs$core$IFn$_invoke$arity$1(problem)),"?")){
return [zprint.spec.ks_phrase((cljs.core.truth_(last_QMARK_)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(problem,cljs.core.cst$kw$in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.last(cljs.core.cst$kw$in.cljs$core$IFn$_invoke$arity$1(problem))], null)):problem))," was not a ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(zprint.spec.map_pred(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$pred.cljs$core$IFn$_invoke$arity$1(problem))))].join('');
} else {
if(cljs.core.set_QMARK_(cljs.core.cst$kw$pred.cljs$core$IFn$_invoke$arity$1(problem))){
if((cljs.core.count(cljs.core.cst$kw$pred.cljs$core$IFn$_invoke$arity$1(problem)) < (10))){
return [zprint.spec.ks_phrase(problem)," was not one of ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$pred.cljs$core$IFn$_invoke$arity$1(problem))].join('');
} else {
return [zprint.spec.ks_phrase(problem)," was not recognized as valid!"].join('');
}
} else {
return "what?";

}
}
});
/**
 * Lowercase the first character of a string.
 */
zprint.spec.lower_first = (function zprint$spec$lower_first(s){
if(cljs.core.truth_(s)){
return [clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),(1))),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(1))].join('');
} else {
return null;
}
});
/**
 * Try to do a better job of explaining spec problems. This is a totally
 *   heuristic hack to try to extract useful information from spec problems.
 */
zprint.spec.explain_more = (function zprint$spec$explain_more(explain_data_return){
if(cljs.core.truth_(explain_data_return)){
var problem_list = cljs.core.cst$kw$cljs$spec$alpha_SLASH_problems.cljs$core$IFn$_invoke$arity$1(explain_data_return);
var problem_list__$1 = cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__29831_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("nil?",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.cst$kw$pred.cljs$core$IFn$_invoke$arity$1(p1__29831_SHARP_)));
}),problem_list);
var val_map = cljs.core.group_by(cljs.core.cst$kw$val,problem_list__$1);
var key_via_len_seq = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__29838){
var vec__29839 = p__29838;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29839,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29839,(1),null);
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.min,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count,cljs.core.cst$kw$via),v))], null);
}),val_map);
var vec__29832 = cljs.core.first(cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.second,key_via_len_seq));
var key_choice = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29832,(0),null);
var min_via = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29832,(1),null);
var problem = cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,min_via),cljs.core.count,cljs.core.cst$kw$via),(val_map.cljs$core$IFn$_invoke$arity$1 ? val_map.cljs$core$IFn$_invoke$arity$1(key_choice) : val_map.call(null,key_choice))));
var vec__29835 = cljs.core.second(cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.second,key_via_len_seq));
var key_choice2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29835,(0),null);
var min_via2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29835,(1),null);
var problem2 = cljs.core.first(cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,min_via2),cljs.core.count,cljs.core.cst$kw$via),(val_map.cljs$core$IFn$_invoke$arity$1 ? val_map.cljs$core$IFn$_invoke$arity$1(key_choice2) : val_map.call(null,key_choice2))));
var problem_str = zprint.spec.phrase_problem_str(problem,null);
var problem_str__$1 = (cljs.core.truth_(cljs.core.re_find(/valid/,problem_str))?(function (){var problem_str_2 = zprint.spec.phrase_problem_str(problem2,cljs.core.cst$kw$last);
if(cljs.core.truth_(cljs.core.re_find(/was not a/,problem_str_2))){
return [problem_str," because ",zprint.spec.lower_first(zprint.spec.phrase_problem_str(problem2,cljs.core.cst$kw$last))].join('');
} else {
return problem_str;
}
})():problem_str);
return problem_str__$1;
} else {
return null;
}
});
/**
 * Examine an options map prior to validation and if :coerce-to-false
 *   appears as a key, scan the map for keys which are a keyword with
 *   zprint.spec/:boolean as their spec, and if any are found, if their
 *   values are boolean, do not change them.  If their values are not
 *   boolean, replace those whose values are equal to the value of
 *   :coerce-to-false with false, and all others (that are found) with
 *   true.  Return the modified map without :coerce-to-false.  If there
 *   are any problems with this transformation, return the unmodified
 *   map.
 */
zprint.spec.coerce_to_boolean = (function zprint$spec$coerce_to_boolean(options){
var coerce_to_false = ((cljs.core.map_QMARK_(options))?cljs.core.cst$kw$coerce_DASH_to_DASH_false.cljs$core$IFn$_invoke$arity$1(options):null);
if(cljs.core.not(coerce_to_false)){
return options;
} else {
try{return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(clojure.walk.prewalk((function (p1__29842_SHARP_){
if(((cljs.core.map_entry_QMARK_(p1__29842_SHARP_)) && ((cljs.core.first(p1__29842_SHARP_) instanceof cljs.core.Keyword)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.spec.alpha.get_spec(cljs.core.keyword.cljs$core$IFn$_invoke$arity$2("zprint.spec",cljs.core.name(cljs.core.first(p1__29842_SHARP_)))),cljs.core.cst$kw$zprint$spec_SLASH_boolean)))){
if(zprint.spec.zboolean_QMARK_(cljs.core.second(p1__29842_SHARP_))){
return cljs.core.first(cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first(p1__29842_SHARP_),cljs.core.second(p1__29842_SHARP_)]));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__29842_SHARP_),coerce_to_false)){
return cljs.core.first(cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first(p1__29842_SHARP_),false]));
} else {
return cljs.core.first(cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first(p1__29842_SHARP_),true]));
}
}
} else {
return p1__29842_SHARP_;
}
}),options),cljs.core.cst$kw$coerce_DASH_to_DASH_false);
}catch (e29843){var e = e29843;
return options;
}}
});
/**
 * Using spec defined above, validate the given options map.  Return
 *   nil if no errors, or a string containing errors if any. If :coerce-to-false
 *   appears as a key, scan the map for keys which are keyword with 
 *   zprint.spec/:boolean as their spec, and if any are found replace their
 *   values with the value of :coerce-to-false.
 */
zprint.spec.validate_basic = (function zprint$spec$validate_basic(var_args){
var G__29845 = arguments.length;
switch (G__29845) {
case 2:
return zprint.spec.validate_basic.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));

break;
case 1:
return zprint.spec.validate_basic.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

(zprint.spec.validate_basic.cljs$core$IFn$_invoke$arity$2 = (function (options,source_str){
try{if(cljs.spec.alpha.valid_QMARK_.cljs$core$IFn$_invoke$arity$2(cljs.core.cst$kw$zprint$spec_SLASH_options,options)){
return null;
} else {
if(cljs.core.truth_(source_str)){
return ["In ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(source_str),", ",zprint.spec.explain_more(cljs.spec.alpha.explain_data(cljs.core.cst$kw$zprint$spec_SLASH_options,options))].join('');
} else {
return zprint.spec.explain_more(cljs.spec.alpha.explain_data(cljs.core.cst$kw$zprint$spec_SLASH_options,options));
}
}
}catch (e29846){var e = e29846;
if(cljs.core.truth_(source_str)){
return ["In ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(source_str),", validation failed completely because: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join('');
} else {
return ["Validation failed completely because: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join('');
}
}}));

(zprint.spec.validate_basic.cljs$core$IFn$_invoke$arity$1 = (function (options){
return zprint.spec.validate_basic.cljs$core$IFn$_invoke$arity$2(options,null);
}));

(zprint.spec.validate_basic.cljs$lang$maxFixedArity = 2);

