["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$daiquiri.normalize","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^:","^:","~$util","~$daiquiri.util","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$map-lookup?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","~:line",12,"~:column",7,"~:end-line",12,"~:end-column",18,"~:arglists",["~#list",["~$quote",["^I",[["~$x"]]]]],"~:doc","Returns true if `x` is a map lookup form, otherwise false."],"^5","~$daiquiri.normalize/map-lookup?","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",18,"~:method-params",["^I",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^E",1,"~:variadic?",false,"^D",12,"~:ret-tag","~$boolean","^F",12,"~:max-fixed-arity",1,"~:fn-var",true,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^K","Returns true if `x` is a map lookup form, otherwise false."],"~$attributes",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",54,"^E",7,"^F",54,"^G",17,"^H",["^I",["^J",["^I",[["~$attrs"]]]]],"^K","Normalize the `attrs` of an element."],"^5","~$daiquiri.normalize/attributes","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",17,"^M",["^I",[["^V"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^P",false,"^D",54,"^Q",["^4",[null,"~$clj","~$any"]],"^F",54,"^S",1,"^T",true,"^H",["^I",["^J",["^I",[["^V"]]]]],"^K","Normalize the `attrs` of an element."],"~$children",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",97,"^E",7,"^F",97,"^G",15,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^K","Normalize the children of a HTML element."],"^5","~$daiquiri.normalize/children","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",15,"^M",["^I",[["~$x"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^P",false,"^D",97,"^Q","~$cljs.core/LazySeq","^F",97,"^S",1,"^T",true,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^K","Normalize the children of a HTML element."],"~$element",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",133,"^E",7,"^F",133,"^G",14,"^H",["^I",["^J",["^I",[[["~$tag","~$&","~$content"]]]]]],"^K","Ensure an element vector is of the form [tag-name attrs content]."],"^5","~$daiquiri.normalize/element","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",14,"^M",["^I",[["~$p__9984"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^P",false,"^D",133,"^Q","~$cljs.core/IVector","^F",133,"^S",1,"^T",true,"^H",["^I",["^J",["^I",[[["^12","~$&","^13"]]]]]],"^K","Ensure an element vector is of the form [tag-name attrs content]."],"~$match-tag",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",77,"^E",7,"^F",77,"^G",16,"^H",["^I",["^J",["^I",[["~$s"]]]]],"^K","Match `s` as a CSS tag and return a vector of tag name, CSS id and\n  CSS classes."],"^5","~$daiquiri.normalize/match-tag","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",16,"^M",["^I",[["~$s"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^P",false,"^D",77,"^Q","^16","^F",77,"^S",1,"^T",true,"^H",["^I",["^J",["^I",[["~$s"]]]]],"^K","Match `s` as a CSS tag and return a vector of tag name, CSS id and\n  CSS classes."],"~$attrs?",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",127,"^E",8,"^F",127,"^G",14,"~:private",true,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^K","Returns true if `x` are the attributes of an HTML element,\n  otherwise false."],"^1:",true,"^5","~$daiquiri.normalize/attrs?","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",14,"^M",["^I",[["~$x"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^P",false,"^D",127,"^Q","^R","^F",127,"^S",1,"^T",true,"^H",["^I",["^J",["^I",[["~$x"]]]]],"^K","Returns true if `x` are the attributes of an HTML element,\n  otherwise false."],"~$normalize-class",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",17,"^E",7,"^F",17,"^G",22,"^H",["^I",["^J",["^I",[["~$class"]]]]],"^K","Normalize `class` into a vector of classes."],"^5","~$daiquiri.normalize/normalize-class","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",22,"^M",["^I",[["^1="]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^P",false,"^D",17,"^Q",["^4",[null,"^X","^16","~$clj-nil"]],"^F",17,"^S",1,"^T",true,"^H",["^I",["^J",["^I",[["^1="]]]]],"^K","Normalize `class` into a vector of classes."],"~$strip-css",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",71,"^E",7,"^F",71,"^G",16,"^H",["^I",["^J",["^I",[["~$s"]]]]],"^K","Strip the # and . characters from the beginning of `s`."],"^5","~$daiquiri.normalize/strip-css","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",16,"^M",["^I",[["~$s"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^P",false,"^D",71,"^Q",["^4",["~$string","^1?"]],"^F",71,"^S",1,"^T",true,"^H",["^I",["^J",["^I",[["~$s"]]]]],"^K","Strip the # and . characters from the beginning of `s`."],"~$class-name",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",5,"^E",7,"^F",5,"^G",17,"^H",["^I",["^J",["^I",[["~$x"]]]]]],"^5","~$daiquiri.normalize/class-name","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",17,"^M",["^I",[["~$x"]]],"^N",null,"^O",["^I",[null,null]],"^E",1,"^P",false,"^D",5,"^Q",["^4",[null,"^1B"]],"^F",5,"^S",1,"^T",true,"^H",["^I",["^J",["^I",[["~$x"]]]]]],"~$merge-with-class",["^ ","^A",null,"^B",["^ ","^C","/Users/Torgeir/Code/guitar/resources/public/cljs-out/dev/daiquiri/normalize.cljc","^D",61,"^E",7,"^F",61,"^G",23,"^H",["^I",["^J",["^I",[["~$&","~$maps"]]]]],"^K","Like clojure.core/merge but concatenate :class entries.","~:top-fn",["^ ","^P",true,"~:fixed-arity",0,"^S",0,"^M",[["^I",["^1F"]]],"^H",["^I",[["~$&","^1F"]]],"^O",["^I",[null]]]],"^5","~$daiquiri.normalize/merge-with-class","^C","resources/public/cljs-out/dev/daiquiri/normalize.cljc","^G",23,"^1G",["^ ","^P",true,"^1H",0,"^S",0,"^M",[["^I",["^1F"]]],"^H",["^I",[["~$&","^1F"]]],"^O",["^I",[null]]],"^M",[["^I",["^1F"]]],"^N",null,"^1H",0,"^O",["^I",[null]],"^E",1,"^P",true,"~:methods",[["^ ","^1H",0,"^P",true,"~:tag",["^4",[null,"^X","^Y","^1?"]]]],"^D",61,"^Q","^Y","^F",61,"^S",0,"^T",true,"^H",["^I",[["~$&","^1F"]]],"^K","Like clojure.core/merge but concatenate :class entries."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:else","~:content","~:default","~:id","~:class","^1K"]],"~:order",["^1P","^1T","^1K","^1R","^1Q","^1S"]],"^K",null]